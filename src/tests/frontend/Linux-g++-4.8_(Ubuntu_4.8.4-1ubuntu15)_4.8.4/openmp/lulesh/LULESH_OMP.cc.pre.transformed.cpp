# 1 "LULESH_OMP.cc.pre.transformed.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h" 1 3 4
# 147 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 212 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 1 "<command-line>" 2
# 1 "LULESH_OMP.cc.pre.transformed.cpp"
static int ____chimes_does_checkpoint_CalcVolumeForceForElems_npm = 1;
static int ____chimes_does_checkpoint_AllocateElemTemporary_npm = 1;
static int ____chimes_does_checkpoint_IntegrateStressForElems_npm = 1;
static int ____chimes_does_checkpoint_CalcElemVolumeScalar_npm = 1;
static int ____chimes_does_checkpoint_LagrangeLeapFrog_npm = 1;
static int ____chimes_does_checkpoint_CalcKinematicsForElems_npm = 1;
static int ____chimes_does_checkpoint_CalcHourglassControlForElems_npm = 1;
static int ____chimes_does_checkpoint_CalcElemVolumeDerivative_npm = 1;
static int ____chimes_does_checkpoint_CalcPressureForElems_npm = 1;
static int ____chimes_does_checkpoint_AllocateNodeElemIndexes_npm = 1;
static int ____chimes_does_checkpoint_CalcAccelerationForNodes_npm = 1;
static int ____chimes_does_checkpoint_ApplyAccelerationBoundaryConditionsForNodes_npm = 1;
static int ____chimes_does_checkpoint_CalcHydroConstraintForElems_npm = 1;
static int ____chimes_does_checkpoint_EvalEOSForElems_npm = 1;
static int ____chimes_does_checkpoint_FABS_npm = 1;
static int ____chimes_does_checkpoint_CalcLagrangeElements_npm = 1;
static int ____chimes_does_checkpoint_UpdateVolumesForElems_npm = 1;
static int ____chimes_does_checkpoint_CalcTimeConstraintsForElems_npm = 1;
static int ____chimes_does_checkpoint_VoluDer_npm = 1;
static int ____chimes_does_checkpoint_get_num_threads_npm = 1;
static int ____chimes_does_checkpoint_CalcElemShapeFunctionDerivatives_npm = 1;
static int ____chimes_does_checkpoint_CalcMonotonicQGradientsForElems_npm = 1;
static int ____chimes_does_checkpoint_CalcMonotonicQRegionForElems_npm = 1;
static int ____chimes_does_checkpoint_TimeIncrement_npm = 1;
static int ____chimes_does_checkpoint_SumElemStressesToNodeForces_npm = 1;
static int ____chimes_does_checkpoint_CBRT_npm = 1;
static int ____chimes_does_checkpoint_LagrangeElements_npm = 1;
static int ____chimes_does_checkpoint_AllocateNodesets_npm = 1;
static int ____chimes_does_checkpoint_CalcCourantConstraintForElems_npm = 1;
static int ____chimes_does_checkpoint_AreaFace_npm = 1;
static int ____chimes_does_checkpoint_CalcElemVolume_npm = 1;
static int ____chimes_does_checkpoint_CalcElemVelocityGrandient_npm = 1;
static int ____chimes_does_checkpoint_CollectDomainNodesToElemNodes_npm = 1;
static int ____chimes_does_checkpoint_CalcMonotonicQForElems_npm = 1;
static int ____chimes_does_checkpoint_AllocateElemPersistent_npm = 1;
static int ____chimes_does_checkpoint_CalcPositionForNodes_npm = 1;
static int ____chimes_does_checkpoint_CalcForceForNodes_npm = 1;
static int ____chimes_does_checkpoint_SumElemFaceNormal_npm = 1;
static int ____chimes_does_checkpoint_ApplyMaterialPropertiesForElems_npm = 1;
static int ____chimes_does_checkpoint_CalcVelocityForNodes_npm = 1;
static int ____chimes_does_checkpoint_AllocateNodalPersistent_npm = 1;
static int ____chimes_does_checkpoint_InitStressTermsForElems_npm = 1;
static int ____chimes_does_checkpoint_CalcElemNodeNormals_npm = 1;
static int ____chimes_does_checkpoint_SQRT_npm = 1;
static int ____chimes_does_checkpoint_CalcSoundSpeedForElems_npm = 1;
static int ____chimes_does_checkpoint_CalcElemCharacteristicLength_npm = 1;
static int ____chimes_does_checkpoint_CalcEnergyForElems_npm = 1;
static int ____chimes_does_checkpoint_CalcQForElems_npm = 1;
static int ____chimes_does_checkpoint_LagrangeNodal_npm = 1;
static int ____chimes_does_checkpoint_CalcFBHourglassForceForElems_npm = 1;
static int ____chimes_does_checkpoint_CalcElemFBHourglassForce_npm = 1;

static int ____must_checkpoint_main_x_local_0 = 2;
static int ____must_checkpoint_CalcKinematicsForElems_B_0 = 2;
static int ____must_checkpoint_CalcKinematicsForElems_x_local_0 = 2;
static int ____must_checkpoint_IntegrateStressForElems_B_0 = 2;
static int ____must_checkpoint_CalcHourglassControlForElems_x1_0 = 2;
static int ____must_checkpoint_CalcFBHourglassForceForElems_hgfx_0 = 2;

static int ____must_manage_CalcVolumeForceForElems = 2;
static int ____must_manage_AllocateElemTemporary = 2;
static int ____must_manage_IntegrateStressForElems = 2;
static int ____must_manage_CalcTimeConstraintsForElems = 2;
static int ____must_manage_CalcKinematicsForElems = 2;
static int ____must_manage_CalcHourglassControlForElems = 2;
static int ____must_manage_CalcElemVolumeDerivative = 2;
static int ____must_manage_CalcPressureForElems = 2;
static int ____must_manage_AllocateNodeElemIndexes = 2;
static int ____must_manage_CalcAccelerationForNodes = 2;
static int ____must_manage_CalcElemVolumeScalar = 2;
static int ____must_manage_EvalEOSForElems = 2;
static int ____must_manage_FABS = 2;
static int ____must_manage_CalcLagrangeElements = 2;
static int ____must_manage_VoluDer = 2;
static int ____must_manage_CalcElemFBHourglassForce = 2;
static int ____must_manage_UpdateVolumesForElems = 2;
static int ____must_manage_get_num_threads = 2;
static int ____must_manage_CalcElemShapeFunctionDerivatives = 2;
static int ____must_manage_CBRT = 2;
static int ____must_manage_CalcMonotonicQRegionForElems = 2;
static int ____must_manage_InitStressTermsForElems = 2;
static int ____must_manage_TimeIncrement = 2;
static int ____must_manage_SumElemStressesToNodeForces = 2;
static int ____must_manage_CalcMonotonicQGradientsForElems = 2;
static int ____must_manage_LagrangeElements = 2;
static int ____must_manage_AllocateNodesets = 2;
static int ____must_manage_CalcCourantConstraintForElems = 2;
static int ____must_manage_AreaFace = 2;
static int ____must_manage_CalcElemVolume = 2;
static int ____must_manage_CalcPositionForNodes = 2;
static int ____must_manage_CalcElemVelocityGrandient = 2;
static int ____must_manage_CollectDomainNodesToElemNodes = 2;
static int ____must_manage_CalcMonotonicQForElems = 2;
static int ____must_manage_AllocateElemPersistent = 2;
static int ____must_manage_CalcHydroConstraintForElems = 2;
static int ____must_manage_CalcForceForNodes = 2;
static int ____must_manage_SumElemFaceNormal = 2;
static int ____must_manage_ApplyMaterialPropertiesForElems = 2;
static int ____must_manage_CalcVelocityForNodes = 2;
static int ____must_manage_AllocateNodalPersistent = 2;
static int ____must_manage_LagrangeLeapFrog = 2;
static int ____must_manage_CalcElemNodeNormals = 2;
static int ____must_manage_SQRT = 2;
static int ____must_manage_CalcSoundSpeedForElems = 2;
static int ____must_manage_CalcElemCharacteristicLength = 2;
static int ____must_manage_CalcEnergyForElems = 2;
static int ____must_manage_CalcQForElems = 2;
static int ____must_manage_LagrangeNodal = 2;
static int ____must_manage_CalcFBHourglassForceForElems = 2;
static int ____must_manage_ApplyAccelerationBoundaryConditionsForNodes = 2;

static unsigned ____alias_loc_id_0;
static unsigned ____alias_loc_id_1;
static unsigned ____alias_loc_id_2;
static unsigned ____alias_loc_id_3;
static unsigned ____alias_loc_id_4;
static unsigned ____alias_loc_id_5;
static unsigned ____alias_loc_id_6;
static unsigned ____alias_loc_id_7;
static unsigned ____alias_loc_id_8;
static unsigned ____alias_loc_id_9;
static unsigned ____alias_loc_id_10;
static unsigned ____alias_loc_id_11;
static unsigned ____alias_loc_id_12;
static unsigned ____alias_loc_id_13;
static unsigned ____alias_loc_id_14;
static unsigned ____alias_loc_id_15;
static unsigned ____alias_loc_id_16;
static unsigned ____alias_loc_id_17;
static unsigned ____alias_loc_id_18;
static unsigned ____alias_loc_id_19;
static unsigned ____alias_loc_id_20;
static unsigned ____alias_loc_id_21;
static unsigned ____alias_loc_id_22;
static unsigned ____alias_loc_id_23;
static unsigned ____alias_loc_id_24;
static unsigned ____alias_loc_id_25;
static unsigned ____alias_loc_id_26;
static unsigned ____alias_loc_id_27;
static unsigned ____alias_loc_id_28;
static unsigned ____alias_loc_id_29;
static unsigned ____alias_loc_id_30;
static unsigned ____alias_loc_id_31;
static unsigned ____alias_loc_id_32;
static unsigned ____alias_loc_id_33;
static unsigned ____alias_loc_id_34;
static unsigned ____alias_loc_id_35;
static unsigned ____alias_loc_id_36;
static unsigned ____alias_loc_id_37;
static unsigned ____alias_loc_id_38;
static unsigned ____alias_loc_id_39;
static unsigned ____alias_loc_id_40;
static unsigned ____alias_loc_id_41;
static unsigned ____alias_loc_id_42;
static unsigned ____alias_loc_id_43;
static unsigned ____alias_loc_id_44;
static unsigned ____alias_loc_id_45;
static unsigned ____alias_loc_id_46;
static unsigned ____alias_loc_id_47;
static unsigned ____alias_loc_id_48;
static unsigned ____alias_loc_id_49;
static unsigned ____alias_loc_id_50;
# 1 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1 "/tmp/chimes-frontend//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "/home/mg1/chimes/src/libchimes/libchimes.h" 1



# 1 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h" 1 3 4
# 147 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 212 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 5 "/home/mg1/chimes/src/libchimes/libchimes.h" 2


extern void init_chimes(int argc, char **argv);
extern void checkpoint_transformed(int lbl, unsigned loc_id);

extern void *translate_fptr(void *fptr, int lbl, unsigned loc_id,
        size_t return_alias, int n_params, ...);
extern void calling_npm(const char *name, unsigned loc_id);
extern void calling(void *func_ptr, int lbl, unsigned loc_id,
        size_t set_return_alias, unsigned naliases, ...);
extern int get_next_call();
extern int new_stack(void *func_ptr, const char *funcname, int *conditional,
        unsigned n_local_arg_aliases, unsigned nargs, ...);
extern void init_module(size_t module_id, int n_contains_mappings, int nfunctions,
        int nvars, int n_change_locs, int n_provided_npm_functions,
        int n_external_npm_functions, int n_npm_conditionals,
        int n_static_merges, int n_dynamic_merges, int nstructs, ...);
extern void rm_stack(bool has_return_alias, size_t returned_alias,
        const char *funcname, int *conditional, unsigned loc_id, int disabled,
        bool is_allocator);
extern void register_stack_var(const char *mangled_name, int *cond_registration,
        const char *full_type, void *ptr, size_t size, int is_ptr,
        int is_struct, int n_ptr_fields, ...);
extern void register_stack_vars(int nvars, ...);
extern void register_global_var(const char *mangled_name, const char *full_type,
        void *ptr, size_t size, int is_ptr, int is_struct, size_t group, int n_ptr_fields,
        ...);
extern void register_constant(size_t const_id, void *address,
        size_t length);
extern int alias_group_changed(unsigned loc_id);
extern void malloc_helper(const void *ptr, size_t nbytes, size_t group, int is_ptr,
        int is_struct, ...);
extern void calloc_helper(const void *ptr, size_t num, size_t size, size_t group, int is_ptr,
        int is_struct, ...);
extern void realloc_helper(const void *new_ptr, const void *old_ptr,
        void *header, size_t nbytes, size_t group, int is_ptr, int is_struct,
        ...);
extern void free_helper(const void *ptr, size_t group);
extern bool disable_current_thread();
extern void reenable_current_thread(bool was_disabled);
extern void thread_leaving();
extern void *get_thread_ctx();

extern unsigned entering_omp_parallel(unsigned lbl, size_t *region_id,
        unsigned nlocals, ...);
extern void register_thread_local_stack_vars(unsigned relation,
        unsigned parent, void *parent_ctx_ptr, unsigned threads_in_region,
        unsigned parent_stack_depth,
        size_t region_id, unsigned nlocals, ...);
extern void leaving_omp_parallel(unsigned expected_parent_stack_depth,
        size_t region_id, int is_parallel_for);
extern unsigned get_parent_vars_stack_depth();
extern unsigned get_thread_stack_depth();

extern void chimes_error();
# 69 "/home/mg1/chimes/src/libchimes/libchimes.h"
extern "C" {
extern int omp_get_thread_num (void) throw ();
extern int omp_get_num_threads(void) throw ();
}
inline unsigned LIBCHIMES_THREAD_NUM() { return omp_get_thread_num(); }
inline unsigned LIBCHIMES_NUM_THREADS() { return omp_get_num_threads(); }





extern int ____chimes_replaying;
# 1 "<command-line>" 2
# 1 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 73 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1 "/usr/include/math.h" 1 3 4
# 26 "/usr/include/math.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 364 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
# 402 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 403 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 365 "/usr/include/features.h" 2 3 4
# 388 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
# 389 "/usr/include/features.h" 2 3 4
# 27 "/usr/include/math.h" 2 3 4

extern "C" {



# 1 "/usr/include/x86_64-linux-gnu/bits/huge_val.h" 1 3 4
# 33 "/usr/include/math.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/huge_valf.h" 1 3 4
# 35 "/usr/include/math.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/huge_vall.h" 1 3 4
# 36 "/usr/include/math.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/inf.h" 1 3 4
# 39 "/usr/include/math.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/nan.h" 1 3 4
# 42 "/usr/include/math.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 3 4
typedef float float_t;
typedef double double_t;
# 46 "/usr/include/math.h" 2 3 4
# 69 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 1 3 4
# 52 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4


extern double acos (double __x) throw (); extern double __acos (double __x) throw ();

extern double asin (double __x) throw (); extern double __asin (double __x) throw ();

extern double atan (double __x) throw (); extern double __atan (double __x) throw ();

extern double atan2 (double __y, double __x) throw (); extern double __atan2 (double __y, double __x) throw ();


extern double cos (double __x) throw (); extern double __cos (double __x) throw ();

extern double sin (double __x) throw (); extern double __sin (double __x) throw ();

extern double tan (double __x) throw (); extern double __tan (double __x) throw ();




extern double cosh (double __x) throw (); extern double __cosh (double __x) throw ();

extern double sinh (double __x) throw (); extern double __sinh (double __x) throw ();

extern double tanh (double __x) throw (); extern double __tanh (double __x) throw ();




extern void sincos (double __x, double *__sinx, double *__cosx) throw (); extern void __sincos (double __x, double *__sinx, double *__cosx) throw ()
                                                           ;





extern double acosh (double __x) throw (); extern double __acosh (double __x) throw ();

extern double asinh (double __x) throw (); extern double __asinh (double __x) throw ();

extern double atanh (double __x) throw (); extern double __atanh (double __x) throw ();







extern double exp (double __x) throw (); extern double __exp (double __x) throw ();


extern double frexp (double __x, int *__exponent) throw (); extern double __frexp (double __x, int *__exponent) throw ();


extern double ldexp (double __x, int __exponent) throw (); extern double __ldexp (double __x, int __exponent) throw ();


extern double log (double __x) throw (); extern double __log (double __x) throw ();


extern double log10 (double __x) throw (); extern double __log10 (double __x) throw ();


extern double modf (double __x, double *__iptr) throw (); extern double __modf (double __x, double *__iptr) throw () __attribute__ ((__nonnull__ (2)));




extern double exp10 (double __x) throw (); extern double __exp10 (double __x) throw ();

extern double pow10 (double __x) throw (); extern double __pow10 (double __x) throw ();





extern double expm1 (double __x) throw (); extern double __expm1 (double __x) throw ();


extern double log1p (double __x) throw (); extern double __log1p (double __x) throw ();


extern double logb (double __x) throw (); extern double __logb (double __x) throw ();






extern double exp2 (double __x) throw (); extern double __exp2 (double __x) throw ();


extern double log2 (double __x) throw (); extern double __log2 (double __x) throw ();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern double pow (double __x, double __y) throw (); extern double __pow (double __x, double __y) throw ();


extern double sqrt (double __x) throw (); extern double __sqrt (double __x) throw ();





extern double hypot (double __x, double __y) throw (); extern double __hypot (double __x, double __y) throw ();






extern double cbrt (double __x) throw (); extern double __cbrt (double __x) throw ();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern double ceil (double __x) throw () __attribute__ ((__const__)); extern double __ceil (double __x) throw () __attribute__ ((__const__));


extern double fabs (double __x) throw () __attribute__ ((__const__)); extern double __fabs (double __x) throw () __attribute__ ((__const__));


extern double floor (double __x) throw () __attribute__ ((__const__)); extern double __floor (double __x) throw () __attribute__ ((__const__));


extern double fmod (double __x, double __y) throw (); extern double __fmod (double __x, double __y) throw ();




extern int __isinf (double __value) throw () __attribute__ ((__const__));


extern int __finite (double __value) throw () __attribute__ ((__const__));





extern int isinf (double __value) throw () __attribute__ ((__const__));


extern int finite (double __value) throw () __attribute__ ((__const__));


extern double drem (double __x, double __y) throw (); extern double __drem (double __x, double __y) throw ();



extern double significand (double __x) throw (); extern double __significand (double __x) throw ();





extern double copysign (double __x, double __y) throw () __attribute__ ((__const__)); extern double __copysign (double __x, double __y) throw () __attribute__ ((__const__));






extern double nan (const char *__tagb) throw () __attribute__ ((__const__)); extern double __nan (const char *__tagb) throw () __attribute__ ((__const__));





extern int __isnan (double __value) throw () __attribute__ ((__const__));



extern int isnan (double __value) throw () __attribute__ ((__const__));


extern double j0 (double) throw (); extern double __j0 (double) throw ();
extern double j1 (double) throw (); extern double __j1 (double) throw ();
extern double jn (int, double) throw (); extern double __jn (int, double) throw ();
extern double y0 (double) throw (); extern double __y0 (double) throw ();
extern double y1 (double) throw (); extern double __y1 (double) throw ();
extern double yn (int, double) throw (); extern double __yn (int, double) throw ();






extern double erf (double) throw (); extern double __erf (double) throw ();
extern double erfc (double) throw (); extern double __erfc (double) throw ();
extern double lgamma (double) throw (); extern double __lgamma (double) throw ();






extern double tgamma (double) throw (); extern double __tgamma (double) throw ();





extern double gamma (double) throw (); extern double __gamma (double) throw ();






extern double lgamma_r (double, int *__signgamp) throw (); extern double __lgamma_r (double, int *__signgamp) throw ();







extern double rint (double __x) throw (); extern double __rint (double __x) throw ();


extern double nextafter (double __x, double __y) throw () __attribute__ ((__const__)); extern double __nextafter (double __x, double __y) throw () __attribute__ ((__const__));

extern double nexttoward (double __x, long double __y) throw () __attribute__ ((__const__)); extern double __nexttoward (double __x, long double __y) throw () __attribute__ ((__const__));



extern double remainder (double __x, double __y) throw (); extern double __remainder (double __x, double __y) throw ();



extern double scalbn (double __x, int __n) throw (); extern double __scalbn (double __x, int __n) throw ();



extern int ilogb (double __x) throw (); extern int __ilogb (double __x) throw ();




extern double scalbln (double __x, long int __n) throw (); extern double __scalbln (double __x, long int __n) throw ();



extern double nearbyint (double __x) throw (); extern double __nearbyint (double __x) throw ();



extern double round (double __x) throw () __attribute__ ((__const__)); extern double __round (double __x) throw () __attribute__ ((__const__));



extern double trunc (double __x) throw () __attribute__ ((__const__)); extern double __trunc (double __x) throw () __attribute__ ((__const__));




extern double remquo (double __x, double __y, int *__quo) throw (); extern double __remquo (double __x, double __y, int *__quo) throw ();






extern long int lrint (double __x) throw (); extern long int __lrint (double __x) throw ();
__extension__
extern long long int llrint (double __x) throw (); extern long long int __llrint (double __x) throw ();



extern long int lround (double __x) throw (); extern long int __lround (double __x) throw ();
__extension__
extern long long int llround (double __x) throw (); extern long long int __llround (double __x) throw ();



extern double fdim (double __x, double __y) throw (); extern double __fdim (double __x, double __y) throw ();


extern double fmax (double __x, double __y) throw () __attribute__ ((__const__)); extern double __fmax (double __x, double __y) throw () __attribute__ ((__const__));


extern double fmin (double __x, double __y) throw () __attribute__ ((__const__)); extern double __fmin (double __x, double __y) throw () __attribute__ ((__const__));



extern int __fpclassify (double __value) throw ()
     __attribute__ ((__const__));


extern int __signbit (double __value) throw ()
     __attribute__ ((__const__));



extern double fma (double __x, double __y, double __z) throw (); extern double __fma (double __x, double __y, double __z) throw ();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern int __issignaling (double __value) throw ()
     __attribute__ ((__const__));




extern double scalb (double __x, double __n) throw (); extern double __scalb (double __x, double __n) throw ();
# 70 "/usr/include/math.h" 2 3 4
# 88 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 1 3 4
# 52 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4


extern float acosf (float __x) throw (); extern float __acosf (float __x) throw ();

extern float asinf (float __x) throw (); extern float __asinf (float __x) throw ();

extern float atanf (float __x) throw (); extern float __atanf (float __x) throw ();

extern float atan2f (float __y, float __x) throw (); extern float __atan2f (float __y, float __x) throw ();


extern float cosf (float __x) throw (); extern float __cosf (float __x) throw ();

extern float sinf (float __x) throw (); extern float __sinf (float __x) throw ();

extern float tanf (float __x) throw (); extern float __tanf (float __x) throw ();




extern float coshf (float __x) throw (); extern float __coshf (float __x) throw ();

extern float sinhf (float __x) throw (); extern float __sinhf (float __x) throw ();

extern float tanhf (float __x) throw (); extern float __tanhf (float __x) throw ();




extern void sincosf (float __x, float *__sinx, float *__cosx) throw (); extern void __sincosf (float __x, float *__sinx, float *__cosx) throw ()
                                                           ;





extern float acoshf (float __x) throw (); extern float __acoshf (float __x) throw ();

extern float asinhf (float __x) throw (); extern float __asinhf (float __x) throw ();

extern float atanhf (float __x) throw (); extern float __atanhf (float __x) throw ();







extern float expf (float __x) throw (); extern float __expf (float __x) throw ();


extern float frexpf (float __x, int *__exponent) throw (); extern float __frexpf (float __x, int *__exponent) throw ();


extern float ldexpf (float __x, int __exponent) throw (); extern float __ldexpf (float __x, int __exponent) throw ();


extern float logf (float __x) throw (); extern float __logf (float __x) throw ();


extern float log10f (float __x) throw (); extern float __log10f (float __x) throw ();


extern float modff (float __x, float *__iptr) throw (); extern float __modff (float __x, float *__iptr) throw () __attribute__ ((__nonnull__ (2)));




extern float exp10f (float __x) throw (); extern float __exp10f (float __x) throw ();

extern float pow10f (float __x) throw (); extern float __pow10f (float __x) throw ();





extern float expm1f (float __x) throw (); extern float __expm1f (float __x) throw ();


extern float log1pf (float __x) throw (); extern float __log1pf (float __x) throw ();


extern float logbf (float __x) throw (); extern float __logbf (float __x) throw ();






extern float exp2f (float __x) throw (); extern float __exp2f (float __x) throw ();


extern float log2f (float __x) throw (); extern float __log2f (float __x) throw ();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern float powf (float __x, float __y) throw (); extern float __powf (float __x, float __y) throw ();


extern float sqrtf (float __x) throw (); extern float __sqrtf (float __x) throw ();





extern float hypotf (float __x, float __y) throw (); extern float __hypotf (float __x, float __y) throw ();






extern float cbrtf (float __x) throw (); extern float __cbrtf (float __x) throw ();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern float ceilf (float __x) throw () __attribute__ ((__const__)); extern float __ceilf (float __x) throw () __attribute__ ((__const__));


extern float fabsf (float __x) throw () __attribute__ ((__const__)); extern float __fabsf (float __x) throw () __attribute__ ((__const__));


extern float floorf (float __x) throw () __attribute__ ((__const__)); extern float __floorf (float __x) throw () __attribute__ ((__const__));


extern float fmodf (float __x, float __y) throw (); extern float __fmodf (float __x, float __y) throw ();




extern int __isinff (float __value) throw () __attribute__ ((__const__));


extern int __finitef (float __value) throw () __attribute__ ((__const__));





extern int isinff (float __value) throw () __attribute__ ((__const__));


extern int finitef (float __value) throw () __attribute__ ((__const__));


extern float dremf (float __x, float __y) throw (); extern float __dremf (float __x, float __y) throw ();



extern float significandf (float __x) throw (); extern float __significandf (float __x) throw ();





extern float copysignf (float __x, float __y) throw () __attribute__ ((__const__)); extern float __copysignf (float __x, float __y) throw () __attribute__ ((__const__));






extern float nanf (const char *__tagb) throw () __attribute__ ((__const__)); extern float __nanf (const char *__tagb) throw () __attribute__ ((__const__));





extern int __isnanf (float __value) throw () __attribute__ ((__const__));



extern int isnanf (float __value) throw () __attribute__ ((__const__));


extern float j0f (float) throw (); extern float __j0f (float) throw ();
extern float j1f (float) throw (); extern float __j1f (float) throw ();
extern float jnf (int, float) throw (); extern float __jnf (int, float) throw ();
extern float y0f (float) throw (); extern float __y0f (float) throw ();
extern float y1f (float) throw (); extern float __y1f (float) throw ();
extern float ynf (int, float) throw (); extern float __ynf (int, float) throw ();






extern float erff (float) throw (); extern float __erff (float) throw ();
extern float erfcf (float) throw (); extern float __erfcf (float) throw ();
extern float lgammaf (float) throw (); extern float __lgammaf (float) throw ();






extern float tgammaf (float) throw (); extern float __tgammaf (float) throw ();





extern float gammaf (float) throw (); extern float __gammaf (float) throw ();






extern float lgammaf_r (float, int *__signgamp) throw (); extern float __lgammaf_r (float, int *__signgamp) throw ();







extern float rintf (float __x) throw (); extern float __rintf (float __x) throw ();


extern float nextafterf (float __x, float __y) throw () __attribute__ ((__const__)); extern float __nextafterf (float __x, float __y) throw () __attribute__ ((__const__));

extern float nexttowardf (float __x, long double __y) throw () __attribute__ ((__const__)); extern float __nexttowardf (float __x, long double __y) throw () __attribute__ ((__const__));



extern float remainderf (float __x, float __y) throw (); extern float __remainderf (float __x, float __y) throw ();



extern float scalbnf (float __x, int __n) throw (); extern float __scalbnf (float __x, int __n) throw ();



extern int ilogbf (float __x) throw (); extern int __ilogbf (float __x) throw ();




extern float scalblnf (float __x, long int __n) throw (); extern float __scalblnf (float __x, long int __n) throw ();



extern float nearbyintf (float __x) throw (); extern float __nearbyintf (float __x) throw ();



extern float roundf (float __x) throw () __attribute__ ((__const__)); extern float __roundf (float __x) throw () __attribute__ ((__const__));



extern float truncf (float __x) throw () __attribute__ ((__const__)); extern float __truncf (float __x) throw () __attribute__ ((__const__));




extern float remquof (float __x, float __y, int *__quo) throw (); extern float __remquof (float __x, float __y, int *__quo) throw ();






extern long int lrintf (float __x) throw (); extern long int __lrintf (float __x) throw ();
__extension__
extern long long int llrintf (float __x) throw (); extern long long int __llrintf (float __x) throw ();



extern long int lroundf (float __x) throw (); extern long int __lroundf (float __x) throw ();
__extension__
extern long long int llroundf (float __x) throw (); extern long long int __llroundf (float __x) throw ();



extern float fdimf (float __x, float __y) throw (); extern float __fdimf (float __x, float __y) throw ();


extern float fmaxf (float __x, float __y) throw () __attribute__ ((__const__)); extern float __fmaxf (float __x, float __y) throw () __attribute__ ((__const__));


extern float fminf (float __x, float __y) throw () __attribute__ ((__const__)); extern float __fminf (float __x, float __y) throw () __attribute__ ((__const__));



extern int __fpclassifyf (float __value) throw ()
     __attribute__ ((__const__));


extern int __signbitf (float __value) throw ()
     __attribute__ ((__const__));



extern float fmaf (float __x, float __y, float __z) throw (); extern float __fmaf (float __x, float __y, float __z) throw ();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern int __issignalingf (float __value) throw ()
     __attribute__ ((__const__));




extern float scalbf (float __x, float __n) throw (); extern float __scalbf (float __x, float __n) throw ();
# 89 "/usr/include/math.h" 2 3 4
# 133 "/usr/include/math.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 1 3 4
# 52 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4


extern long double acosl (long double __x) throw (); extern long double __acosl (long double __x) throw ();

extern long double asinl (long double __x) throw (); extern long double __asinl (long double __x) throw ();

extern long double atanl (long double __x) throw (); extern long double __atanl (long double __x) throw ();

extern long double atan2l (long double __y, long double __x) throw (); extern long double __atan2l (long double __y, long double __x) throw ();


extern long double cosl (long double __x) throw (); extern long double __cosl (long double __x) throw ();

extern long double sinl (long double __x) throw (); extern long double __sinl (long double __x) throw ();

extern long double tanl (long double __x) throw (); extern long double __tanl (long double __x) throw ();




extern long double coshl (long double __x) throw (); extern long double __coshl (long double __x) throw ();

extern long double sinhl (long double __x) throw (); extern long double __sinhl (long double __x) throw ();

extern long double tanhl (long double __x) throw (); extern long double __tanhl (long double __x) throw ();




extern void sincosl (long double __x, long double *__sinx, long double *__cosx) throw (); extern void __sincosl (long double __x, long double *__sinx, long double *__cosx) throw ()
                                                           ;





extern long double acoshl (long double __x) throw (); extern long double __acoshl (long double __x) throw ();

extern long double asinhl (long double __x) throw (); extern long double __asinhl (long double __x) throw ();

extern long double atanhl (long double __x) throw (); extern long double __atanhl (long double __x) throw ();







extern long double expl (long double __x) throw (); extern long double __expl (long double __x) throw ();


extern long double frexpl (long double __x, int *__exponent) throw (); extern long double __frexpl (long double __x, int *__exponent) throw ();


extern long double ldexpl (long double __x, int __exponent) throw (); extern long double __ldexpl (long double __x, int __exponent) throw ();


extern long double logl (long double __x) throw (); extern long double __logl (long double __x) throw ();


extern long double log10l (long double __x) throw (); extern long double __log10l (long double __x) throw ();


extern long double modfl (long double __x, long double *__iptr) throw (); extern long double __modfl (long double __x, long double *__iptr) throw () __attribute__ ((__nonnull__ (2)));




extern long double exp10l (long double __x) throw (); extern long double __exp10l (long double __x) throw ();

extern long double pow10l (long double __x) throw (); extern long double __pow10l (long double __x) throw ();





extern long double expm1l (long double __x) throw (); extern long double __expm1l (long double __x) throw ();


extern long double log1pl (long double __x) throw (); extern long double __log1pl (long double __x) throw ();


extern long double logbl (long double __x) throw (); extern long double __logbl (long double __x) throw ();






extern long double exp2l (long double __x) throw (); extern long double __exp2l (long double __x) throw ();


extern long double log2l (long double __x) throw (); extern long double __log2l (long double __x) throw ();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern long double powl (long double __x, long double __y) throw (); extern long double __powl (long double __x, long double __y) throw ();


extern long double sqrtl (long double __x) throw (); extern long double __sqrtl (long double __x) throw ();





extern long double hypotl (long double __x, long double __y) throw (); extern long double __hypotl (long double __x, long double __y) throw ();






extern long double cbrtl (long double __x) throw (); extern long double __cbrtl (long double __x) throw ();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern long double ceill (long double __x) throw () __attribute__ ((__const__)); extern long double __ceill (long double __x) throw () __attribute__ ((__const__));


extern long double fabsl (long double __x) throw () __attribute__ ((__const__)); extern long double __fabsl (long double __x) throw () __attribute__ ((__const__));


extern long double floorl (long double __x) throw () __attribute__ ((__const__)); extern long double __floorl (long double __x) throw () __attribute__ ((__const__));


extern long double fmodl (long double __x, long double __y) throw (); extern long double __fmodl (long double __x, long double __y) throw ();




extern int __isinfl (long double __value) throw () __attribute__ ((__const__));


extern int __finitel (long double __value) throw () __attribute__ ((__const__));





extern int isinfl (long double __value) throw () __attribute__ ((__const__));


extern int finitel (long double __value) throw () __attribute__ ((__const__));


extern long double dreml (long double __x, long double __y) throw (); extern long double __dreml (long double __x, long double __y) throw ();



extern long double significandl (long double __x) throw (); extern long double __significandl (long double __x) throw ();





extern long double copysignl (long double __x, long double __y) throw () __attribute__ ((__const__)); extern long double __copysignl (long double __x, long double __y) throw () __attribute__ ((__const__));






extern long double nanl (const char *__tagb) throw () __attribute__ ((__const__)); extern long double __nanl (const char *__tagb) throw () __attribute__ ((__const__));





extern int __isnanl (long double __value) throw () __attribute__ ((__const__));



extern int isnanl (long double __value) throw () __attribute__ ((__const__));


extern long double j0l (long double) throw (); extern long double __j0l (long double) throw ();
extern long double j1l (long double) throw (); extern long double __j1l (long double) throw ();
extern long double jnl (int, long double) throw (); extern long double __jnl (int, long double) throw ();
extern long double y0l (long double) throw (); extern long double __y0l (long double) throw ();
extern long double y1l (long double) throw (); extern long double __y1l (long double) throw ();
extern long double ynl (int, long double) throw (); extern long double __ynl (int, long double) throw ();






extern long double erfl (long double) throw (); extern long double __erfl (long double) throw ();
extern long double erfcl (long double) throw (); extern long double __erfcl (long double) throw ();
extern long double lgammal (long double) throw (); extern long double __lgammal (long double) throw ();






extern long double tgammal (long double) throw (); extern long double __tgammal (long double) throw ();





extern long double gammal (long double) throw (); extern long double __gammal (long double) throw ();






extern long double lgammal_r (long double, int *__signgamp) throw (); extern long double __lgammal_r (long double, int *__signgamp) throw ();







extern long double rintl (long double __x) throw (); extern long double __rintl (long double __x) throw ();


extern long double nextafterl (long double __x, long double __y) throw () __attribute__ ((__const__)); extern long double __nextafterl (long double __x, long double __y) throw () __attribute__ ((__const__));

extern long double nexttowardl (long double __x, long double __y) throw () __attribute__ ((__const__)); extern long double __nexttowardl (long double __x, long double __y) throw () __attribute__ ((__const__));



extern long double remainderl (long double __x, long double __y) throw (); extern long double __remainderl (long double __x, long double __y) throw ();



extern long double scalbnl (long double __x, int __n) throw (); extern long double __scalbnl (long double __x, int __n) throw ();



extern int ilogbl (long double __x) throw (); extern int __ilogbl (long double __x) throw ();




extern long double scalblnl (long double __x, long int __n) throw (); extern long double __scalblnl (long double __x, long int __n) throw ();



extern long double nearbyintl (long double __x) throw (); extern long double __nearbyintl (long double __x) throw ();



extern long double roundl (long double __x) throw () __attribute__ ((__const__)); extern long double __roundl (long double __x) throw () __attribute__ ((__const__));



extern long double truncl (long double __x) throw () __attribute__ ((__const__)); extern long double __truncl (long double __x) throw () __attribute__ ((__const__));




extern long double remquol (long double __x, long double __y, int *__quo) throw (); extern long double __remquol (long double __x, long double __y, int *__quo) throw ();






extern long int lrintl (long double __x) throw (); extern long int __lrintl (long double __x) throw ();
__extension__
extern long long int llrintl (long double __x) throw (); extern long long int __llrintl (long double __x) throw ();



extern long int lroundl (long double __x) throw (); extern long int __lroundl (long double __x) throw ();
__extension__
extern long long int llroundl (long double __x) throw (); extern long long int __llroundl (long double __x) throw ();



extern long double fdiml (long double __x, long double __y) throw (); extern long double __fdiml (long double __x, long double __y) throw ();


extern long double fmaxl (long double __x, long double __y) throw () __attribute__ ((__const__)); extern long double __fmaxl (long double __x, long double __y) throw () __attribute__ ((__const__));


extern long double fminl (long double __x, long double __y) throw () __attribute__ ((__const__)); extern long double __fminl (long double __x, long double __y) throw () __attribute__ ((__const__));



extern int __fpclassifyl (long double __value) throw ()
     __attribute__ ((__const__));


extern int __signbitl (long double __value) throw ()
     __attribute__ ((__const__));



extern long double fmal (long double __x, long double __y, long double __z) throw (); extern long double __fmal (long double __x, long double __y, long double __z) throw ();
# 365 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3 4
extern int __issignalingl (long double __value) throw ()
     __attribute__ ((__const__));




extern long double scalbl (long double __x, long double __n) throw (); extern long double __scalbl (long double __x, long double __n) throw ();
# 134 "/usr/include/math.h" 2 3 4
# 149 "/usr/include/math.h" 3 4
extern int signgam;
# 190 "/usr/include/math.h" 3 4
enum
  {
    FP_NAN =

      0,
    FP_INFINITE =

      1,
    FP_ZERO =

      2,
    FP_SUBNORMAL =

      3,
    FP_NORMAL =

      4
  };
# 302 "/usr/include/math.h" 3 4
typedef enum
{
  _IEEE_ = -1,
  _SVID_,
  _XOPEN_,
  _POSIX_,
  _ISOC_
} _LIB_VERSION_TYPE;




extern _LIB_VERSION_TYPE _LIB_VERSION;
# 325 "/usr/include/math.h" 3 4
struct __exception



  {
    int type;
    char *name;
    double arg1;
    double arg2;
    double retval;
  };


extern int matherr (struct __exception *__exc) throw ();
# 489 "/usr/include/math.h" 3 4
}
# 74 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc" 2
# 1 "/usr/include/stdio.h" 1 3 4
# 29 "/usr/include/stdio.h" 3 4
extern "C" {



# 1 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h" 1 3 4
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;







typedef long int __quad_t;
typedef unsigned long int __u_quad_t;
# 121 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
# 122 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;
# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 31 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 32 "/usr/include/libio.h" 2 3 4
# 49 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 50 "/usr/include/libio.h" 2 3 4
# 144 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 154 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 177 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 245 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 293 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 302 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};





struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 338 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);




typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;


typedef struct
{
  __io_read_fn *read;
  __io_write_fn *write;
  __io_seek_fn *seek;
  __io_close_fn *close;
} _IO_cookie_io_functions_t;
typedef _IO_cookie_io_functions_t cookie_io_functions_t;

struct _IO_cookie_file;


extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,
        void *__cookie, _IO_cookie_io_functions_t __fns);




extern "C" {


extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 434 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) throw ();
extern int _IO_ferror (_IO_FILE *__fp) throw ();

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) throw ();
extern void _IO_funlockfile (_IO_FILE *) throw ();
extern int _IO_ftrylockfile (_IO_FILE *) throw ();
# 464 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) throw ();
# 526 "/usr/include/libio.h" 3 4
}
# 75 "/usr/include/stdio.h" 2 3 4




typedef __gnuc_va_list va_list;
# 90 "/usr/include/stdio.h" 3 4
typedef __off_t off_t;






typedef __off64_t off64_t;




typedef __ssize_t ssize_t;







typedef _G_fpos_t fpos_t;





typedef _G_fpos64_t fpos64_t;
# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) throw ();

extern int rename (const char *__old, const char *__new) throw ();




extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) throw ();
# 195 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile (void) ;
# 205 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile64 (void) ;



extern char *tmpnam (char *__s) throw () ;





extern char *tmpnam_r (char *__s) throw () ;
# 227 "/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     throw () __attribute__ ((__malloc__)) ;
# 237 "/usr/include/stdio.h" 3 4
extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);
# 252 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 262 "/usr/include/stdio.h" 3 4
extern int fcloseall (void);
# 272 "/usr/include/stdio.h" 3 4
extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4


extern FILE *fopen64 (const char *__restrict __filename,
        const char *__restrict __modes) ;
extern FILE *freopen64 (const char *__restrict __filename,
   const char *__restrict __modes,
   FILE *__restrict __stream) ;




extern FILE *fdopen (int __fd, const char *__modes) throw () ;





extern FILE *fopencookie (void *__restrict __magic_cookie,
     const char *__restrict __modes,
     _IO_cookie_io_functions_t __io_funcs) throw () ;




extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  throw () ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) throw () ;






extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) throw ();



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) throw ();





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) throw ();


extern void setlinebuf (FILE *__stream) throw ();
# 356 "/usr/include/stdio.h" 3 4
extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) throw ();





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) throw ();





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 3, 0)));






extern int vasprintf (char **__restrict __ptr, const char *__restrict __f,
        __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 2, 0))) ;
extern int __asprintf (char **__restrict __ptr,
         const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;
extern int asprintf (char **__restrict __ptr,
       const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;




extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));
# 425 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) throw ();
# 463 "/usr/include/stdio.h" 3 4
# 471 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4
# 531 "/usr/include/stdio.h" 3 4
extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);
# 550 "/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 561 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);
# 573 "/usr/include/stdio.h" 3 4
extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);
# 594 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);
# 622 "/usr/include/stdio.h" 3 4
extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));
# 649 "/usr/include/stdio.h" 3 4
extern char *fgets_unlocked (char *__restrict __s, int __n,
        FILE *__restrict __stream) ;
# 665 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;
# 689 "/usr/include/stdio.h" 3 4
extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);
# 726 "/usr/include/stdio.h" 3 4
extern int fputs_unlocked (const char *__restrict __s,
      FILE *__restrict __stream);
# 737 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);
# 749 "/usr/include/stdio.h" 3 4
extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);
# 773 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4



extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream) ;
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, const fpos64_t *__pos);




extern void clearerr (FILE *__stream) throw ();

extern int feof (FILE *__stream) throw () ;

extern int ferror (FILE *__stream) throw () ;




extern void clearerr_unlocked (FILE *__stream) throw ();
extern int feof_unlocked (FILE *__stream) throw () ;
extern int ferror_unlocked (FILE *__stream) throw () ;
# 846 "/usr/include/stdio.h" 3 4
extern void perror (const char *__s);






# 1 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];


extern int _sys_nerr;
extern const char *const _sys_errlist[];
# 854 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) throw () ;




extern int fileno_unlocked (FILE *__stream) throw () ;
# 872 "/usr/include/stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) throw ();





extern char *cuserid (char *__s);




struct obstack;


extern int obstack_printf (struct obstack *__restrict __obstack,
      const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
       const char *__restrict __format,
       __gnuc_va_list __args)
     throw () __attribute__ ((__format__ (__printf__, 2, 0)));







extern void flockfile (FILE *__stream) throw ();



extern int ftrylockfile (FILE *__stream) throw () ;


extern void funlockfile (FILE *__stream) throw ();
# 942 "/usr/include/stdio.h" 3 4
}
# 75 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 32 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h" 1 3 4
# 33 "/usr/include/stdlib.h" 2 3 4

extern "C" {






# 1 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 1 3 4
# 50 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3 4
typedef enum
{
  P_ALL,
  P_PID,
  P_PGID
} idtype_t;
# 42 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 1 3 4
# 64 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 36 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endian.h" 1 3 4
# 37 "/usr/include/endian.h" 2 3 4
# 60 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 2 3 4






# 1 "/usr/include/x86_64-linux-gnu/bits/byteswap-16.h" 1 3 4
# 36 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 2 3 4
# 44 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
static __inline unsigned int
__bswap_32 (unsigned int __bsx)
{
  return __builtin_bswap32 (__bsx);
}
# 108 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{
  return __builtin_bswap64 (__bsx);
}
# 61 "/usr/include/endian.h" 2 3 4
# 65 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 2 3 4

union wait
  {
    int w_status;
    struct
      {

 unsigned int __w_termsig:7;
 unsigned int __w_coredump:1;
 unsigned int __w_retcode:8;
 unsigned int:16;







      } __wait_terminated;
    struct
      {

 unsigned int __w_stopval:8;
 unsigned int __w_stopsig:8;
 unsigned int:16;






      } __wait_stopped;
  };
# 43 "/usr/include/stdlib.h" 2 3 4
# 95 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;
# 139 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) throw () ;




extern double atof (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     throw () __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) throw () __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     throw () __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));





__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));
# 235 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/xlocale.h" 1 3 4
# 27 "/usr/include/xlocale.h" 3 4
typedef struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
} *__locale_t;


typedef __locale_t locale_t;
# 236 "/usr/include/stdlib.h" 2 3 4



extern long int strtol_l (const char *__restrict __nptr,
     char **__restrict __endptr, int __base,
     __locale_t __loc) throw () __attribute__ ((__nonnull__ (1, 4)));

extern unsigned long int strtoul_l (const char *__restrict __nptr,
        char **__restrict __endptr,
        int __base, __locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 4)));

__extension__
extern long long int strtoll_l (const char *__restrict __nptr,
    char **__restrict __endptr, int __base,
    __locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 4)));

__extension__
extern unsigned long long int strtoull_l (const char *__restrict __nptr,
       char **__restrict __endptr,
       int __base, __locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 4)));

extern double strtod_l (const char *__restrict __nptr,
   char **__restrict __endptr, __locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));

extern float strtof_l (const char *__restrict __nptr,
         char **__restrict __endptr, __locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));

extern long double strtold_l (const char *__restrict __nptr,
         char **__restrict __endptr,
         __locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));
# 305 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) throw () ;


extern long int a64l (const char *__s)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;




# 1 "/usr/include/x86_64-linux-gnu/sys/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
extern "C" {





typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;






typedef __ino64_t ino64_t;




typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;
# 98 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __pid_t pid_t;





typedef __id_t id_t;
# 115 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;
# 132 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/time.h" 1 3 4
# 57 "/usr/include/time.h" 3 4


typedef __clock_t clock_t;
# 73 "/usr/include/time.h" 3 4


typedef __time_t time_t;
# 91 "/usr/include/time.h" 3 4
typedef __clockid_t clockid_t;
# 103 "/usr/include/time.h" 3 4
typedef __timer_t timer_t;
# 133 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef __useconds_t useconds_t;



typedef __suseconds_t suseconds_t;





# 1 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h" 1 3 4
# 147 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 194 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));


typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 219 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/select.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/select.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/select.h" 2 3 4
# 31 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3 4
typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 34 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



typedef __sigset_t sigset_t;





# 1 "/usr/include/time.h" 1 3 4
# 120 "/usr/include/time.h" 3 4
struct timespec
  {
    __time_t tv_sec;
    __syscall_slong_t tv_nsec;
  };
# 44 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/time.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/bits/time.h" 3 4
struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 46 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4
# 54 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
typedef long int __fd_mask;
# 64 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];





  } fd_set;






typedef __fd_mask fd_mask;
# 96 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern "C" {
# 106 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 118 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);
# 131 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
}
# 220 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3 4
extern "C" {

__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     throw () __attribute__ ((__const__));
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     throw () __attribute__ ((__const__));
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
            unsigned int __minor)
     throw () __attribute__ ((__const__));
# 58 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3 4
}
# 223 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 262 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;





# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 1 3 4
# 21 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 2 3 4
# 60 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
typedef unsigned long int pthread_t;


union pthread_attr_t
{
  char __size[56];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;





typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;
# 90 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;

    unsigned int __nusers;



    int __kind;

    short __spins;
    short __elision;
    __pthread_list_t __list;
# 125 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
  } __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;





typedef union
{

  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;
    int __writer;
    int __shared;
    signed char __rwelision;




    unsigned char __pad1[7];


    unsigned long int __pad2;


    unsigned int __flags;

  } __data;
# 220 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 271 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


}
# 315 "/usr/include/stdlib.h" 2 3 4






extern long int random (void) throw ();


extern void srandom (unsigned int __seed) throw ();





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) throw () __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) throw () __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) throw () __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     throw () __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     throw () __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     throw () __attribute__ ((__nonnull__ (1, 2)));






extern int rand (void) throw ();

extern void srand (unsigned int __seed) throw ();




extern int rand_r (unsigned int *__seed) throw ();







extern double drand48 (void) throw ();
extern double erand48 (unsigned short int __xsubi[3]) throw () __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) throw ();
extern long int nrand48 (unsigned short int __xsubi[3])
     throw () __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) throw ();
extern long int jrand48 (unsigned short int __xsubi[3])
     throw () __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) throw ();
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     throw () __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) throw () __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) throw () __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) throw () __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     throw () __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) throw () __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     throw () __attribute__ ((__nonnull__ (1, 2)));
# 466 "/usr/include/stdlib.h" 3 4
extern void *malloc (size_t __size) throw () __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     throw () __attribute__ ((__malloc__)) ;
# 480 "/usr/include/stdlib.h" 3 4
extern void *realloc (void *__ptr, size_t __size)
     throw () __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) throw ();




extern void cfree (void *__ptr) throw ();



# 1 "/usr/include/alloca.h" 1 3 4
# 24 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h" 1 3 4
# 25 "/usr/include/alloca.h" 2 3 4

extern "C" {





extern void *alloca (size_t __size) throw ();





}
# 493 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) throw () __attribute__ ((__malloc__)) ;




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     throw () __attribute__ ((__nonnull__ (1))) ;




extern void *aligned_alloc (size_t __alignment, size_t __size)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (2))) ;




extern void abort (void) throw () __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) throw () __attribute__ ((__nonnull__ (1)));




extern "C++" int at_quick_exit (void (*__func) (void))
     throw () __asm ("at_quick_exit") __attribute__ ((__nonnull__ (1)));
# 535 "/usr/include/stdlib.h" 3 4
extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     throw () __attribute__ ((__nonnull__ (1)));






extern void exit (int __status) throw () __attribute__ ((__noreturn__));





extern void quick_exit (int __status) throw () __attribute__ ((__noreturn__));







extern void _Exit (int __status) throw () __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) throw () __attribute__ ((__nonnull__ (1))) ;





extern char *secure_getenv (const char *__name)
     throw () __attribute__ ((__nonnull__ (1))) ;






extern int putenv (char *__string) throw () __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     throw () __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) throw () __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) throw ();
# 606 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) throw () __attribute__ ((__nonnull__ (1)));
# 619 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 629 "/usr/include/stdlib.h" 3 4
extern int mkstemp64 (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 641 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
# 651 "/usr/include/stdlib.h" 3 4
extern int mkstemps64 (char *__template, int __suffixlen)
     __attribute__ ((__nonnull__ (1))) ;
# 662 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) throw () __attribute__ ((__nonnull__ (1))) ;
# 673 "/usr/include/stdlib.h" 3 4
extern int mkostemp (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 683 "/usr/include/stdlib.h" 3 4
extern int mkostemp64 (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 693 "/usr/include/stdlib.h" 3 4
extern int mkostemps (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;
# 705 "/usr/include/stdlib.h" 3 4
extern int mkostemps64 (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;
# 716 "/usr/include/stdlib.h" 3 4
extern int system (const char *__command) ;






extern char *canonicalize_file_name (const char *__name)
     throw () __attribute__ ((__nonnull__ (1))) ;
# 733 "/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) throw () ;






typedef int (*__compar_fn_t) (const void *, const void *);


typedef __compar_fn_t comparison_fn_t;



typedef int (*__compar_d_fn_t) (const void *, const void *, void *);





extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;







extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));

extern void qsort_r (void *__base, size_t __nmemb, size_t __size,
       __compar_d_fn_t __compar, void *__arg)
  __attribute__ ((__nonnull__ (1, 4)));




extern int abs (int __x) throw () __attribute__ ((__const__)) ;
extern long int labs (long int __x) throw () __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     throw () __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     throw () __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     throw () __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     throw () __attribute__ ((__const__)) ;
# 811 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) throw () __attribute__ ((__nonnull__ (3, 4))) ;




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) throw () __attribute__ ((__nonnull__ (3, 4))) ;




extern char *gcvt (double __value, int __ndigit, char *__buf)
     throw () __attribute__ ((__nonnull__ (3))) ;




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     throw () __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     throw () __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     throw () __attribute__ ((__nonnull__ (3))) ;




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) throw () __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) throw () __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     throw () __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     throw () __attribute__ ((__nonnull__ (3, 4, 5)));






extern int mblen (const char *__s, size_t __n) throw ();


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) throw ();


extern int wctomb (char *__s, wchar_t __wchar) throw ();



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) throw ();

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     throw ();
# 887 "/usr/include/stdlib.h" 3 4
extern int rpmatch (const char *__response) throw () __attribute__ ((__nonnull__ (1))) ;
# 898 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     throw () __attribute__ ((__nonnull__ (1, 2, 3))) ;





extern void setkey (const char *__key) throw () __attribute__ ((__nonnull__ (1)));







extern int posix_openpt (int __oflag) ;







extern int grantpt (int __fd) throw ();



extern int unlockpt (int __fd) throw ();




extern char *ptsname (int __fd) throw () ;






extern int ptsname_r (int __fd, char *__buf, size_t __buflen)
     throw () __attribute__ ((__nonnull__ (2)));


extern int getpt (void);






extern int getloadavg (double __loadavg[], int __nelem)
     throw () __attribute__ ((__nonnull__ (1)));


# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 1 3 4
# 955 "/usr/include/stdlib.h" 2 3 4
# 967 "/usr/include/stdlib.h" 3 4
}
# 76 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc" 2
# 1 "/usr/include/x86_64-linux-gnu/sys/time.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
# 1 "/usr/include/time.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/sys/time.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/time.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/sys/time.h" 2 3 4
# 37 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
extern "C" {
# 55 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
struct timezone
  {
    int tz_minuteswest;
    int tz_dsttime;
  };

typedef struct timezone *__restrict __timezone_ptr_t;
# 71 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
extern int gettimeofday (struct timeval *__restrict __tv,
    __timezone_ptr_t __tz) throw () __attribute__ ((__nonnull__ (1)));




extern int settimeofday (const struct timeval *__tv,
    const struct timezone *__tz)
     throw ();





extern int adjtime (const struct timeval *__delta,
      struct timeval *__olddelta) throw ();




enum __itimer_which
  {

    ITIMER_REAL = 0,


    ITIMER_VIRTUAL = 1,



    ITIMER_PROF = 2

  };



struct itimerval
  {

    struct timeval it_interval;

    struct timeval it_value;
  };






typedef int __itimer_which_t;




extern int getitimer (__itimer_which_t __which,
        struct itimerval *__value) throw ();




extern int setitimer (__itimer_which_t __which,
        const struct itimerval *__restrict __new,
        struct itimerval *__restrict __old) throw ();




extern int utimes (const char *__file, const struct timeval __tvp[2])
     throw () __attribute__ ((__nonnull__ (1)));



extern int lutimes (const char *__file, const struct timeval __tvp[2])
     throw () __attribute__ ((__nonnull__ (1)));


extern int futimes (int __fd, const struct timeval __tvp[2]) throw ();






extern int futimesat (int __fd, const char *__file,
        const struct timeval __tvp[2]) throw ();
# 189 "/usr/include/x86_64-linux-gnu/sys/time.h" 3 4
}
# 77 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc" 2
# 1 "/usr/include/string.h" 1 3 4
# 27 "/usr/include/string.h" 3 4
extern "C" {




# 1 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h" 1 3 4
# 33 "/usr/include/string.h" 2 3 4
# 44 "/usr/include/string.h" 3 4


extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
       size_t __n) throw () __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, const void *__src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));






extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
        int __c, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));





extern void *memset (void *__s, int __c, size_t __n) throw () __attribute__ ((__nonnull__ (1)));


extern int memcmp (const void *__s1, const void *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));



extern "C++"
{
extern void *memchr (void *__s, int __c, size_t __n)
      throw () __asm ("memchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const void *memchr (const void *__s, int __c, size_t __n)
      throw () __asm ("memchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 94 "/usr/include/string.h" 3 4
}
# 105 "/usr/include/string.h" 3 4
extern "C++" void *rawmemchr (void *__s, int __c)
     throw () __asm ("rawmemchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern "C++" const void *rawmemchr (const void *__s, int __c)
     throw () __asm ("rawmemchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));







extern "C++" void *memrchr (void *__s, int __c, size_t __n)
      throw () __asm ("memrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern "C++" const void *memrchr (const void *__s, int __c, size_t __n)
      throw () __asm ("memrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 129 "/usr/include/string.h" 3 4
extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, const char *__restrict __src,
        size_t __n) throw () __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (const char *__s1, const char *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (2)));
# 166 "/usr/include/string.h" 3 4
extern int strcoll_l (const char *__s1, const char *__s2, __locale_t __l)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
    __locale_t __l) throw () __attribute__ ((__nonnull__ (2, 4)));




extern char *strdup (const char *__s)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (const char *__string, size_t __n)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 210 "/usr/include/string.h" 3 4



extern "C++"
{
extern char *strchr (char *__s, int __c)
     throw () __asm ("strchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *strchr (const char *__s, int __c)
     throw () __asm ("strchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 233 "/usr/include/string.h" 3 4
}






extern "C++"
{
extern char *strrchr (char *__s, int __c)
     throw () __asm ("strrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *strrchr (const char *__s, int __c)
     throw () __asm ("strrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 260 "/usr/include/string.h" 3 4
}
# 271 "/usr/include/string.h" 3 4
extern "C++" char *strchrnul (char *__s, int __c)
     throw () __asm ("strchrnul") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern "C++" const char *strchrnul (const char *__s, int __c)
     throw () __asm ("strchrnul") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 284 "/usr/include/string.h" 3 4
extern size_t strcspn (const char *__s, const char *__reject)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (const char *__s, const char *__accept)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern "C++"
{
extern char *strpbrk (char *__s, const char *__accept)
     throw () __asm ("strpbrk") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern const char *strpbrk (const char *__s, const char *__accept)
     throw () __asm ("strpbrk") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 312 "/usr/include/string.h" 3 4
}






extern "C++"
{
extern char *strstr (char *__haystack, const char *__needle)
     throw () __asm ("strstr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern const char *strstr (const char *__haystack, const char *__needle)
     throw () __asm ("strstr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 339 "/usr/include/string.h" 3 4
}







extern char *strtok (char *__restrict __s, const char *__restrict __delim)
     throw () __attribute__ ((__nonnull__ (2)));




extern char *__strtok_r (char *__restrict __s,
    const char *__restrict __delim,
    char **__restrict __save_ptr)
     throw () __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
         char **__restrict __save_ptr)
     throw () __attribute__ ((__nonnull__ (2, 3)));





extern "C++" char *strcasestr (char *__haystack, const char *__needle)
     throw () __asm ("strcasestr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern "C++" const char *strcasestr (const char *__haystack,
         const char *__needle)
     throw () __asm ("strcasestr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 381 "/usr/include/string.h" 3 4
extern void *memmem (const void *__haystack, size_t __haystacklen,
       const void *__needle, size_t __needlelen)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));



extern void *__mempcpy (void *__restrict __dest,
   const void *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern void *mempcpy (void *__restrict __dest,
        const void *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));





extern size_t strlen (const char *__s)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern size_t strnlen (const char *__string, size_t __maxlen)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strerror (int __errnum) throw ();
# 437 "/usr/include/string.h" 3 4
extern char *strerror_r (int __errnum, char *__buf, size_t __buflen)
     throw () __attribute__ ((__nonnull__ (2))) ;





extern char *strerror_l (int __errnum, __locale_t __l) throw ();





extern void __bzero (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));



extern void bcopy (const void *__src, void *__dest, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));


extern int bcmp (const void *__s1, const void *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));



extern "C++"
{
extern char *index (char *__s, int __c)
     throw () __asm ("index") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *index (const char *__s, int __c)
     throw () __asm ("index") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 486 "/usr/include/string.h" 3 4
}







extern "C++"
{
extern char *rindex (char *__s, int __c)
     throw () __asm ("rindex") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *rindex (const char *__s, int __c)
     throw () __asm ("rindex") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 514 "/usr/include/string.h" 3 4
}







extern int ffs (int __i) throw () __attribute__ ((__const__));




extern int ffsl (long int __l) throw () __attribute__ ((__const__));
__extension__ extern int ffsll (long long int __ll)
     throw () __attribute__ ((__const__));



extern int strcasecmp (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));





extern int strcasecmp_l (const char *__s1, const char *__s2,
    __locale_t __loc)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern int strncasecmp_l (const char *__s1, const char *__s2,
     size_t __n, __locale_t __loc)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));





extern char *strsep (char **__restrict __stringp,
       const char *__restrict __delim)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) throw ();


extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern int strverscmp (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strfry (char *__string) throw () __attribute__ ((__nonnull__ (1)));


extern void *memfrob (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));







extern "C++" char *basename (char *__filename)
     throw () __asm ("basename") __attribute__ ((__nonnull__ (1)));
extern "C++" const char *basename (const char *__filename)
     throw () __asm ("basename") __attribute__ ((__nonnull__ (1)));
# 643 "/usr/include/string.h" 3 4
}
# 78 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc" 2
# 1 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/omp.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/omp.h" 3 4
typedef struct
{
  unsigned char _x[4]
    __attribute__((__aligned__(4)));
} omp_lock_t;

typedef struct
{

  unsigned char _x[8 + sizeof (void *)]
    __attribute__((__aligned__(sizeof (void *))));




} omp_nest_lock_t;


typedef enum omp_sched_t
{
  omp_sched_static = 1,
  omp_sched_dynamic = 2,
  omp_sched_guided = 3,
  omp_sched_auto = 4
} omp_sched_t;


extern "C" {





extern void omp_set_num_threads (int) throw ();
extern int omp_get_num_threads (void) throw ();
extern int omp_get_max_threads (void) throw ();
extern int omp_get_thread_num (void) throw ();
extern int omp_get_num_procs (void) throw ();

extern int omp_in_parallel (void) throw ();

extern void omp_set_dynamic (int) throw ();
extern int omp_get_dynamic (void) throw ();

extern void omp_set_nested (int) throw ();
extern int omp_get_nested (void) throw ();

extern void omp_init_lock (omp_lock_t *) throw ();
extern void omp_destroy_lock (omp_lock_t *) throw ();
extern void omp_set_lock (omp_lock_t *) throw ();
extern void omp_unset_lock (omp_lock_t *) throw ();
extern int omp_test_lock (omp_lock_t *) throw ();

extern void omp_init_nest_lock (omp_nest_lock_t *) throw ();
extern void omp_destroy_nest_lock (omp_nest_lock_t *) throw ();
extern void omp_set_nest_lock (omp_nest_lock_t *) throw ();
extern void omp_unset_nest_lock (omp_nest_lock_t *) throw ();
extern int omp_test_nest_lock (omp_nest_lock_t *) throw ();

extern double omp_get_wtime (void) throw ();
extern double omp_get_wtick (void) throw ();

void omp_set_schedule (omp_sched_t, int) throw ();
void omp_get_schedule (omp_sched_t *, int *) throw ();
int omp_get_thread_limit (void) throw ();
void omp_set_max_active_levels (int) throw ();
int omp_get_max_active_levels (void) throw ();
int omp_get_level (void) throw ();
int omp_get_ancestor_thread_num (int) throw ();
int omp_get_team_size (int) throw ();
int omp_get_active_level (void) throw ();

int omp_in_final (void) throw ();


}
# 79 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc" 2
# 1 "/usr/include/assert.h" 1 3 4
# 66 "/usr/include/assert.h" 3 4
extern "C" {


extern void __assert_fail (const char *__assertion, const char *__file,
      unsigned int __line, const char *__function)
     throw () __attribute__ ((__noreturn__));


extern void __assert_perror_fail (int __errnum, const char *__file,
      unsigned int __line, const char *__function)
     throw () __attribute__ ((__noreturn__));




extern void __assert (const char *__assertion, const char *__file, int __line)
     throw () __attribute__ ((__noreturn__));


}
# 80 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc" 2
# 80 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 81 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"

# 1 "/home/mg1/chimes/src/libchimes/checkpoint.h" 1
# 11 "/home/mg1/chimes/src/libchimes/checkpoint.h"
extern void checkpoint();

extern void wait_for_checkpoint();
extern void register_custom_init_handler(const char *obj_name,
        void (*____chimes_fp)(void *));
# 83 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc" 2
# 83 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 84 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 85 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 86 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 87 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
enum { VolumeError = -1, QStopError = -2 } ;
# 88 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 89 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 90 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 91 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 92 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 93 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 94 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
typedef float real4 ;
# 95 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
typedef double real8 ;
# 96 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
typedef long double real10 ;
# 97 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 98 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
typedef int Index_t ;
# 99 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
typedef int Int_t ;
# 100 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 101 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
typedef real8 Real_t ;
# 102 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 103 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
inline real8 SQRT_npm(real8 arg);
inline real8 SQRT_quick(real8 arg); inline real8 SQRT(real8 arg);
inline real8 SQRT_resumable(real8 arg) {const int ____chimes_did_disable0 = new_stack((void *)(&SQRT), "SQRT", &____must_manage_SQRT, 1, 0, (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ; double ____chimes_ret_var_0; ; ____chimes_ret_var_0 = (sqrt(arg)); rm_stack(false, 0UL, "SQRT", &____must_manage_SQRT, ____alias_loc_id_15, ____chimes_did_disable0, false); return ____chimes_ret_var_0; ; rm_stack(false, 0UL, "SQRT", &____must_manage_SQRT, ____alias_loc_id_15, ____chimes_did_disable0, false); }
# 104 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 105 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
inline real8 CBRT_npm(real8 arg);
inline real8 CBRT_quick(real8 arg); inline real8 CBRT(real8 arg);
inline real8 CBRT_resumable(real8 arg) {const int ____chimes_did_disable1 = new_stack((void *)(&CBRT), "CBRT", &____must_manage_CBRT, 1, 0, (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ; double ____chimes_ret_var_1; ; ____chimes_ret_var_1 = (cbrt(arg)); rm_stack(false, 0UL, "CBRT", &____must_manage_CBRT, ____alias_loc_id_44, ____chimes_did_disable1, false); return ____chimes_ret_var_1; ; rm_stack(false, 0UL, "CBRT", &____must_manage_CBRT, ____alias_loc_id_44, ____chimes_did_disable1, false); }
# 106 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 107 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
inline real8 FABS_npm(real8 arg);
inline real8 FABS_quick(real8 arg); inline real8 FABS(real8 arg);
inline real8 FABS_resumable(real8 arg) {const int ____chimes_did_disable2 = new_stack((void *)(&FABS), "FABS", &____must_manage_FABS, 1, 0, (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ; double ____chimes_ret_var_2; ; ____chimes_ret_var_2 = (fabs(arg)); rm_stack(false, 0UL, "FABS", &____must_manage_FABS, ____alias_loc_id_9, ____chimes_did_disable2, false); return ____chimes_ret_var_2; ; rm_stack(false, 0UL, "FABS", &____must_manage_FABS, ____alias_loc_id_9, ____chimes_did_disable2, false); }
# 108 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 109 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 110 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 111 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 112 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 113 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 114 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 115 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
struct Domain {
# 257 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 257 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* x ;
# 258 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* y ;
# 259 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* z ;
# 260 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 261 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* xd ;
# 262 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* yd ;
# 263 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* zd ;
# 264 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 265 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* xdd ;
# 266 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* ydd ;
# 267 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* zdd ;
# 268 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 269 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* fx ;
# 270 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* fy ;
# 271 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* fz ;
# 272 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 273 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* nodalMass ;
# 274 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 275 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* symmX ;
# 276 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* symmY ;
# 277 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* symmZ ;
# 278 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 279 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* nodeElemCount ;
# 280 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* nodeElemStart ;
# 281 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* nodeElemCornerList ;
# 282 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    int cornerListSize;
# 283 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 284 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 285 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 286 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* matElemlist ;
# 287 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* nodelist ;
# 288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 289 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* lxim ;
# 290 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* lxip ;
# 291 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* letam ;
# 292 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* letap ;
# 293 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* lzetam ;
# 294 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t* lzetap ;
# 295 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 296 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Int_t* elemBC ;
# 297 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 298 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* dxx ;
# 299 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* dyy ;
# 300 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* dzz ;
# 301 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 302 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* delv_xi ;
# 303 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* delv_eta ;
# 304 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* delv_zeta ;
# 305 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 306 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* delx_xi ;
# 307 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* delx_eta ;
# 308 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* delx_zeta ;
# 309 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 310 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* e ;
# 311 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 312 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* p ;
# 313 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* q ;
# 314 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* ql ;
# 315 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* qq ;
# 316 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 317 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* v ;
# 318 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* volo ;
# 319 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* vnew ;
# 320 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* delv ;
# 321 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* vdov ;
# 322 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 323 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* arealg ;
# 324 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 325 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* ss ;
# 326 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 327 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t* elemMass ;
# 328 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 329 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 330 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 331 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dtfixed ;
# 332 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t time ;
# 333 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t deltatime ;
# 334 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t deltatimemultlb ;
# 335 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t deltatimemultub ;
# 336 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t stoptime ;
# 337 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 338 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t u_cut ;
# 339 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t hgcoef ;
# 340 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t qstop ;
# 341 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t monoq_max_slope ;
# 342 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t monoq_limiter_mult ;
# 343 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t e_cut ;
# 344 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t p_cut ;
# 345 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t ss4o3 ;
# 346 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t q_cut ;
# 347 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t v_cut ;
# 348 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t qlc_monoq ;
# 349 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t qqc_monoq ;
# 350 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t qqc ;
# 351 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t eosvmax ;
# 352 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t eosvmin ;
# 353 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pmin ;
# 354 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t emin ;
# 355 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dvovmax ;
# 356 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t refdens ;
# 357 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 358 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dtcourant ;
# 359 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dthydro ;
# 360 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dtmax ;
# 361 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 362 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Int_t cycle ;
# 363 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 364 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t sizeX ;
# 365 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t sizeY ;
# 366 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t sizeZ ;
# 367 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 368 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numElem ;
# 369 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numNode ;
# 370 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
} domain ;
# 371 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 372 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 373 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 374 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateNodalPersistent_npm(Domain *self, size_t size);
void AllocateNodalPersistent_quick(Domain *self, size_t size); void AllocateNodalPersistent(Domain *self, size_t size);
void AllocateNodalPersistent_resumable(Domain *self, size_t size)
# 375 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable3 = new_stack((void *)(&AllocateNodalPersistent), "AllocateNodalPersistent", &____must_manage_AllocateNodalPersistent, 2, 0, (size_t)(2224956529753665263UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 376 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->x = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 377 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->y = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 378 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->z = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 379 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 380 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->xd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 381 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->yd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 382 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->zd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 383 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->xd, 0x00, sizeof(Real_t) * size);
# 384 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->yd, 0x00, sizeof(Real_t) * size);
# 385 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->zd, 0x00, sizeof(Real_t) * size);
# 386 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 387 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->xdd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 388 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->ydd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 389 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->zdd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 390 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->xdd, 0x00, sizeof(Real_t) * size);
# 391 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->ydd, 0x00, sizeof(Real_t) * size);
# 392 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->zdd, 0x00, sizeof(Real_t) * size);
# 393 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 394 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->fx = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 395 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->fy = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->fz = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 397 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 398 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodalMass = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 399 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->nodalMass, 0x00, sizeof(Real_t) * size);
# 400 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "AllocateNodalPersistent", &____must_manage_AllocateNodalPersistent, ____alias_loc_id_1, ____chimes_did_disable3, false); }
# 401 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 402 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateElemPersistent_npm(Domain *self, size_t size);
void AllocateElemPersistent_quick(Domain *self, size_t size); void AllocateElemPersistent(Domain *self, size_t size);
void AllocateElemPersistent_resumable(Domain *self, size_t size)
# 403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable4 = new_stack((void *)(&AllocateElemPersistent), "AllocateElemPersistent", &____must_manage_AllocateElemPersistent, 2, 0, (size_t)(2224956529753665462UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 404 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->matElemlist = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 405 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodelist = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * 8 * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * 8*size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 406 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 407 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->lxim = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 408 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->lxip = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 409 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->letam = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 410 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->letap = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 411 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->lzetam = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 412 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->lzetap = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 413 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 414 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->elemBC = (Int_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Int_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Int_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 415 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 416 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->e = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 417 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->e, 0x00, sizeof(Real_t) * size);
# 418 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 419 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->p = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 420 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->p, 0x00, sizeof(Real_t) * size);
# 421 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->q = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 422 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->ql = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 423 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->qq = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 424 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 425 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->v = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 426 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { int i; for ( i = (0) ;i < size; i++) { (self->v)[i] = 1.0; } };
# 427 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->volo = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 428 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delv = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 429 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->vdov = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 430 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 431 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->arealg = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 432 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->ss = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 434 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 435 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->elemMass = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 436 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "AllocateElemPersistent", &____must_manage_AllocateElemPersistent, ____alias_loc_id_2, ____chimes_did_disable4, false); }
# 437 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 438 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 439 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 440 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateElemTemporary_npm(Domain *self, size_t size);
void AllocateElemTemporary_quick(Domain *self, size_t size); void AllocateElemTemporary(Domain *self, size_t size);
void AllocateElemTemporary_resumable(Domain *self, size_t size)
# 441 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable5 = new_stack((void *)(&AllocateElemTemporary), "AllocateElemTemporary", &____must_manage_AllocateElemTemporary, 2, 0, (size_t)(2224956529753665541UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 442 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->dxx = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 443 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->dyy = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 444 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->dzz = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 445 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delv_xi = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 447 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delv_eta = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 448 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delv_zeta = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 449 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 450 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delx_xi = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 451 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delx_eta = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 452 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delx_zeta = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 453 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 454 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->vnew = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 455 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "AllocateElemTemporary", &____must_manage_AllocateElemTemporary, ____alias_loc_id_3, ____chimes_did_disable5, false); }
# 456 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 457 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateNodesets_npm(Domain *self, size_t size);
void AllocateNodesets_quick(Domain *self, size_t size); void AllocateNodesets(Domain *self, size_t size);
void AllocateNodesets_resumable(Domain *self, size_t size)
# 458 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable6 = new_stack((void *)(&AllocateNodesets), "AllocateNodesets", &____must_manage_AllocateNodesets, 2, 0, (size_t)(2224956529753665571UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 459 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->symmX = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665551UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 460 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->symmY = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665551UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 461 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->symmZ = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665551UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 462 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "AllocateNodesets", &____must_manage_AllocateNodesets, ____alias_loc_id_4, ____chimes_did_disable6, false); }
# 463 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 464 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateNodeElemIndexes_npm(Domain *self);
void AllocateNodeElemIndexes_quick(Domain *self); void AllocateNodeElemIndexes(Domain *self);
void AllocateNodeElemIndexes_resumable(Domain *self)
# 465 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable7 = new_stack((void *)(&AllocateNodeElemIndexes), "AllocateNodeElemIndexes", &____must_manage_AllocateNodeElemIndexes, 1, 0, (size_t)(2224956529753665893UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 466 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t m; ;
# 467 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t numElem; numElem = (self->numElem) ;
# 468 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t numNode; numNode = (self->numNode) ;
# 469 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 470 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodeElemCount = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((numNode * sizeof(Index_t)) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, numNode * sizeof(Index_t), 2224956529753665656UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 472 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 473 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { Index_t i; for ( i = (0) ;i<numNode;++i) {
# 474 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        (self->nodeElemCount)[i]=0;
# 475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } }
# 476 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 477 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { Index_t i; for ( i = (0) ; i<numElem; ++i) {
# 478 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Index_t *nl; nl = (self->nodelist + (8 * i)) ;
# 479 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { Index_t j; for ( j = (0) ; j < 8; ++j) {
# 480 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            ++(self->nodeElemCount[nl[j]]);
# 481 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 482 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } }
# 483 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 484 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodeElemStart = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * numNode) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * numNode, 2224956529753665656UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 485 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 486 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodeElemStart[0]=0;
# 487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 488 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { Index_t i; for ( i = (1) ; i < numNode; ++i) {
# 489 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        self->nodeElemStart[i] = self->nodeElemStart[i-1] + self->nodeElemCount[i-1] ;
# 490 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } }
# 491 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 492 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->cornerListSize = (self->nodeElemStart[numNode-1] +
# 493 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                self->nodeElemCount[numNode-1]);
# 494 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodeElemCornerList = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * self->cornerListSize) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * self->cornerListSize, 2224956529753665656UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 495 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 496 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { Index_t i; for ( i = (0) ; i < numNode; ++i) {
# 497 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        (self->nodeElemCount)[i]=0;
# 498 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } }
# 499 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 500 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { Index_t i; for ( i = (0) ; i < numElem; ++i) {
# 501 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Index_t *nl; nl = (self->nodelist + (8 * i)) ;
# 502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { Index_t j; for ( j = (0) ; j < 8; ++j) {
# 503 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             Index_t m; m = (nl[j]) ;
# 504 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             Index_t k; k = (i*8 + j) ;
# 505 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             Index_t offset; offset = (self->nodeElemStart[m]+self->nodeElemCount[m]) ;
# 506 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 507 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            self->nodeElemCornerList[offset] = k;
# 508 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            ++((self->nodeElemCount)[m]);
# 509 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 510 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } }
# 511 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 512 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t clSize; clSize = (self->cornerListSize) ;
# 513 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { Index_t i; for ( i = (0) ; i < clSize; ++i) {
# 514 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Index_t clv; clv = (self->nodeElemCornerList[i]) ;
# 515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        if ((clv < 0) || (clv > numElem*8)) {
# 516 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            fprintf(stderr,
# 517 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                    "AllocateNodeElemIndexes(): nodeElemCornerList entry out of range!\n");
# 518 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            exit(1);
# 519 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        }
# 520 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } }
# 521 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "AllocateNodeElemIndexes", &____must_manage_AllocateNodeElemIndexes, ____alias_loc_id_5, ____chimes_did_disable7, false); }
# 552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void TimeIncrement_npm();
static inline void TimeIncrement_quick(); static inline void TimeIncrement();
static inline
# 553 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void TimeIncrement_resumable()
# 554 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable8 = new_stack((void *)(&TimeIncrement), "TimeIncrement", &____must_manage_TimeIncrement, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 555 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t targetdt; targetdt = (domain.stoptime - domain.time) ;
# 556 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 557 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if ((domain.dtfixed <= (0.0)) && (domain.cycle != 0)) {
# 558 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ratio; ;
# 559 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t olddt; olddt = (domain.deltatime) ;
# 560 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 561 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 562 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t newdt; newdt = (Real_t(1.0e+20)) ;
# 563 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (domain.dtcourant < newdt) {
# 564 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   newdt = domain.dtcourant / Real_t(2.0) ;
# 565 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 566 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (domain.dthydro < newdt) {
# 567 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   newdt = domain.dthydro * Real_t(2.0) / Real_t(3.0) ;
# 568 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 569 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 570 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ratio = newdt / olddt ;
# 571 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (ratio >= Real_t(1.0)) {
# 572 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (ratio < domain.deltatimemultlb) {{
# 573 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    newdt = olddt ;
# 574 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }; } else if (ratio > domain.deltatimemultub) {
# 576 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    newdt = olddt*domain.deltatimemultub ;
# 577 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 578 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 580 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (newdt > domain.dtmax) {
# 581 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   newdt = domain.dtmax ;
# 582 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 583 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.deltatime = newdt ;
# 584 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 585 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 586 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 587 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if ((targetdt > domain.deltatime) &&
# 588 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  (targetdt < (Real_t(4.0) * domain.deltatime / Real_t(3.0))) ) {
# 589 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  targetdt = Real_t(2.0) * domain.deltatime / Real_t(3.0) ;
# 590 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 591 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 592 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (targetdt < domain.deltatime) {
# 593 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.deltatime = targetdt ;
# 594 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 595 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 596 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.time += domain.deltatime ;
# 597 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 ++domain.cycle ;
# 599 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "TimeIncrement", &____must_manage_TimeIncrement, ____alias_loc_id_8, ____chimes_did_disable8, false); }
# 600 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void InitStressTermsForElems_npm(Index_t numElem, Real_t *sigxx, Real_t *sigyy, Real_t *sigzz);
static inline void InitStressTermsForElems_quick(Index_t numElem, Real_t *sigxx, Real_t *sigyy, Real_t *sigzz); static inline void InitStressTermsForElems(Index_t numElem, Real_t *sigxx, Real_t *sigyy, Real_t *sigzz);
static inline
# 602 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void InitStressTermsForElems_resumable(Index_t numElem,
# 603 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                             Real_t *sigxx, Real_t *sigyy, Real_t *sigzz)
# 604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable9 = new_stack((void *)(&InitStressTermsForElems), "InitStressTermsForElems", &____must_manage_InitStressTermsForElems, 4, 0, (size_t)(0UL), (size_t)(2224956529753673607UL), (size_t)(2224956529753673608UL), (size_t)(2224956529753673609UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 605 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 606 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 607 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_0: bool ____chimes_disable0 = disable_current_thread(); void *____chimes_parent_ctx1 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth0 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth0 = get_thread_stack_depth(); size_t ____chimes_region_id0; unsigned ____chimes_parent_thread0 = entering_omp_parallel(0, &____chimes_region_id0, 1, &numElem); int ____chimes_first_iter0 = 1;
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem) firstprivate(____chimes_first_iter0)
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 609 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < numElem ; ++i){ { if (____chimes_first_iter0) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread0, ____chimes_parent_ctx1, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth0, ____chimes_region_id0, 1, &numElem); ____chimes_first_iter0 = 0; } {
# 610 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  sigxx[i] = sigyy[i] = sigzz[i] = - domain.p[i] - domain.q[i];
# 611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth0, ____chimes_region_id0, 1); reenable_current_thread(____chimes_disable0); }
# 612 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "InitStressTermsForElems", &____must_manage_InitStressTermsForElems, ____alias_loc_id_38, ____chimes_did_disable9, false); }
# 613 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 614 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcElemShapeFunctionDerivatives_npm( const Real_t* const x, const Real_t* const y, const Real_t* const z, Real_t b[][8], Real_t* const volume );
static inline void CalcElemShapeFunctionDerivatives_quick( const Real_t* const x, const Real_t* const y, const Real_t* const z, Real_t b[][8], Real_t* const volume ); static inline void CalcElemShapeFunctionDerivatives( const Real_t* const x, const Real_t* const y, const Real_t* const z, Real_t b[][8], Real_t* const volume );
static inline
# 615 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemShapeFunctionDerivatives_resumable( const Real_t* const x,
# 616 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           const Real_t* const y,
# 617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           const Real_t* const z,
# 618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           Real_t b[][8],
# 619 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           Real_t* const volume )
# 620 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable10 = new_stack((void *)(&CalcElemShapeFunctionDerivatives), "CalcElemShapeFunctionDerivatives", &____must_manage_CalcElemShapeFunctionDerivatives, 5, 0, (size_t)(2224956529753672372UL), (size_t)(2224956529753672373UL), (size_t)(2224956529753672374UL), (size_t)(2224956529753672375UL), (size_t)(2224956529753672376UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 621 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x0; x0 = (x[0]) ; Real_t x1; x1 = (x[1]) ;
# 622 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x2; x2 = (x[2]) ; Real_t x3; x3 = (x[3]) ;
# 623 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x4; x4 = (x[4]) ; Real_t x5; x5 = (x[5]) ;
# 624 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x6; x6 = (x[6]) ; Real_t x7; x7 = (x[7]) ;
# 625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 626 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y0; y0 = (y[0]) ; Real_t y1; y1 = (y[1]) ;
# 627 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y2; y2 = (y[2]) ; Real_t y3; y3 = (y[3]) ;
# 628 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y4; y4 = (y[4]) ; Real_t y5; y5 = (y[5]) ;
# 629 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y6; y6 = (y[6]) ; Real_t y7; y7 = (y[7]) ;
# 630 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z0; z0 = (z[0]) ; Real_t z1; z1 = (z[1]) ;
# 632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z2; z2 = (z[2]) ; Real_t z3; z3 = (z[3]) ;
# 633 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z4; z4 = (z[4]) ; Real_t z5; z5 = (z[5]) ;
# 634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z6; z6 = (z[6]) ; Real_t z7; z7 = (z[7]) ;
# 635 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 636 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t fjxxi; Real_t fjxet; Real_t fjxze; ;
# 637 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t fjyxi; Real_t fjyet; Real_t fjyze; ;
# 638 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t fjzxi; Real_t fjzet; Real_t fjzze; ;
# 639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t cjxxi; Real_t cjxet; Real_t cjxze; ;
# 640 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t cjyxi; Real_t cjyet; Real_t cjyze; ;
# 641 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t cjzxi; Real_t cjzet; Real_t cjzze; ;
# 642 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjxxi = .125 * ( (x6-x0) + (x5-x3) - (x7-x1) - (x4-x2) );
# 644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjxet = .125 * ( (x6-x0) - (x5-x3) + (x7-x1) - (x4-x2) );
# 645 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjxze = .125 * ( (x6-x0) + (x5-x3) + (x7-x1) + (x4-x2) );
# 646 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 647 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjyxi = .125 * ( (y6-y0) + (y5-y3) - (y7-y1) - (y4-y2) );
# 648 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjyet = .125 * ( (y6-y0) - (y5-y3) + (y7-y1) - (y4-y2) );
# 649 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjyze = .125 * ( (y6-y0) + (y5-y3) + (y7-y1) + (y4-y2) );
# 650 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 651 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjzxi = .125 * ( (z6-z0) + (z5-z3) - (z7-z1) - (z4-z2) );
# 652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjzet = .125 * ( (z6-z0) - (z5-z3) + (z7-z1) - (z4-z2) );
# 653 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjzze = .125 * ( (z6-z0) + (z5-z3) + (z7-z1) + (z4-z2) );
# 654 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 656 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjxxi = (fjyet * fjzze) - (fjzet * fjyze);
# 657 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjxet = - (fjyxi * fjzze) + (fjzxi * fjyze);
# 658 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjxze = (fjyxi * fjzet) - (fjzxi * fjyet);
# 659 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 660 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjyxi = - (fjxet * fjzze) + (fjzet * fjxze);
# 661 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjyet = (fjxxi * fjzze) - (fjzxi * fjxze);
# 662 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjyze = - (fjxxi * fjzet) + (fjzxi * fjxet);
# 663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 664 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjzxi = (fjxet * fjyze) - (fjyet * fjxze);
# 665 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjzet = - (fjxxi * fjyze) + (fjyxi * fjxze);
# 666 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjzze = (fjxxi * fjyet) - (fjyxi * fjxet);
# 667 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 668 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 669 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 670 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 671 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 672 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][0] = - cjxxi - cjxet - cjxze;
# 673 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][1] = cjxxi - cjxet - cjxze;
# 674 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][2] = cjxxi + cjxet - cjxze;
# 675 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][3] = - cjxxi + cjxet - cjxze;
# 676 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][4] = -b[0][2];
# 677 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][5] = -b[0][3];
# 678 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][6] = -b[0][0];
# 679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][7] = -b[0][1];
# 680 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 681 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][0] = - cjyxi - cjyet - cjyze;
# 682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][1] = cjyxi - cjyet - cjyze;
# 683 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][2] = cjyxi + cjyet - cjyze;
# 684 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][3] = - cjyxi + cjyet - cjyze;
# 685 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][4] = -b[1][2];
# 686 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][5] = -b[1][3];
# 687 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][6] = -b[1][0];
# 688 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][7] = -b[1][1];
# 689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 690 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][0] = - cjzxi - cjzet - cjzze;
# 691 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][1] = cjzxi - cjzet - cjzze;
# 692 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][2] = cjzxi + cjzet - cjzze;
# 693 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][3] = - cjzxi + cjzet - cjzze;
# 694 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][4] = -b[2][2];
# 695 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][5] = -b[2][3];
# 696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][6] = -b[2][0];
# 697 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][7] = -b[2][1];
# 698 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 699 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 700 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *volume = Real_t(8.) * ( fjxet * cjxet + fjyet * cjyet + fjzet * cjzet);
# 701 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemShapeFunctionDerivatives", &____must_manage_CalcElemShapeFunctionDerivatives, ____alias_loc_id_29, ____chimes_did_disable10, false); }
# 702 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 703 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void SumElemFaceNormal_npm(Real_t *normalX0, Real_t *normalY0, Real_t *normalZ0, Real_t *normalX1, Real_t *normalY1, Real_t *normalZ1, Real_t *normalX2, Real_t *normalY2, Real_t *normalZ2, Real_t *normalX3, Real_t *normalY3, Real_t *normalZ3, const Real_t x0, const Real_t y0, const Real_t z0, const Real_t x1, const Real_t y1, const Real_t z1, const Real_t x2, const Real_t y2, const Real_t z2, const Real_t x3, const Real_t y3, const Real_t z3);
static inline void SumElemFaceNormal_quick(Real_t *normalX0, Real_t *normalY0, Real_t *normalZ0, Real_t *normalX1, Real_t *normalY1, Real_t *normalZ1, Real_t *normalX2, Real_t *normalY2, Real_t *normalZ2, Real_t *normalX3, Real_t *normalY3, Real_t *normalZ3, const Real_t x0, const Real_t y0, const Real_t z0, const Real_t x1, const Real_t y1, const Real_t z1, const Real_t x2, const Real_t y2, const Real_t z2, const Real_t x3, const Real_t y3, const Real_t z3); static inline void SumElemFaceNormal(Real_t *normalX0, Real_t *normalY0, Real_t *normalZ0, Real_t *normalX1, Real_t *normalY1, Real_t *normalZ1, Real_t *normalX2, Real_t *normalY2, Real_t *normalZ2, Real_t *normalX3, Real_t *normalY3, Real_t *normalZ3, const Real_t x0, const Real_t y0, const Real_t z0, const Real_t x1, const Real_t y1, const Real_t z1, const Real_t x2, const Real_t y2, const Real_t z2, const Real_t x3, const Real_t y3, const Real_t z3);
static inline
# 704 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void SumElemFaceNormal_resumable(Real_t *normalX0, Real_t *normalY0, Real_t *normalZ0,
# 705 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       Real_t *normalX1, Real_t *normalY1, Real_t *normalZ1,
# 706 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       Real_t *normalX2, Real_t *normalY2, Real_t *normalZ2,
# 707 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       Real_t *normalX3, Real_t *normalY3, Real_t *normalZ3,
# 708 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x0, const Real_t y0, const Real_t z0,
# 709 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x1, const Real_t y1, const Real_t z1,
# 710 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x2, const Real_t y2, const Real_t z2,
# 711 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x3, const Real_t y3, const Real_t z3)
# 712 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable11 = new_stack((void *)(&SumElemFaceNormal), "SumElemFaceNormal", &____must_manage_SumElemFaceNormal, 24, 0, (size_t)(2224956529753679568UL), (size_t)(2224956529753679569UL), (size_t)(2224956529753679570UL), (size_t)(2224956529753679571UL), (size_t)(2224956529753679572UL), (size_t)(2224956529753679573UL), (size_t)(2224956529753679574UL), (size_t)(2224956529753679575UL), (size_t)(2224956529753679576UL), (size_t)(2224956529753679577UL), (size_t)(2224956529753679578UL), (size_t)(2224956529753679579UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 713 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t bisectX0; bisectX0 = (Real_t(0.5) * (x3 + x2 - x1 - x0)) ;
# 714 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t bisectY0; bisectY0 = (Real_t(0.5) * (y3 + y2 - y1 - y0)) ;
# 715 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t bisectZ0; bisectZ0 = (Real_t(0.5) * (z3 + z2 - z1 - z0)) ;
# 716 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t bisectX1; bisectX1 = (Real_t(0.5) * (x2 + x1 - x3 - x0)) ;
# 717 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t bisectY1; bisectY1 = (Real_t(0.5) * (y2 + y1 - y3 - y0)) ;
# 718 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t bisectZ1; bisectZ1 = (Real_t(0.5) * (z2 + z1 - z3 - z0)) ;
# 719 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t areaX; areaX = (Real_t(0.25) * (bisectY0 * bisectZ1 - bisectZ0 * bisectY1)) ;
# 720 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t areaY; areaY = (Real_t(0.25) * (bisectZ0 * bisectX1 - bisectX0 * bisectZ1)) ;
# 721 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t areaZ; areaZ = (Real_t(0.25) * (bisectX0 * bisectY1 - bisectY0 * bisectX1)) ;
# 722 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 723 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalX0 += areaX;
# 724 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalX1 += areaX;
# 725 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalX2 += areaX;
# 726 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalX3 += areaX;
# 727 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 728 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalY0 += areaY;
# 729 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalY1 += areaY;
# 730 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalY2 += areaY;
# 731 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalY3 += areaY;
# 732 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 733 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalZ0 += areaZ;
# 734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalZ1 += areaZ;
# 735 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalZ2 += areaZ;
# 736 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalZ3 += areaZ;
# 737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "SumElemFaceNormal", &____must_manage_SumElemFaceNormal, ____alias_loc_id_49, ____chimes_did_disable11, false); }
# 738 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 739 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcElemNodeNormals_npm(Real_t pfx[8], Real_t pfy[8], Real_t pfz[8], const Real_t x[8], const Real_t y[8], const Real_t z[8]);
static inline void CalcElemNodeNormals_quick(Real_t pfx[8], Real_t pfy[8], Real_t pfz[8], const Real_t x[8], const Real_t y[8], const Real_t z[8]); static inline void CalcElemNodeNormals(Real_t pfx[8], Real_t pfy[8], Real_t pfz[8], const Real_t x[8], const Real_t y[8], const Real_t z[8]);
static inline
# 740 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemNodeNormals_resumable(Real_t pfx[8],
# 741 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         Real_t pfy[8],
# 742 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         Real_t pfz[8],
# 743 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         const Real_t x[8],
# 744 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         const Real_t y[8],
# 745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         const Real_t z[8])
# 746 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable12 = new_stack((void *)(&CalcElemNodeNormals), "CalcElemNodeNormals", &____must_manage_CalcElemNodeNormals, 6, 0, (size_t)(2224956529753678965UL), (size_t)(2224956529753678966UL), (size_t)(2224956529753678967UL), (size_t)(2224956529753678968UL), (size_t)(2224956529753678969UL), (size_t)(2224956529753678970UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 747 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i < 8 ; ++i) {
# 748 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  pfx[i] = Real_t(0.0);
# 749 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  pfy[i] = Real_t(0.0);
# 750 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  pfz[i] = Real_t(0.0);
# 751 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 752 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 753 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("SumElemFaceNormal", 0); SumElemFaceNormal_npm(&pfx[0], &pfy[0], &pfz[0], &pfx[1], &pfy[1], &pfz[1], &pfx[2], &pfy[2], &pfz[2], &pfx[3], &pfy[3], &pfz[3], x[0], y[0], z[0], x[1], y[1], z[1], x[2], y[2], z[2], x[3], y[3], z[3]); });
# 759 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 760 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("SumElemFaceNormal", 0); SumElemFaceNormal_npm(&pfx[0], &pfy[0], &pfz[0], &pfx[4], &pfy[4], &pfz[4], &pfx[5], &pfy[5], &pfz[5], &pfx[1], &pfy[1], &pfz[1], x[0], y[0], z[0], x[4], y[4], z[4], x[5], y[5], z[5], x[1], y[1], z[1]); });
# 766 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 767 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: ({ calling_npm("SumElemFaceNormal", 0); SumElemFaceNormal_npm(&pfx[1], &pfy[1], &pfz[1], &pfx[5], &pfy[5], &pfz[5], &pfx[6], &pfy[6], &pfz[6], &pfx[2], &pfy[2], &pfz[2], x[1], y[1], z[1], x[5], y[5], z[5], x[6], y[6], z[6], x[2], y[2], z[2]); });
# 773 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 774 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: ({ calling_npm("SumElemFaceNormal", 0); SumElemFaceNormal_npm(&pfx[2], &pfy[2], &pfz[2], &pfx[6], &pfy[6], &pfz[6], &pfx[7], &pfy[7], &pfz[7], &pfx[3], &pfy[3], &pfz[3], x[2], y[2], z[2], x[6], y[6], z[6], x[7], y[7], z[7], x[3], y[3], z[3]); });
# 780 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 781 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_4: ({ calling_npm("SumElemFaceNormal", 0); SumElemFaceNormal_npm(&pfx[3], &pfy[3], &pfz[3], &pfx[7], &pfy[7], &pfz[7], &pfx[4], &pfy[4], &pfz[4], &pfx[0], &pfy[0], &pfz[0], x[3], y[3], z[3], x[7], y[7], z[7], x[4], y[4], z[4], x[0], y[0], z[0]); });
# 787 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 788 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_5: ({ calling_npm("SumElemFaceNormal", 0); SumElemFaceNormal_npm(&pfx[4], &pfy[4], &pfz[4], &pfx[7], &pfy[7], &pfz[7], &pfx[6], &pfy[6], &pfz[6], &pfx[5], &pfy[5], &pfz[5], x[4], y[4], z[4], x[7], y[7], z[7], x[6], y[6], z[6], x[5], y[5], z[5]); });
# 794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemNodeNormals", &____must_manage_CalcElemNodeNormals, ____alias_loc_id_47, ____chimes_did_disable12, false); }
# 795 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 796 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void SumElemStressesToNodeForces_npm( const Real_t B[][8], const Real_t stress_xx, const Real_t stress_yy, const Real_t stress_zz, Real_t* const fx, Real_t* const fy, Real_t* const fz );
static inline void SumElemStressesToNodeForces_quick( const Real_t B[][8], const Real_t stress_xx, const Real_t stress_yy, const Real_t stress_zz, Real_t* const fx, Real_t* const fy, Real_t* const fz ); static inline void SumElemStressesToNodeForces( const Real_t B[][8], const Real_t stress_xx, const Real_t stress_yy, const Real_t stress_zz, Real_t* const fx, Real_t* const fy, Real_t* const fz );
static inline
# 797 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void SumElemStressesToNodeForces_resumable( const Real_t B[][8],
# 798 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t stress_xx,
# 799 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t stress_yy,
# 800 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t stress_zz,
# 801 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Real_t* const fx,
# 802 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Real_t* const fy,
# 803 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Real_t* const fz )
# 804 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable13 = new_stack((void *)(&SumElemStressesToNodeForces), "SumElemStressesToNodeForces", &____must_manage_SumElemStressesToNodeForces, 7, 0, (size_t)(2224956529753679329UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(2224956529753679333UL), (size_t)(2224956529753679334UL), (size_t)(2224956529753679335UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 805 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfx0; pfx0 = (B[0][0]) ; Real_t pfx1; pfx1 = (B[0][1]) ;
# 806 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfx2; pfx2 = (B[0][2]) ; Real_t pfx3; pfx3 = (B[0][3]) ;
# 807 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfx4; pfx4 = (B[0][4]) ; Real_t pfx5; pfx5 = (B[0][5]) ;
# 808 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfx6; pfx6 = (B[0][6]) ; Real_t pfx7; pfx7 = (B[0][7]) ;
# 809 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 810 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfy0; pfy0 = (B[1][0]) ; Real_t pfy1; pfy1 = (B[1][1]) ;
# 811 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfy2; pfy2 = (B[1][2]) ; Real_t pfy3; pfy3 = (B[1][3]) ;
# 812 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfy4; pfy4 = (B[1][4]) ; Real_t pfy5; pfy5 = (B[1][5]) ;
# 813 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfy6; pfy6 = (B[1][6]) ; Real_t pfy7; pfy7 = (B[1][7]) ;
# 814 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 815 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfz0; pfz0 = (B[2][0]) ; Real_t pfz1; pfz1 = (B[2][1]) ;
# 816 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfz2; pfz2 = (B[2][2]) ; Real_t pfz3; pfz3 = (B[2][3]) ;
# 817 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfz4; pfz4 = (B[2][4]) ; Real_t pfz5; pfz5 = (B[2][5]) ;
# 818 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfz6; pfz6 = (B[2][6]) ; Real_t pfz7; pfz7 = (B[2][7]) ;
# 819 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 820 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[0] = -( stress_xx * pfx0 );
# 821 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[1] = -( stress_xx * pfx1 );
# 822 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[2] = -( stress_xx * pfx2 );
# 823 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[3] = -( stress_xx * pfx3 );
# 824 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[4] = -( stress_xx * pfx4 );
# 825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[5] = -( stress_xx * pfx5 );
# 826 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[6] = -( stress_xx * pfx6 );
# 827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[7] = -( stress_xx * pfx7 );
# 828 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 829 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[0] = -( stress_yy * pfy0 );
# 830 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[1] = -( stress_yy * pfy1 );
# 831 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[2] = -( stress_yy * pfy2 );
# 832 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[3] = -( stress_yy * pfy3 );
# 833 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[4] = -( stress_yy * pfy4 );
# 834 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[5] = -( stress_yy * pfy5 );
# 835 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[6] = -( stress_yy * pfy6 );
# 836 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[7] = -( stress_yy * pfy7 );
# 837 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 838 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[0] = -( stress_zz * pfz0 );
# 839 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[1] = -( stress_zz * pfz1 );
# 840 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[2] = -( stress_zz * pfz2 );
# 841 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[3] = -( stress_zz * pfz3 );
# 842 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[4] = -( stress_zz * pfz4 );
# 843 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[5] = -( stress_zz * pfz5 );
# 844 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[6] = -( stress_zz * pfz6 );
# 845 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[7] = -( stress_zz * pfz7 );
# 846 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "SumElemStressesToNodeForces", &____must_manage_SumElemStressesToNodeForces, ____alias_loc_id_48, ____chimes_did_disable13, false); }
# 847 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 848 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void IntegrateStressForElems_npm( Index_t numElem, Real_t *sigxx, Real_t *sigyy, Real_t *sigzz, Real_t *determ);
static inline void IntegrateStressForElems_quick( Index_t numElem, Real_t *sigxx, Real_t *sigyy, Real_t *sigzz, Real_t *determ); static inline void IntegrateStressForElems( Index_t numElem, Real_t *sigxx, Real_t *sigyy, Real_t *sigzz, Real_t *determ);
static inline
# 849 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void IntegrateStressForElems_resumable( Index_t numElem,
# 850 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Real_t *sigxx, Real_t *sigyy, Real_t *sigzz,
# 851 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Real_t *determ)
# 852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable14 = new_stack((void *)(&IntegrateStressForElems), "IntegrateStressForElems", &____must_manage_IntegrateStressForElems, 5, 0, (size_t)(0UL), (size_t)(2224956529753673920UL), (size_t)(2224956529753673921UL), (size_t)(2224956529753673922UL), (size_t)(2224956529753673923UL)) ; Real_t z_local[8];
# 852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t y_local[8];
# 852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t x_local[8];
# 852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t B[3][8];
# 852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (____must_checkpoint_IntegrateStressForElems_B_0) { register_stack_vars(1, "IntegrateStressForElems|B|0", &____must_checkpoint_IntegrateStressForElems_B_0, "[3 x [8 x double]]", (void *)(B), (size_t)192, 0, 0, 0); } if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 853 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem8; numElem8 = (numElem * 8) ;
# 854 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fx_elem; fx_elem = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753673654UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 855 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fy_elem; fy_elem = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753673678UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 856 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fz_elem; fz_elem = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753673685UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 857 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((fx_elem) ? static_cast<void> (0) : __assert_fail ("fx_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 857, __PRETTY_FUNCTION__)); ((fy_elem) ? static_cast<void> (0) : __assert_fail ("fy_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 857, __PRETTY_FUNCTION__)); ((fz_elem) ? static_cast<void> (0) : __assert_fail ("fz_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 857, __PRETTY_FUNCTION__));
# 858 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 859 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_3: bool ____chimes_disable1 = disable_current_thread(); void *____chimes_parent_ctx2 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth1 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth1 = get_thread_stack_depth(); size_t ____chimes_region_id1; unsigned ____chimes_parent_thread1 = entering_omp_parallel(3, &____chimes_region_id1, 5, &B, &numElem, &x_local, &y_local, &z_local); int ____chimes_first_iter1 = 1;
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem) firstprivate(____chimes_first_iter1) firstprivate(B) firstprivate(x_local) firstprivate(y_local) firstprivate(z_local)
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 861 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for( Index_t k=0 ; k<numElem ; ++k )
# 862 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { { if (____chimes_first_iter1) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread1, ____chimes_parent_ctx2, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth1, ____chimes_region_id1, 5, &B, &numElem, &x_local, &y_local, &z_local); ____chimes_first_iter1 = 0; } {
# 863 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 865 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 866 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 867 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 868 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t *elemNodes; elemNodes = (domain.nodelist + (8 * k)) ;
# 869 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 870 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 871 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t lnode; for( lnode = (0) ; lnode<8 ; ++lnode )
# 872 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 873 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t gnode; gnode = (elemNodes[lnode]) ;
# 874 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x_local[lnode] = domain.x[gnode];
# 875 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y_local[lnode] = domain.y[gnode];
# 876 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z_local[lnode] = domain.z[gnode];
# 877 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 878 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 879 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 880 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: ({ calling_npm("CalcElemShapeFunctionDerivatives", 0); CalcElemShapeFunctionDerivatives_npm(x_local, y_local, z_local, B, &determ[k]); });
# 882 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 883 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: ({ calling_npm("CalcElemNodeNormals", 0); CalcElemNodeNormals_npm(B[0], B[1], B[2], x_local, y_local, z_local); });
# 885 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 886 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: ({ calling_npm("SumElemStressesToNodeForces", 0); SumElemStressesToNodeForces_npm(B, sigxx[k], sigyy[k], sigzz[k], &fx_elem[k*8], &fy_elem[k*8], &fz_elem[k*8]); }) ;
# 899 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 899 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth1, ____chimes_region_id1, 1); reenable_current_thread(____chimes_disable1); }
# 900 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 901 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 {
# 902 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t numNode; numNode = (domain.numNode) ;
# 903 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_4: bool ____chimes_disable2 = disable_current_thread(); void *____chimes_parent_ctx3 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth2 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth2 = get_thread_stack_depth(); size_t ____chimes_region_id2; unsigned ____chimes_parent_thread2 = entering_omp_parallel(4, &____chimes_region_id2, 5, &B, &numNode, &x_local, &y_local, &z_local); int ____chimes_first_iter2 = 1;
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode) firstprivate(____chimes_first_iter2)
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 905 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for( Index_t gnode=0 ; gnode<numNode ; ++gnode )
# 906 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { { if (____chimes_first_iter2) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread2, ____chimes_parent_ctx3, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth2, ____chimes_region_id2, 5, &B, &numNode, &x_local, &y_local, &z_local); ____chimes_first_iter2 = 0; } {
# 907 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t count; count = (domain.nodeElemCount[gnode]) ;
# 908 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t start; start = (domain.nodeElemStart[gnode]) ;
# 909 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t fx; fx = (Real_t(0.0)) ;
# 910 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t fy; fy = (Real_t(0.0)) ;
# 911 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t fz; fz = (Real_t(0.0)) ;
# 912 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   { Index_t i; for ( i = (0) ; i < count ; ++i) {
# 913 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t elem; elem = (domain.nodeElemCornerList[start+i]) ;
# 914 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fx += fx_elem[elem] ;
# 915 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fy += fy_elem[elem] ;
# 916 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fz += fz_elem[elem] ;
# 917 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } }
# 918 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fx[gnode] = fx ;
# 919 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fy[gnode] = fy ;
# 920 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fz[gnode] = fz ;
# 921 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } } leaving_omp_parallel(____chimes_call_stack_depth2, ____chimes_region_id2, 1); reenable_current_thread(____chimes_disable2); }
# 922 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 923 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 924 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fz_elem) - sizeof(void *)), 2224956529753673685UL);free((((unsigned char *)fz_elem) - sizeof(void *))); }) ;
# 925 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fy_elem) - sizeof(void *)), 2224956529753673678UL);free((((unsigned char *)fy_elem) - sizeof(void *))); }) ;
# 926 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fx_elem) - sizeof(void *)), 2224956529753673654UL);free((((unsigned char *)fx_elem) - sizeof(void *))); }) ;
# 927 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "IntegrateStressForElems", &____must_manage_IntegrateStressForElems, ____alias_loc_id_39, ____chimes_did_disable14, false); }
# 928 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 929 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 930 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CollectDomainNodesToElemNodes_npm(const Index_t* elemToNode, Real_t elemX[8], Real_t elemY[8], Real_t elemZ[8]);
static inline void CollectDomainNodesToElemNodes_quick(const Index_t* elemToNode, Real_t elemX[8], Real_t elemY[8], Real_t elemZ[8]); static inline void CollectDomainNodesToElemNodes(const Index_t* elemToNode, Real_t elemX[8], Real_t elemY[8], Real_t elemZ[8]);
static inline
# 931 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CollectDomainNodesToElemNodes_resumable(const Index_t* elemToNode,
# 932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                   Real_t elemX[8],
# 933 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                   Real_t elemY[8],
# 934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                   Real_t elemZ[8])
# 935 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable15 = new_stack((void *)(&CollectDomainNodesToElemNodes), "CollectDomainNodesToElemNodes", &____must_manage_CollectDomainNodesToElemNodes, 4, 0, (size_t)(2224956529753674459UL), (size_t)(2224956529753674460UL), (size_t)(2224956529753674461UL), (size_t)(2224956529753674462UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 936 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd0i; nd0i = (elemToNode[0]) ;
# 937 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd1i; nd1i = (elemToNode[1]) ;
# 938 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd2i; nd2i = (elemToNode[2]) ;
# 939 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd3i; nd3i = (elemToNode[3]) ;
# 940 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd4i; nd4i = (elemToNode[4]) ;
# 941 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd5i; nd5i = (elemToNode[5]) ;
# 942 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd6i; nd6i = (elemToNode[6]) ;
# 943 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd7i; nd7i = (elemToNode[7]) ;
# 944 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 945 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[0] = domain.x[nd0i];
# 946 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[1] = domain.x[nd1i];
# 947 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[2] = domain.x[nd2i];
# 948 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[3] = domain.x[nd3i];
# 949 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[4] = domain.x[nd4i];
# 950 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[5] = domain.x[nd5i];
# 951 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[6] = domain.x[nd6i];
# 952 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[7] = domain.x[nd7i];
# 953 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 954 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[0] = domain.y[nd0i];
# 955 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[1] = domain.y[nd1i];
# 956 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[2] = domain.y[nd2i];
# 957 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[3] = domain.y[nd3i];
# 958 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[4] = domain.y[nd4i];
# 959 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[5] = domain.y[nd5i];
# 960 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[6] = domain.y[nd6i];
# 961 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[7] = domain.y[nd7i];
# 962 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 963 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[0] = domain.z[nd0i];
# 964 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[1] = domain.z[nd1i];
# 965 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[2] = domain.z[nd2i];
# 966 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[3] = domain.z[nd3i];
# 967 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[4] = domain.z[nd4i];
# 968 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[5] = domain.z[nd5i];
# 969 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[6] = domain.z[nd6i];
# 970 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[7] = domain.z[nd7i];
# 971 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 972 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CollectDomainNodesToElemNodes", &____must_manage_CollectDomainNodesToElemNodes, ____alias_loc_id_41, ____chimes_did_disable15, false); }
# 973 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 974 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void VoluDer_npm(const Real_t x0, const Real_t x1, const Real_t x2, const Real_t x3, const Real_t x4, const Real_t x5, const Real_t y0, const Real_t y1, const Real_t y2, const Real_t y3, const Real_t y4, const Real_t y5, const Real_t z0, const Real_t z1, const Real_t z2, const Real_t z3, const Real_t z4, const Real_t z5, Real_t* dvdx, Real_t* dvdy, Real_t* dvdz);
static inline void VoluDer_quick(const Real_t x0, const Real_t x1, const Real_t x2, const Real_t x3, const Real_t x4, const Real_t x5, const Real_t y0, const Real_t y1, const Real_t y2, const Real_t y3, const Real_t y4, const Real_t y5, const Real_t z0, const Real_t z1, const Real_t z2, const Real_t z3, const Real_t z4, const Real_t z5, Real_t* dvdx, Real_t* dvdy, Real_t* dvdz); static inline void VoluDer(const Real_t x0, const Real_t x1, const Real_t x2, const Real_t x3, const Real_t x4, const Real_t x5, const Real_t y0, const Real_t y1, const Real_t y2, const Real_t y3, const Real_t y4, const Real_t y5, const Real_t z0, const Real_t z1, const Real_t z2, const Real_t z3, const Real_t z4, const Real_t z5, Real_t* dvdx, Real_t* dvdy, Real_t* dvdz);
static inline
# 975 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void VoluDer_resumable(const Real_t x0, const Real_t x1, const Real_t x2,
# 976 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t x3, const Real_t x4, const Real_t x5,
# 977 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t y0, const Real_t y1, const Real_t y2,
# 978 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t y3, const Real_t y4, const Real_t y5,
# 979 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t z0, const Real_t z1, const Real_t z2,
# 980 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t z3, const Real_t z4, const Real_t z5,
# 981 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             Real_t* dvdx, Real_t* dvdy, Real_t* dvdz)
# 982 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable16 = new_stack((void *)(&VoluDer), "VoluDer", &____must_manage_VoluDer, 21, 0, (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(2224956529753678550UL), (size_t)(2224956529753678551UL), (size_t)(2224956529753678552UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 983 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t twelfth; twelfth = (Real_t(1.0) / Real_t(12.0)) ;
# 984 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 985 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdx =
# 986 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y1 + y2) * (z0 + z1) - (y0 + y1) * (z1 + z2) +
# 987 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y0 + y4) * (z3 + z4) - (y3 + y4) * (z0 + z4) -
# 988 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y2 + y5) * (z3 + z5) + (y3 + y5) * (z2 + z5);
# 989 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdy =
# 990 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 - (x1 + x2) * (z0 + z1) + (x0 + x1) * (z1 + z2) -
# 991 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (x0 + x4) * (z3 + z4) + (x3 + x4) * (z0 + z4) +
# 992 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (x2 + x5) * (z3 + z5) - (x3 + x5) * (z2 + z5);
# 993 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 994 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdz =
# 995 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 - (y1 + y2) * (x0 + x1) + (y0 + y1) * (x1 + x2) -
# 996 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y0 + y4) * (x3 + x4) + (y3 + y4) * (x0 + x4) +
# 997 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y2 + y5) * (x3 + x5) - (y3 + y5) * (x2 + x5);
# 998 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 999 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdx *= twelfth;
# 1000 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdy *= twelfth;
# 1001 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdz *= twelfth;
# 1002 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "VoluDer", &____must_manage_VoluDer, ____alias_loc_id_46, ____chimes_did_disable16, false); }
# 1003 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1004 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcElemVolumeDerivative_npm(Real_t dvdx[8], Real_t dvdy[8], Real_t dvdz[8], const Real_t x[8], const Real_t y[8], const Real_t z[8]);
static inline void CalcElemVolumeDerivative_quick(Real_t dvdx[8], Real_t dvdy[8], Real_t dvdz[8], const Real_t x[8], const Real_t y[8], const Real_t z[8]); static inline void CalcElemVolumeDerivative(Real_t dvdx[8], Real_t dvdy[8], Real_t dvdz[8], const Real_t x[8], const Real_t y[8], const Real_t z[8]);
static inline
# 1005 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemVolumeDerivative_resumable(Real_t dvdx[8],
# 1006 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t dvdy[8],
# 1007 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t dvdz[8],
# 1008 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              const Real_t x[8],
# 1009 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              const Real_t y[8],
# 1010 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              const Real_t z[8])
# 1011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable17 = new_stack((void *)(&CalcElemVolumeDerivative), "CalcElemVolumeDerivative", &____must_manage_CalcElemVolumeDerivative, 6, 0, (size_t)(2224956529753674970UL), (size_t)(2224956529753674971UL), (size_t)(2224956529753674972UL), (size_t)(2224956529753674973UL), (size_t)(2224956529753674974UL), (size_t)(2224956529753674975UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1012 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[1], x[2], x[3], x[4], x[5], x[7], y[1], y[2], y[3], y[4], y[5], y[7], z[1], z[2], z[3], z[4], z[5], z[7], &dvdx[0], &dvdy[0], &dvdz[0]); });
# 1016 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[0], x[1], x[2], x[7], x[4], x[6], y[0], y[1], y[2], y[7], y[4], y[6], z[0], z[1], z[2], z[7], z[4], z[6], &dvdx[3], &dvdy[3], &dvdz[3]); });
# 1020 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[3], x[0], x[1], x[6], x[7], x[5], y[3], y[0], y[1], y[6], y[7], y[5], z[3], z[0], z[1], z[6], z[7], z[5], &dvdx[2], &dvdy[2], &dvdz[2]); });
# 1024 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[2], x[3], x[0], x[5], x[6], x[4], y[2], y[3], y[0], y[5], y[6], y[4], z[2], z[3], z[0], z[5], z[6], z[4], &dvdx[1], &dvdy[1], &dvdz[1]); });
# 1028 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_4: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[7], x[6], x[5], x[0], x[3], x[1], y[7], y[6], y[5], y[0], y[3], y[1], z[7], z[6], z[5], z[0], z[3], z[1], &dvdx[4], &dvdy[4], &dvdz[4]); });
# 1032 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_5: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[4], x[7], x[6], x[1], x[0], x[2], y[4], y[7], y[6], y[1], y[0], y[2], z[4], z[7], z[6], z[1], z[0], z[2], &dvdx[5], &dvdy[5], &dvdz[5]); });
# 1036 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_6: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[5], x[4], x[7], x[2], x[1], x[3], y[5], y[4], y[7], y[2], y[1], y[3], z[5], z[4], z[7], z[2], z[1], z[3], &dvdx[6], &dvdy[6], &dvdz[6]); });
# 1040 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_7: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[6], x[5], x[4], x[3], x[2], x[0], y[6], y[5], y[4], y[3], y[2], y[0], z[6], z[5], z[4], z[3], z[2], z[0], &dvdx[7], &dvdy[7], &dvdz[7]); });
# 1044 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemVolumeDerivative", &____must_manage_CalcElemVolumeDerivative, ____alias_loc_id_42, ____chimes_did_disable17, false); }
# 1045 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1046 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcElemFBHourglassForce_npm(Real_t *xd, Real_t *yd, Real_t *zd, Real_t *hourgam0, Real_t *hourgam1, Real_t *hourgam2, Real_t *hourgam3, Real_t *hourgam4, Real_t *hourgam5, Real_t *hourgam6, Real_t *hourgam7, Real_t coefficient, Real_t *hgfx, Real_t *hgfy, Real_t *hgfz );
static inline void CalcElemFBHourglassForce_quick(Real_t *xd, Real_t *yd, Real_t *zd, Real_t *hourgam0, Real_t *hourgam1, Real_t *hourgam2, Real_t *hourgam3, Real_t *hourgam4, Real_t *hourgam5, Real_t *hourgam6, Real_t *hourgam7, Real_t coefficient, Real_t *hgfx, Real_t *hgfy, Real_t *hgfz ); static inline void CalcElemFBHourglassForce(Real_t *xd, Real_t *yd, Real_t *zd, Real_t *hourgam0, Real_t *hourgam1, Real_t *hourgam2, Real_t *hourgam3, Real_t *hourgam4, Real_t *hourgam5, Real_t *hourgam6, Real_t *hourgam7, Real_t coefficient, Real_t *hgfx, Real_t *hgfy, Real_t *hgfz );
static inline
# 1047 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemFBHourglassForce_resumable(Real_t *xd, Real_t *yd, Real_t *zd, Real_t *hourgam0,
# 1048 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hourgam1, Real_t *hourgam2, Real_t *hourgam3,
# 1049 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hourgam4, Real_t *hourgam5, Real_t *hourgam6,
# 1050 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hourgam7, Real_t coefficient,
# 1051 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hgfx, Real_t *hgfy, Real_t *hgfz )
# 1052 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable18 = new_stack((void *)(&CalcElemFBHourglassForce), "CalcElemFBHourglassForce", &____must_manage_CalcElemFBHourglassForce, 15, 0, (size_t)(2224956529753678285UL), (size_t)(2224956529753678286UL), (size_t)(2224956529753678287UL), (size_t)(2224956529753678288UL), (size_t)(2224956529753678289UL), (size_t)(2224956529753678290UL), (size_t)(2224956529753678291UL), (size_t)(2224956529753678292UL), (size_t)(2224956529753678293UL), (size_t)(2224956529753678294UL), (size_t)(2224956529753678295UL), (size_t)(0UL), (size_t)(2224956529753678297UL), (size_t)(2224956529753678298UL), (size_t)(2224956529753678299UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1053 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t i00; i00 = (0) ;
# 1054 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t i01; i01 = (1) ;
# 1055 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t i02; i02 = (2) ;
# 1056 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t i03; i03 = (3) ;
# 1057 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1058 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t h00; h00 = (hourgam0[i00] * xd[0] + hourgam1[i00] * xd[1] +
# 1060 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i00] * xd[2] + hourgam3[i00] * xd[3] +
# 1061 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i00] * xd[4] + hourgam5[i00] * xd[5] +
# 1062 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i00] * xd[6] + hourgam7[i00] * xd[7]) ;
# 1063 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1064 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t h01; h01 = (hourgam0[i01] * xd[0] + hourgam1[i01] * xd[1] +
# 1066 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i01] * xd[2] + hourgam3[i01] * xd[3] +
# 1067 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i01] * xd[4] + hourgam5[i01] * xd[5] +
# 1068 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i01] * xd[6] + hourgam7[i01] * xd[7]) ;
# 1069 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1070 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t h02; h02 = (hourgam0[i02] * xd[0] + hourgam1[i02] * xd[1]+
# 1072 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i02] * xd[2] + hourgam3[i02] * xd[3]+
# 1073 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i02] * xd[4] + hourgam5[i02] * xd[5]+
# 1074 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i02] * xd[6] + hourgam7[i02] * xd[7]) ;
# 1075 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1076 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t h03; h03 = (hourgam0[i03] * xd[0] + hourgam1[i03] * xd[1] +
# 1078 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i03] * xd[2] + hourgam3[i03] * xd[3] +
# 1079 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i03] * xd[4] + hourgam5[i03] * xd[5] +
# 1080 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i03] * xd[6] + hourgam7[i03] * xd[7]) ;
# 1081 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1082 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[0] = coefficient *
# 1083 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam0[i00] * h00 + hourgam0[i01] * h01 +
# 1084 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam0[i02] * h02 + hourgam0[i03] * h03);
# 1085 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1086 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[1] = coefficient *
# 1087 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam1[i00] * h00 + hourgam1[i01] * h01 +
# 1088 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam1[i02] * h02 + hourgam1[i03] * h03);
# 1089 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1090 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[2] = coefficient *
# 1091 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam2[i00] * h00 + hourgam2[i01] * h01 +
# 1092 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam2[i02] * h02 + hourgam2[i03] * h03);
# 1093 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1094 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[3] = coefficient *
# 1095 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam3[i00] * h00 + hourgam3[i01] * h01 +
# 1096 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam3[i02] * h02 + hourgam3[i03] * h03);
# 1097 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1098 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[4] = coefficient *
# 1099 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam4[i00] * h00 + hourgam4[i01] * h01 +
# 1100 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam4[i02] * h02 + hourgam4[i03] * h03);
# 1101 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1102 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[5] = coefficient *
# 1103 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam5[i00] * h00 + hourgam5[i01] * h01 +
# 1104 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam5[i02] * h02 + hourgam5[i03] * h03);
# 1105 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1106 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[6] = coefficient *
# 1107 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam6[i00] * h00 + hourgam6[i01] * h01 +
# 1108 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam6[i02] * h02 + hourgam6[i03] * h03);
# 1109 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1110 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[7] = coefficient *
# 1111 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam7[i00] * h00 + hourgam7[i01] * h01 +
# 1112 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam7[i02] * h02 + hourgam7[i03] * h03);
# 1113 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1114 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h00 =
# 1115 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i00] * yd[0] + hourgam1[i00] * yd[1] +
# 1116 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i00] * yd[2] + hourgam3[i00] * yd[3] +
# 1117 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i00] * yd[4] + hourgam5[i00] * yd[5] +
# 1118 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i00] * yd[6] + hourgam7[i00] * yd[7];
# 1119 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1120 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h01 =
# 1121 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i01] * yd[0] + hourgam1[i01] * yd[1] +
# 1122 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i01] * yd[2] + hourgam3[i01] * yd[3] +
# 1123 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i01] * yd[4] + hourgam5[i01] * yd[5] +
# 1124 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i01] * yd[6] + hourgam7[i01] * yd[7];
# 1125 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1126 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h02 =
# 1127 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i02] * yd[0] + hourgam1[i02] * yd[1]+
# 1128 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i02] * yd[2] + hourgam3[i02] * yd[3]+
# 1129 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i02] * yd[4] + hourgam5[i02] * yd[5]+
# 1130 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i02] * yd[6] + hourgam7[i02] * yd[7];
# 1131 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1132 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h03 =
# 1133 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i03] * yd[0] + hourgam1[i03] * yd[1] +
# 1134 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i03] * yd[2] + hourgam3[i03] * yd[3] +
# 1135 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i03] * yd[4] + hourgam5[i03] * yd[5] +
# 1136 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i03] * yd[6] + hourgam7[i03] * yd[7];
# 1137 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1138 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1139 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[0] = coefficient *
# 1140 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam0[i00] * h00 + hourgam0[i01] * h01 +
# 1141 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam0[i02] * h02 + hourgam0[i03] * h03);
# 1142 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1143 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[1] = coefficient *
# 1144 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam1[i00] * h00 + hourgam1[i01] * h01 +
# 1145 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam1[i02] * h02 + hourgam1[i03] * h03);
# 1146 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1147 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[2] = coefficient *
# 1148 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam2[i00] * h00 + hourgam2[i01] * h01 +
# 1149 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam2[i02] * h02 + hourgam2[i03] * h03);
# 1150 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1151 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[3] = coefficient *
# 1152 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam3[i00] * h00 + hourgam3[i01] * h01 +
# 1153 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam3[i02] * h02 + hourgam3[i03] * h03);
# 1154 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1155 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[4] = coefficient *
# 1156 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam4[i00] * h00 + hourgam4[i01] * h01 +
# 1157 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam4[i02] * h02 + hourgam4[i03] * h03);
# 1158 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1159 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[5] = coefficient *
# 1160 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam5[i00] * h00 + hourgam5[i01] * h01 +
# 1161 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam5[i02] * h02 + hourgam5[i03] * h03);
# 1162 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1163 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[6] = coefficient *
# 1164 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam6[i00] * h00 + hourgam6[i01] * h01 +
# 1165 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam6[i02] * h02 + hourgam6[i03] * h03);
# 1166 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1167 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[7] = coefficient *
# 1168 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam7[i00] * h00 + hourgam7[i01] * h01 +
# 1169 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam7[i02] * h02 + hourgam7[i03] * h03);
# 1170 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1171 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h00 =
# 1172 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i00] * zd[0] + hourgam1[i00] * zd[1] +
# 1173 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i00] * zd[2] + hourgam3[i00] * zd[3] +
# 1174 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i00] * zd[4] + hourgam5[i00] * zd[5] +
# 1175 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i00] * zd[6] + hourgam7[i00] * zd[7];
# 1176 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1177 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h01 =
# 1178 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i01] * zd[0] + hourgam1[i01] * zd[1] +
# 1179 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i01] * zd[2] + hourgam3[i01] * zd[3] +
# 1180 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i01] * zd[4] + hourgam5[i01] * zd[5] +
# 1181 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i01] * zd[6] + hourgam7[i01] * zd[7];
# 1182 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1183 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h02 =
# 1184 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i02] * zd[0] + hourgam1[i02] * zd[1]+
# 1185 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i02] * zd[2] + hourgam3[i02] * zd[3]+
# 1186 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i02] * zd[4] + hourgam5[i02] * zd[5]+
# 1187 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i02] * zd[6] + hourgam7[i02] * zd[7];
# 1188 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1189 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h03 =
# 1190 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i03] * zd[0] + hourgam1[i03] * zd[1] +
# 1191 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i03] * zd[2] + hourgam3[i03] * zd[3] +
# 1192 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i03] * zd[4] + hourgam5[i03] * zd[5] +
# 1193 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i03] * zd[6] + hourgam7[i03] * zd[7];
# 1194 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1195 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[0] = coefficient *
# 1197 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam0[i00] * h00 + hourgam0[i01] * h01 +
# 1198 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam0[i02] * h02 + hourgam0[i03] * h03);
# 1199 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1200 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[1] = coefficient *
# 1201 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam1[i00] * h00 + hourgam1[i01] * h01 +
# 1202 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam1[i02] * h02 + hourgam1[i03] * h03);
# 1203 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1204 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[2] = coefficient *
# 1205 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam2[i00] * h00 + hourgam2[i01] * h01 +
# 1206 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam2[i02] * h02 + hourgam2[i03] * h03);
# 1207 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1208 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[3] = coefficient *
# 1209 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam3[i00] * h00 + hourgam3[i01] * h01 +
# 1210 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam3[i02] * h02 + hourgam3[i03] * h03);
# 1211 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1212 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[4] = coefficient *
# 1213 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam4[i00] * h00 + hourgam4[i01] * h01 +
# 1214 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam4[i02] * h02 + hourgam4[i03] * h03);
# 1215 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1216 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[5] = coefficient *
# 1217 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam5[i00] * h00 + hourgam5[i01] * h01 +
# 1218 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam5[i02] * h02 + hourgam5[i03] * h03);
# 1219 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1220 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[6] = coefficient *
# 1221 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam6[i00] * h00 + hourgam6[i01] * h01 +
# 1222 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam6[i02] * h02 + hourgam6[i03] * h03);
# 1223 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1224 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[7] = coefficient *
# 1225 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam7[i00] * h00 + hourgam7[i01] * h01 +
# 1226 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam7[i02] * h02 + hourgam7[i03] * h03);
# 1227 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemFBHourglassForce", &____must_manage_CalcElemFBHourglassForce, ____alias_loc_id_45, ____chimes_did_disable18, false); }
# 1228 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1229 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcFBHourglassForceForElems_npm(Real_t *determ, Real_t *x8n, Real_t *y8n, Real_t *z8n, Real_t *dvdx, Real_t *dvdy, Real_t *dvdz, Real_t hourg);
static inline void CalcFBHourglassForceForElems_quick(Real_t *determ, Real_t *x8n, Real_t *y8n, Real_t *z8n, Real_t *dvdx, Real_t *dvdy, Real_t *dvdz, Real_t hourg); static inline void CalcFBHourglassForceForElems(Real_t *determ, Real_t *x8n, Real_t *y8n, Real_t *z8n, Real_t *dvdx, Real_t *dvdy, Real_t *dvdz, Real_t hourg);
static inline
# 1230 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcFBHourglassForceForElems_resumable(Real_t *determ,
# 1231 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t *x8n, Real_t *y8n, Real_t *z8n,
# 1232 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t *dvdx, Real_t *dvdy, Real_t *dvdz,
# 1233 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t hourg)
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable19 = new_stack((void *)(&CalcFBHourglassForceForElems), "CalcFBHourglassForceForElems", &____must_manage_CalcFBHourglassForceForElems, 8, 0, (size_t)(2224956529753676376UL), (size_t)(2224956529753676377UL), (size_t)(2224956529753676378UL), (size_t)(2224956529753676379UL), (size_t)(2224956529753676380UL), (size_t)(2224956529753676381UL), (size_t)(2224956529753676382UL), (size_t)(0UL)) ; Real_t zd1[8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t yd1[8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t xd1[8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam7[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam6[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam5[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam4[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam3[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam2[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam1[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam0[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hgfz[8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hgfy[8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hgfx[8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t gamma[4][8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (____must_checkpoint_CalcFBHourglassForceForElems_hgfx_0) { register_stack_vars(1, "CalcFBHourglassForceForElems|hgfx|0", &____must_checkpoint_CalcFBHourglassForceForElems_hgfx_0, "[8 x double]", (void *)(hgfx), (size_t)64, 0, 0, 0); } if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1235 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1236 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1237 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1238 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1239 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1240 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1241 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1242 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 1243 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem8; numElem8 = (numElem * 8) ;
# 1244 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fx_elem; fx_elem = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753675063UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1245 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fy_elem; fy_elem = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753675087UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1246 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fz_elem; fz_elem = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753675094UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1247 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((fx_elem) ? static_cast<void> (0) : __assert_fail ("fx_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1247, __PRETTY_FUNCTION__)); ((fy_elem) ? static_cast<void> (0) : __assert_fail ("fy_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1247, __PRETTY_FUNCTION__)); ((fz_elem) ? static_cast<void> (0) : __assert_fail ("fz_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1247, __PRETTY_FUNCTION__));
# 1248 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1249 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ;
# 1250 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1251 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][0] = Real_t( 1.);
# 1252 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][1] = Real_t( 1.);
# 1253 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][2] = Real_t(-1.);
# 1254 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][3] = Real_t(-1.);
# 1255 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][4] = Real_t(-1.);
# 1256 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][5] = Real_t(-1.);
# 1257 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][6] = Real_t( 1.);
# 1258 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][7] = Real_t( 1.);
# 1259 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][0] = Real_t( 1.);
# 1260 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][1] = Real_t(-1.);
# 1261 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][2] = Real_t(-1.);
# 1262 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][3] = Real_t( 1.);
# 1263 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][4] = Real_t(-1.);
# 1264 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][5] = Real_t( 1.);
# 1265 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][6] = Real_t( 1.);
# 1266 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][7] = Real_t(-1.);
# 1267 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][0] = Real_t( 1.);
# 1268 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][1] = Real_t(-1.);
# 1269 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][2] = Real_t( 1.);
# 1270 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][3] = Real_t(-1.);
# 1271 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][4] = Real_t( 1.);
# 1272 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][5] = Real_t(-1.);
# 1273 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][6] = Real_t( 1.);
# 1274 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][7] = Real_t(-1.);
# 1275 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][0] = Real_t(-1.);
# 1276 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][1] = Real_t( 1.);
# 1277 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][2] = Real_t(-1.);
# 1278 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][3] = Real_t( 1.);
# 1279 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][4] = Real_t( 1.);
# 1280 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][5] = Real_t(-1.);
# 1281 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][6] = Real_t( 1.);
# 1282 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][7] = Real_t(-1.);
# 1283 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1284 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1285 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1286 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1287 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_2: bool ____chimes_disable3 = disable_current_thread(); void *____chimes_parent_ctx4 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth3 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth3 = get_thread_stack_depth(); size_t ____chimes_region_id3; unsigned ____chimes_parent_thread3 = entering_omp_parallel(2, &____chimes_region_id3, 16, &hgfx, &hgfy, &hgfz, &hourg, &hourgam0, &hourgam1, &hourgam2, &hourgam3, &hourgam4, &hourgam5, &hourgam6, &hourgam7, &numElem, &xd1, &yd1, &zd1); int ____chimes_first_iter3 = 1;
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem, hourg) firstprivate(____chimes_first_iter3) firstprivate(hgfx) firstprivate(hgfy) firstprivate(hgfz) firstprivate(hourgam0) firstprivate(hourgam1) firstprivate(hourgam2) firstprivate(hourgam3) firstprivate(hourgam4) firstprivate(hourgam5) firstprivate(hourgam6) firstprivate(hourgam7) firstprivate(xd1) firstprivate(yd1) firstprivate(zd1)
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1289 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for(Index_t i2=0; i2<numElem; ++i2){ { if (____chimes_first_iter3) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread3, ____chimes_parent_ctx4, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth3, ____chimes_region_id3, 16, &hgfx, &hgfy, &hgfz, &hourg, &hourgam0, &hourgam1, &hourgam2, &hourgam3, &hourgam4, &hourgam5, &hourgam6, &hourgam7, &numElem, &xd1, &yd1, &zd1); ____chimes_first_iter3 = 0; } {
# 1290 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fx_local; Real_t *fy_local; Real_t *fz_local; ;
# 1291 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     ;
# 1292 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1293 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t coefficient; ;
# 1294 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1295 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
      ;
# 1296 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
      ;
# 1297 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     ;
# 1298 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1299 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   const Index_t *elemToNode; elemToNode = (domain.nodelist + (8 * i2)) ;
# 1300 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t i3; i3 = (8*i2) ;
# 1301 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t volinv; volinv = (Real_t(1.0)/determ[i2]) ;
# 1302 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ss1; Real_t mass1; Real_t volume13; ;
# 1303 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t i1; for( i1 = (0) ;i1<4;++i1){
# 1304 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1305 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t hourmodx; hourmodx = (x8n[i3] * gamma[i1][0] + x8n[i3+1] * gamma[i1][1] +
# 1307 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            x8n[i3+2] * gamma[i1][2] + x8n[i3+3] * gamma[i1][3] +
# 1308 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            x8n[i3+4] * gamma[i1][4] + x8n[i3+5] * gamma[i1][5] +
# 1309 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            x8n[i3+6] * gamma[i1][6] + x8n[i3+7] * gamma[i1][7]) ;
# 1310 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1311 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t hourmody; hourmody = (y8n[i3] * gamma[i1][0] + y8n[i3+1] * gamma[i1][1] +
# 1313 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            y8n[i3+2] * gamma[i1][2] + y8n[i3+3] * gamma[i1][3] +
# 1314 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            y8n[i3+4] * gamma[i1][4] + y8n[i3+5] * gamma[i1][5] +
# 1315 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            y8n[i3+6] * gamma[i1][6] + y8n[i3+7] * gamma[i1][7]) ;
# 1316 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1317 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t hourmodz; hourmodz = (z8n[i3] * gamma[i1][0] + z8n[i3+1] * gamma[i1][1] +
# 1319 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            z8n[i3+2] * gamma[i1][2] + z8n[i3+3] * gamma[i1][3] +
# 1320 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            z8n[i3+4] * gamma[i1][4] + z8n[i3+5] * gamma[i1][5] +
# 1321 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            z8n[i3+6] * gamma[i1][6] + z8n[i3+7] * gamma[i1][7]) ;
# 1322 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1323 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam0[i1] = gamma[i1][0] - volinv*(dvdx[i3 ] * hourmodx +
# 1324 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3 ] * hourmody +
# 1325 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3 ] * hourmodz );
# 1326 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1327 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam1[i1] = gamma[i1][1] - volinv*(dvdx[i3+1] * hourmodx +
# 1328 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+1] * hourmody +
# 1329 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+1] * hourmodz );
# 1330 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1331 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam2[i1] = gamma[i1][2] - volinv*(dvdx[i3+2] * hourmodx +
# 1332 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+2] * hourmody +
# 1333 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+2] * hourmodz );
# 1334 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1335 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam3[i1] = gamma[i1][3] - volinv*(dvdx[i3+3] * hourmodx +
# 1336 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+3] * hourmody +
# 1337 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+3] * hourmodz );
# 1338 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1339 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam4[i1] = gamma[i1][4] - volinv*(dvdx[i3+4] * hourmodx +
# 1340 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+4] * hourmody +
# 1341 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+4] * hourmodz );
# 1342 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1343 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam5[i1] = gamma[i1][5] - volinv*(dvdx[i3+5] * hourmodx +
# 1344 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+5] * hourmody +
# 1345 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+5] * hourmodz );
# 1346 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1347 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam6[i1] = gamma[i1][6] - volinv*(dvdx[i3+6] * hourmodx +
# 1348 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+6] * hourmody +
# 1349 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+6] * hourmodz );
# 1350 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1351 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam7[i1] = gamma[i1][7] - volinv*(dvdx[i3+7] * hourmodx +
# 1352 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+7] * hourmody +
# 1353 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+7] * hourmodz );
# 1354 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1355 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 1356 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1357 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1358 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1359 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1360 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ss1=domain.ss[i2];
# 1361 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  mass1=domain.elemMass[i2];
# 1362 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: volume13=({ calling_npm("CBRT", 0); CBRT_npm(determ[i2]); });
# 1363 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1364 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n0si2; n0si2 = (elemToNode[0]) ;
# 1365 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n1si2; n1si2 = (elemToNode[1]) ;
# 1366 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n2si2; n2si2 = (elemToNode[2]) ;
# 1367 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n3si2; n3si2 = (elemToNode[3]) ;
# 1368 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n4si2; n4si2 = (elemToNode[4]) ;
# 1369 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n5si2; n5si2 = (elemToNode[5]) ;
# 1370 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n6si2; n6si2 = (elemToNode[6]) ;
# 1371 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n7si2; n7si2 = (elemToNode[7]) ;
# 1372 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1373 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[0] = domain.xd[n0si2];
# 1374 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[1] = domain.xd[n1si2];
# 1375 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[2] = domain.xd[n2si2];
# 1376 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[3] = domain.xd[n3si2];
# 1377 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[4] = domain.xd[n4si2];
# 1378 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[5] = domain.xd[n5si2];
# 1379 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[6] = domain.xd[n6si2];
# 1380 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[7] = domain.xd[n7si2];
# 1381 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1382 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[0] = domain.yd[n0si2];
# 1383 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[1] = domain.yd[n1si2];
# 1384 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[2] = domain.yd[n2si2];
# 1385 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[3] = domain.yd[n3si2];
# 1386 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[4] = domain.yd[n4si2];
# 1387 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[5] = domain.yd[n5si2];
# 1388 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[6] = domain.yd[n6si2];
# 1389 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[7] = domain.yd[n7si2];
# 1390 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1391 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[0] = domain.zd[n0si2];
# 1392 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[1] = domain.zd[n1si2];
# 1393 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[2] = domain.zd[n2si2];
# 1394 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[3] = domain.zd[n3si2];
# 1395 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[4] = domain.zd[n4si2];
# 1396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[5] = domain.zd[n5si2];
# 1397 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[6] = domain.zd[n6si2];
# 1398 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[7] = domain.zd[n7si2];
# 1399 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1400 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  coefficient = - hourg * Real_t(0.01) * ss1 * mass1 / volume13;
# 1401 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1402 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: ({ calling_npm("CalcElemFBHourglassForce", 0); CalcElemFBHourglassForce_npm(xd1, yd1, zd1, hourgam0, hourgam1, hourgam2, hourgam3, hourgam4, hourgam5, hourgam6, hourgam7, coefficient, hgfx, hgfy, hgfz); });
# 1406 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1407 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local = &fx_elem[i3] ;
# 1408 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[0] = hgfx[0];
# 1409 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[1] = hgfx[1];
# 1410 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[2] = hgfx[2];
# 1411 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[3] = hgfx[3];
# 1412 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[4] = hgfx[4];
# 1413 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[5] = hgfx[5];
# 1414 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[6] = hgfx[6];
# 1415 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[7] = hgfx[7];
# 1416 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1417 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local = &fy_elem[i3] ;
# 1418 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[0] = hgfy[0];
# 1419 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[1] = hgfy[1];
# 1420 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[2] = hgfy[2];
# 1421 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[3] = hgfy[3];
# 1422 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[4] = hgfy[4];
# 1423 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[5] = hgfy[5];
# 1424 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[6] = hgfy[6];
# 1425 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[7] = hgfy[7];
# 1426 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1427 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local = &fz_elem[i3] ;
# 1428 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[0] = hgfz[0];
# 1429 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[1] = hgfz[1];
# 1430 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[2] = hgfz[2];
# 1431 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[3] = hgfz[3];
# 1432 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[4] = hgfz[4];
# 1433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[5] = hgfz[5];
# 1434 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[6] = hgfz[6];
# 1435 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[7] = hgfz[7];
# 1470 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1470 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth3, ____chimes_region_id3, 1); reenable_current_thread(____chimes_disable3); }
# 1471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1472 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 {
# 1473 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t numNode; numNode = (domain.numNode) ;
# 1474 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_3: bool ____chimes_disable4 = disable_current_thread(); void *____chimes_parent_ctx5 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth4 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth4 = get_thread_stack_depth(); size_t ____chimes_region_id4; unsigned ____chimes_parent_thread4 = entering_omp_parallel(3, &____chimes_region_id4, 15, &hgfx, &hgfy, &hgfz, &hourgam0, &hourgam1, &hourgam2, &hourgam3, &hourgam4, &hourgam5, &hourgam6, &hourgam7, &numNode, &xd1, &yd1, &zd1); int ____chimes_first_iter4 = 1;
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode) firstprivate(____chimes_first_iter4)
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1476 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for( Index_t gnode=0 ; gnode<numNode ; ++gnode )
# 1477 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { { if (____chimes_first_iter4) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread4, ____chimes_parent_ctx5, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth4, ____chimes_region_id4, 15, &hgfx, &hgfy, &hgfz, &hourgam0, &hourgam1, &hourgam2, &hourgam3, &hourgam4, &hourgam5, &hourgam6, &hourgam7, &numNode, &xd1, &yd1, &zd1); ____chimes_first_iter4 = 0; } {
# 1478 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t count; count = (domain.nodeElemCount[gnode]) ;
# 1479 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t start; start = (domain.nodeElemStart[gnode]) ;
# 1480 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t fx; fx = (Real_t(0.0)) ;
# 1481 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t fy; fy = (Real_t(0.0)) ;
# 1482 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t fz; fz = (Real_t(0.0)) ;
# 1483 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   { Index_t i; for ( i = (0) ; i < count ; ++i) {
# 1484 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t elem; elem = (domain.nodeElemCornerList[start+i]) ;
# 1485 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fx += fx_elem[elem] ;
# 1486 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fy += fy_elem[elem] ;
# 1487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fz += fz_elem[elem] ;
# 1488 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } }
# 1489 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fx[gnode] += fx ;
# 1490 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fy[gnode] += fy ;
# 1491 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fz[gnode] += fz ;
# 1492 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } } leaving_omp_parallel(____chimes_call_stack_depth4, ____chimes_region_id4, 1); reenable_current_thread(____chimes_disable4); }
# 1493 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1494 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1495 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fz_elem) - sizeof(void *)), 2224956529753675094UL);free((((unsigned char *)fz_elem) - sizeof(void *))); }) ;
# 1496 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fy_elem) - sizeof(void *)), 2224956529753675087UL);free((((unsigned char *)fy_elem) - sizeof(void *))); }) ;
# 1497 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fx_elem) - sizeof(void *)), 2224956529753675063UL);free((((unsigned char *)fx_elem) - sizeof(void *))); }) ;
# 1498 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcFBHourglassForceForElems", &____must_manage_CalcFBHourglassForceForElems, ____alias_loc_id_43, ____chimes_did_disable19, false); }
# 1499 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1500 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcHourglassControlForElems_npm(Real_t determ[], Real_t hgcoef);
static inline void CalcHourglassControlForElems_quick(Real_t determ[], Real_t hgcoef); static inline void CalcHourglassControlForElems(Real_t determ[], Real_t hgcoef);
static inline
# 1501 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcHourglassControlForElems_resumable(Real_t determ[], Real_t hgcoef)
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable20 = new_stack((void *)(&CalcHourglassControlForElems), "CalcHourglassControlForElems", &____must_manage_CalcHourglassControlForElems, 2, 0, (size_t)(2224956529753674204UL), (size_t)(0UL)) ; Real_t pfz[8];
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t pfy[8];
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t pfx[8];
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t z1[8];
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t y1[8];
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t x1[8];
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (____must_checkpoint_CalcHourglassControlForElems_x1_0) { register_stack_vars(1, "CalcHourglassControlForElems|x1|0", &____must_checkpoint_CalcHourglassControlForElems_x1_0, "[8 x double]", (void *)(x1), (size_t)64, 0, 0, 0); } if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1503 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 1504 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem8; numElem8 = (numElem * 8) ;
# 1505 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *dvdx; dvdx = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753673959UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1506 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *dvdy; dvdy = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674004UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1507 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *dvdz; dvdz = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674011UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1508 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *x8n; x8n = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674018UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1509 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *y8n; y8n = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674025UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1510 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *z8n; z8n = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674032UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1511 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((dvdx) ? static_cast<void> (0) : __assert_fail ("dvdx", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1511, __PRETTY_FUNCTION__)); ((dvdy) ? static_cast<void> (0) : __assert_fail ("dvdy", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1511, __PRETTY_FUNCTION__)); ((dvdz) ? static_cast<void> (0) : __assert_fail ("dvdz", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1511, __PRETTY_FUNCTION__));
# 1512 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((x8n) ? static_cast<void> (0) : __assert_fail ("x8n", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1512, __PRETTY_FUNCTION__)); ((y8n) ? static_cast<void> (0) : __assert_fail ("y8n", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1512, __PRETTY_FUNCTION__)); ((z8n) ? static_cast<void> (0) : __assert_fail ("z8n", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1512, __PRETTY_FUNCTION__));
# 1513 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1514 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_3: bool ____chimes_disable5 = disable_current_thread(); void *____chimes_parent_ctx6 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth5 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth5 = get_thread_stack_depth(); size_t ____chimes_region_id5; unsigned ____chimes_parent_thread5 = entering_omp_parallel(3, &____chimes_region_id5, 7, &numElem, &pfx, &pfy, &pfz, &x1, &y1, &z1); int ____chimes_first_iter5 = 1;
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem) firstprivate(____chimes_first_iter5) firstprivate(x1) firstprivate(y1) firstprivate(z1) firstprivate(pfx) firstprivate(pfy) firstprivate(pfz)
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1516 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i=0 ; i<numElem ; ++i){ { if (____chimes_first_iter5) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread5, ____chimes_parent_ctx6, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth5, ____chimes_region_id5, 7, &numElem, &pfx, &pfy, &pfz, &x1, &y1, &z1); ____chimes_first_iter5 = 0; } {
# 1517 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     ;
# 1518 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     ;
# 1519 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1520 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t *elemToNode; elemToNode = (domain.nodelist + (8 * i)) ;
# 1521 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: ({ calling_npm("CollectDomainNodesToElemNodes", 0); CollectDomainNodesToElemNodes_npm(elemToNode, x1, y1, z1); });
# 1522 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: ({ calling_npm("CalcElemVolumeDerivative", 0); CalcElemVolumeDerivative_npm(pfx, pfy, pfz, x1, y1, z1); });
# 1524 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1525 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1526 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t ii; for( ii = (0) ;ii<8;++ii){
# 1527 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t jj; jj = (8*i+ii) ;
# 1528 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1529 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   dvdx[jj] = pfx[ii];
# 1530 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   dvdy[jj] = pfy[ii];
# 1531 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   dvdz[jj] = pfz[ii];
# 1532 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x8n[jj] = x1[ii];
# 1533 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y8n[jj] = y1[ii];
# 1534 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z8n[jj] = z1[ii];
# 1535 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 1536 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1537 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  determ[i] = domain.volo[i] * domain.v[i];
# 1538 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1539 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1540 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( domain.v[i] <= Real_t(0.0) ) {
# 1541 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   exit(VolumeError) ;
# 1542 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 1543 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth5, ____chimes_region_id5, 1); reenable_current_thread(____chimes_disable5); }
# 1544 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1545 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if ( hgcoef > Real_t(0.) ) {
# 1546 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: ({ calling_npm("CalcFBHourglassForceForElems", 0); CalcFBHourglassForceForElems_npm(determ, x8n, y8n, z8n, dvdx, dvdy, dvdz, hgcoef); }) ;
# 1547 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1548 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1549 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)z8n) - sizeof(void *)), 2224956529753674032UL);free((((unsigned char *)z8n) - sizeof(void *))); }) ;
# 1550 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)y8n) - sizeof(void *)), 2224956529753674025UL);free((((unsigned char *)y8n) - sizeof(void *))); }) ;
# 1551 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)x8n) - sizeof(void *)), 2224956529753674018UL);free((((unsigned char *)x8n) - sizeof(void *))); }) ;
# 1552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)dvdz) - sizeof(void *)), 2224956529753674011UL);free((((unsigned char *)dvdz) - sizeof(void *))); }) ;
# 1553 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)dvdy) - sizeof(void *)), 2224956529753674004UL);free((((unsigned char *)dvdy) - sizeof(void *))); }) ;
# 1554 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)dvdx) - sizeof(void *)), 2224956529753673959UL);free((((unsigned char *)dvdx) - sizeof(void *))); }) ;
# 1555 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1556 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 rm_stack(false, 0UL, "CalcHourglassControlForElems", &____must_manage_CalcHourglassControlForElems, ____alias_loc_id_40, ____chimes_did_disable20, false); return ;
# 1557 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1558 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1559 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcVolumeForceForElems_npm();
static inline void CalcVolumeForceForElems_quick(); static inline void CalcVolumeForceForElems();
static inline
# 1560 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcVolumeForceForElems_resumable()
# 1561 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable21 = new_stack((void *)(&CalcVolumeForceForElems), "CalcVolumeForceForElems", &____must_manage_CalcVolumeForceForElems, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1562 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 1563 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (numElem != 0) {
# 1564 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t hgcoef; hgcoef = (domain.hgcoef) ;
# 1565 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t *sigxx; sigxx = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem, 2224956529753673505UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1566 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t *sigyy; sigyy = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem, 2224956529753673483UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1567 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t *sigzz; sigzz = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem, 2224956529753673490UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1568 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t *determ; determ = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem, 2224956529753673497UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1569 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        ((sigxx) ? static_cast<void> (0) : __assert_fail ("sigxx", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1569, __PRETTY_FUNCTION__)); ((sigyy) ? static_cast<void> (0) : __assert_fail ("sigyy", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1569, __PRETTY_FUNCTION__)); ((sigzz) ? static_cast<void> (0) : __assert_fail ("sigzz", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1569, __PRETTY_FUNCTION__)); ((determ) ? static_cast<void> (0) : __assert_fail ("determ", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1569, __PRETTY_FUNCTION__));
# 1570 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1571 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1572 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: ({ calling_npm("InitStressTermsForElems", 0); InitStressTermsForElems_npm(numElem, sigxx, sigyy, sigzz); });
# 1573 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1574 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1575 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1576 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: ({ calling_npm("IntegrateStressForElems", 0); IntegrateStressForElems_npm(numElem, sigxx, sigyy, sigzz, determ); }) ;
# 1577 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1578 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_3: bool ____chimes_disable6 = disable_current_thread(); void *____chimes_parent_ctx7 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth6 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth6 = get_thread_stack_depth(); size_t ____chimes_region_id6; unsigned ____chimes_parent_thread6 = entering_omp_parallel(3, &____chimes_region_id6, 1, &numElem); int ____chimes_first_iter6 = 1;
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem) firstprivate(____chimes_first_iter6)
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1580 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for ( Index_t k=0 ; k<numElem ; ++k ) { { if (____chimes_first_iter6) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread6, ____chimes_parent_ctx7, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth6, ____chimes_region_id6, 1, &numElem); ____chimes_first_iter6 = 0; } {
# 1581 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (determ[k] <= Real_t(0.0)) {
# 1582 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    exit(VolumeError) ;
# 1583 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 1584 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } } leaving_omp_parallel(____chimes_call_stack_depth6, ____chimes_region_id6, 1); reenable_current_thread(____chimes_disable6); }
# 1585 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1586 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: ({ calling_npm("CalcHourglassControlForElems", 0); CalcHourglassControlForElems_npm(determ, hgcoef); }) ;
# 1587 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1588 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)determ) - sizeof(void *)), 2224956529753673497UL);free((((unsigned char *)determ) - sizeof(void *))); }) ;
# 1589 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)sigzz) - sizeof(void *)), 2224956529753673490UL);free((((unsigned char *)sigzz) - sizeof(void *))); }) ;
# 1590 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)sigyy) - sizeof(void *)), 2224956529753673483UL);free((((unsigned char *)sigyy) - sizeof(void *))); }) ;
# 1591 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)sigxx) - sizeof(void *)), 2224956529753673505UL);free((((unsigned char *)sigxx) - sizeof(void *))); }) ;
# 1592 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1593 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcVolumeForceForElems", &____must_manage_CalcVolumeForceForElems, ____alias_loc_id_37, ____chimes_did_disable21, false); }
# 1594 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1595 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcForceForNodes_npm();
static inline void CalcForceForNodes_quick(); static inline void CalcForceForNodes();
static inline void CalcForceForNodes_resumable()
# 1596 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable22 = new_stack((void *)(&CalcForceForNodes), "CalcForceForNodes", &____must_manage_CalcForceForNodes, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1597 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numNode; numNode = (domain.numNode) ;
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_1: bool ____chimes_disable7 = disable_current_thread(); void *____chimes_parent_ctx8 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth7 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth7 = get_thread_stack_depth(); size_t ____chimes_region_id7; unsigned ____chimes_parent_thread7 = entering_omp_parallel(1, &____chimes_region_id7, 1, &numNode); int ____chimes_first_iter7 = 1;
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode) firstprivate(____chimes_first_iter7)
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1599 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i=0; i<numNode; ++i) { { if (____chimes_first_iter7) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread7, ____chimes_parent_ctx8, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth7, ____chimes_region_id7, 1, &numNode); ____chimes_first_iter7 = 0; } {
# 1600 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.fx[i] = Real_t(0.0) ;
# 1601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.fy[i] = Real_t(0.0) ;
# 1602 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.fz[i] = Real_t(0.0) ;
# 1603 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth7, ____chimes_region_id7, 1); reenable_current_thread(____chimes_disable7); }
# 1604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1605 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1606 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcVolumeForceForElems", 0); CalcVolumeForceForElems_npm(); }) ;
# 1607 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1609 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1610 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcForceForNodes", &____must_manage_CalcForceForNodes, ____alias_loc_id_32, ____chimes_did_disable22, false); }
# 1612 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1613 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcAccelerationForNodes_npm();
static inline void CalcAccelerationForNodes_quick(); static inline void CalcAccelerationForNodes();
static inline
# 1614 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcAccelerationForNodes_resumable()
# 1615 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable23 = new_stack((void *)(&CalcAccelerationForNodes), "CalcAccelerationForNodes", &____must_manage_CalcAccelerationForNodes, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1616 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numNode; numNode = (domain.numNode) ;
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_0: bool ____chimes_disable8 = disable_current_thread(); void *____chimes_parent_ctx9 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth8 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth8 = get_thread_stack_depth(); size_t ____chimes_region_id8; unsigned ____chimes_parent_thread8 = entering_omp_parallel(0, &____chimes_region_id8, 1, &numNode); int ____chimes_first_iter8 = 1;
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode) firstprivate(____chimes_first_iter8)
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0; i < numNode; ++i) { { if (____chimes_first_iter8) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread8, ____chimes_parent_ctx9, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth8, ____chimes_region_id8, 1, &numNode); ____chimes_first_iter8 = 0; } {
# 1619 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.xdd[i] = domain.fx[i] / domain.nodalMass[i];
# 1620 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.ydd[i] = domain.fy[i] / domain.nodalMass[i];
# 1621 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.zdd[i] = domain.fz[i] / domain.nodalMass[i];
# 1622 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth8, ____chimes_region_id8, 1); reenable_current_thread(____chimes_disable8); }
# 1623 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcAccelerationForNodes", &____must_manage_CalcAccelerationForNodes, ____alias_loc_id_33, ____chimes_did_disable23, false); }
# 1624 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1626 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void ApplyAccelerationBoundaryConditionsForNodes_npm();
static inline void ApplyAccelerationBoundaryConditionsForNodes_quick(); static inline void ApplyAccelerationBoundaryConditionsForNodes();
static inline
# 1627 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void ApplyAccelerationBoundaryConditionsForNodes_resumable()
# 1628 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable24 = new_stack((void *)(&ApplyAccelerationBoundaryConditionsForNodes), "ApplyAccelerationBoundaryConditionsForNodes", &____must_manage_ApplyAccelerationBoundaryConditionsForNodes, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { case(0): { goto call_lbl_0; } default: { chimes_error(); } } } ; ;
# 1629 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numNodeBC; numNodeBC = ((domain.sizeX+1)*(domain.sizeX+1)) ;
# 1630 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_0: void *____chimes_parent_ctx10 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth9 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth9 = get_thread_stack_depth(); size_t ____chimes_region_id9; unsigned ____chimes_parent_thread9 = entering_omp_parallel(0, &____chimes_region_id9, 0);
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread9, ____chimes_parent_ctx10, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth9, ____chimes_region_id9, 0); if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } {
# 1633 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t i; ;
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable10; ____chimes_disable10 = disable_current_thread();
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(numNodeBC)
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1635 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (i=0; i<numNodeBC; ++i) { { domain.xdd[domain.symmX[i]] = Real_t(0.0); } } reenable_current_thread(____chimes_disable10); ;
# 1637 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1638 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t j; ;
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable11; ____chimes_disable11 = disable_current_thread();
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(numNodeBC)
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1640 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (j=0; j<numNodeBC; ++j) { { domain.ydd[domain.symmY[j]] = Real_t(0.0); } } reenable_current_thread(____chimes_disable11); ;
# 1642 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t k; ;
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable12; ____chimes_disable12 = disable_current_thread();
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(numNodeBC)
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1645 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (k=0; k<numNodeBC; ++k) { { domain.zdd[domain.symmZ[k]] = Real_t(0.0); } } reenable_current_thread(____chimes_disable12); ;
# 1647 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     } thread_leaving(); } } leaving_omp_parallel(____chimes_call_stack_depth9, ____chimes_region_id9, 0); }
# 1648 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "ApplyAccelerationBoundaryConditionsForNodes", &____must_manage_ApplyAccelerationBoundaryConditionsForNodes, ____alias_loc_id_34, ____chimes_did_disable24, false); }
# 1649 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1650 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcVelocityForNodes_npm(const Real_t dt, const Real_t u_cut);
static inline void CalcVelocityForNodes_quick(const Real_t dt, const Real_t u_cut); static inline void CalcVelocityForNodes(const Real_t dt, const Real_t u_cut);
static inline
# 1651 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcVelocityForNodes_resumable(const Real_t dt, const Real_t u_cut)
# 1652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable25 = new_stack((void *)(&CalcVelocityForNodes), "CalcVelocityForNodes", &____must_manage_CalcVelocityForNodes, 2, 0, (size_t)(0UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1653 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numNode; numNode = (domain.numNode) ;
# 1654 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_3: bool ____chimes_disable13 = disable_current_thread(); void *____chimes_parent_ctx11 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth10 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth10 = get_thread_stack_depth(); size_t ____chimes_region_id10; unsigned ____chimes_parent_thread10 = entering_omp_parallel(3, &____chimes_region_id10, 1, &numNode); int ____chimes_first_iter10 = 1;
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode) firstprivate(____chimes_first_iter10)
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1656 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for ( Index_t i = 0 ; i < numNode ; ++i )
# 1657 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { { if (____chimes_first_iter10) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread10, ____chimes_parent_ctx11, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth10, ____chimes_region_id10, 1, &numNode); ____chimes_first_iter10 = 0; } {
# 1658 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t xdtmp; Real_t ydtmp; Real_t zdtmp; ;
# 1659 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1660 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xdtmp = domain.xd[i] + domain.xdd[i] * dt ;
# 1661 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: if (({ calling_npm("FABS", 0); FABS_npm(xdtmp); }) < u_cut) {xdtmp = Real_t(0.0); };
# 1662 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.xd[i] = xdtmp ;
# 1663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1664 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ydtmp = domain.yd[i] + domain.ydd[i] * dt ;
# 1665 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: if (({ calling_npm("FABS", 0); FABS_npm(ydtmp); }) < u_cut) {ydtmp = Real_t(0.0); };
# 1666 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.yd[i] = ydtmp ;
# 1667 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1668 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zdtmp = domain.zd[i] + domain.zdd[i] * dt ;
# 1669 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: if (({ calling_npm("FABS", 0); FABS_npm(zdtmp); }) < u_cut) {zdtmp = Real_t(0.0); };
# 1670 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.zd[i] = zdtmp ;
# 1671 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth10, ____chimes_region_id10, 1); reenable_current_thread(____chimes_disable13); }
# 1672 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcVelocityForNodes", &____must_manage_CalcVelocityForNodes, ____alias_loc_id_35, ____chimes_did_disable25, false); }
# 1673 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1674 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcPositionForNodes_npm(const Real_t dt);
static inline void CalcPositionForNodes_quick(const Real_t dt); static inline void CalcPositionForNodes(const Real_t dt);
static inline
# 1675 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcPositionForNodes_resumable(const Real_t dt)
# 1676 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable26 = new_stack((void *)(&CalcPositionForNodes), "CalcPositionForNodes", &____must_manage_CalcPositionForNodes, 1, 0, (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1677 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numNode; numNode = (domain.numNode) ;
# 1678 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_0: bool ____chimes_disable14 = disable_current_thread(); void *____chimes_parent_ctx12 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth11 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth11 = get_thread_stack_depth(); size_t ____chimes_region_id11; unsigned ____chimes_parent_thread11 = entering_omp_parallel(0, &____chimes_region_id11, 1, &numNode); int ____chimes_first_iter11 = 1;
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode) firstprivate(____chimes_first_iter11)
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1680 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for ( Index_t i = 0 ; i < numNode ; ++i )
# 1681 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { { if (____chimes_first_iter11) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread11, ____chimes_parent_ctx12, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth11, ____chimes_region_id11, 1, &numNode); ____chimes_first_iter11 = 0; } {
# 1682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.x[i] += domain.xd[i] * dt ;
# 1683 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.y[i] += domain.yd[i] * dt ;
# 1684 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.z[i] += domain.zd[i] * dt ;
# 1685 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth11, ____chimes_region_id11, 1); reenable_current_thread(____chimes_disable14); }
# 1686 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcPositionForNodes", &____must_manage_CalcPositionForNodes, ____alias_loc_id_36, ____chimes_did_disable26, false); }
# 1687 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1688 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void LagrangeNodal_npm();
static inline void LagrangeNodal_quick(); static inline void LagrangeNodal();
static inline
# 1689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void LagrangeNodal_resumable()
# 1690 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable27 = new_stack((void *)(&LagrangeNodal), "LagrangeNodal", &____must_manage_LagrangeNodal, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1691 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t delt; delt = (domain.deltatime) ;
# 1692 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t u_cut; u_cut = (domain.u_cut) ;
# 1693 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1694 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1695 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcForceForNodes", 0); CalcForceForNodes_npm(); });
# 1697 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1698 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("CalcAccelerationForNodes", 0); CalcAccelerationForNodes_npm(); });
# 1699 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1700 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: ({ calling_npm("ApplyAccelerationBoundaryConditionsForNodes", 0); ApplyAccelerationBoundaryConditionsForNodes_npm(); });
# 1701 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1702 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: ({ calling_npm("CalcVelocityForNodes", 0); CalcVelocityForNodes_npm(delt, u_cut); }) ;
# 1703 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1704 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_4: ({ calling_npm("CalcPositionForNodes", 0); CalcPositionForNodes_npm(delt); });
# 1705 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1706 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 rm_stack(false, 0UL, "LagrangeNodal", &____must_manage_LagrangeNodal, ____alias_loc_id_10, ____chimes_did_disable27, false); return;
# 1707 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1708 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1709 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline Real_t CalcElemVolumeScalar_npm( const Real_t x0, const Real_t x1, const Real_t x2, const Real_t x3, const Real_t x4, const Real_t x5, const Real_t x6, const Real_t x7, const Real_t y0, const Real_t y1, const Real_t y2, const Real_t y3, const Real_t y4, const Real_t y5, const Real_t y6, const Real_t y7, const Real_t z0, const Real_t z1, const Real_t z2, const Real_t z3, const Real_t z4, const Real_t z5, const Real_t z6, const Real_t z7 );
static inline Real_t CalcElemVolumeScalar_quick( const Real_t x0, const Real_t x1, const Real_t x2, const Real_t x3, const Real_t x4, const Real_t x5, const Real_t x6, const Real_t x7, const Real_t y0, const Real_t y1, const Real_t y2, const Real_t y3, const Real_t y4, const Real_t y5, const Real_t y6, const Real_t y7, const Real_t z0, const Real_t z1, const Real_t z2, const Real_t z3, const Real_t z4, const Real_t z5, const Real_t z6, const Real_t z7 ); static inline Real_t CalcElemVolumeScalar( const Real_t x0, const Real_t x1, const Real_t x2, const Real_t x3, const Real_t x4, const Real_t x5, const Real_t x6, const Real_t x7, const Real_t y0, const Real_t y1, const Real_t y2, const Real_t y3, const Real_t y4, const Real_t y5, const Real_t y6, const Real_t y7, const Real_t z0, const Real_t z1, const Real_t z2, const Real_t z3, const Real_t z4, const Real_t z5, const Real_t z6, const Real_t z7 );
static inline
# 1710 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t CalcElemVolumeScalar_resumable( const Real_t x0, const Real_t x1,
# 1711 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t x2, const Real_t x3,
# 1712 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t x4, const Real_t x5,
# 1713 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t x6, const Real_t x7,
# 1714 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y0, const Real_t y1,
# 1715 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y2, const Real_t y3,
# 1716 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y4, const Real_t y5,
# 1717 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y6, const Real_t y7,
# 1718 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z0, const Real_t z1,
# 1719 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z2, const Real_t z3,
# 1720 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z4, const Real_t z5,
# 1721 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z6, const Real_t z7 )
# 1722 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable28 = new_stack((void *)(&CalcElemVolumeScalar), "CalcElemVolumeScalar", &____must_manage_CalcElemVolumeScalar, 24, 0, (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1723 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t twelveth; twelveth = (Real_t(1.0)/Real_t(12.0)) ;
# 1724 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1725 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx61; dx61 = (x6 - x1) ;
# 1726 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy61; dy61 = (y6 - y1) ;
# 1727 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz61; dz61 = (z6 - z1) ;
# 1728 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1729 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx70; dx70 = (x7 - x0) ;
# 1730 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy70; dy70 = (y7 - y0) ;
# 1731 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz70; dz70 = (z7 - z0) ;
# 1732 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1733 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx63; dx63 = (x6 - x3) ;
# 1734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy63; dy63 = (y6 - y3) ;
# 1735 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz63; dz63 = (z6 - z3) ;
# 1736 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx20; dx20 = (x2 - x0) ;
# 1738 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy20; dy20 = (y2 - y0) ;
# 1739 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz20; dz20 = (z2 - z0) ;
# 1740 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1741 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx50; dx50 = (x5 - x0) ;
# 1742 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy50; dy50 = (y5 - y0) ;
# 1743 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz50; dz50 = (z5 - z0) ;
# 1744 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx64; dx64 = (x6 - x4) ;
# 1746 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy64; dy64 = (y6 - y4) ;
# 1747 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz64; dz64 = (z6 - z4) ;
# 1748 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1749 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx31; dx31 = (x3 - x1) ;
# 1750 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy31; dy31 = (y3 - y1) ;
# 1751 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz31; dz31 = (z3 - z1) ;
# 1752 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1753 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx72; dx72 = (x7 - x2) ;
# 1754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy72; dy72 = (y7 - y2) ;
# 1755 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz72; dz72 = (z7 - z2) ;
# 1756 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1757 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx43; dx43 = (x4 - x3) ;
# 1758 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy43; dy43 = (y4 - y3) ;
# 1759 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz43; dz43 = (z4 - z3) ;
# 1760 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1761 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx57; dx57 = (x5 - x7) ;
# 1762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy57; dy57 = (y5 - y7) ;
# 1763 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz57; dz57 = (z5 - z7) ;
# 1764 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1765 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx14; dx14 = (x1 - x4) ;
# 1766 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy14; dy14 = (y1 - y4) ;
# 1767 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz14; dz14 = (z1 - z4) ;
# 1768 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1769 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx25; dx25 = (x2 - x5) ;
# 1770 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy25; dy25 = (y2 - y5) ;
# 1771 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz25; dz25 = (z2 - z5) ;
# 1772 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1773 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1774 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1775 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1776 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t volume; volume = (((dx31 + dx72)*((dy63)*(dz20) - (dy20)*(dz63)) + (dy31 + dy72)*((dx20)*(dz63) - (dx63)*(dz20)) + (dz31 + dz72)*((dx63)*(dy20) - (dx20)*(dy63)))
# 1778 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1779 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                +
# 1780 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((dx43 + dx57)*((dy64)*(dz70) - (dy70)*(dz64)) + (dy43 + dy57)*((dx70)*(dz64) - (dx64)*(dz70)) + (dz43 + dz57)*((dx64)*(dy70) - (dx70)*(dy64)))
# 1781 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1782 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                +
# 1783 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((dx14 + dx25)*((dy61)*(dz50) - (dy50)*(dz61)) + (dy14 + dy25)*((dx50)*(dz61) - (dx61)*(dz50)) + (dz14 + dz25)*((dx61)*(dy50) - (dx50)*(dy61)))) ;
# 1786 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1787 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1788 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1789 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 volume *= twelveth;
# 1790 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1791 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ____chimes_ret_var_3; ; ____chimes_ret_var_3 = (volume); rm_stack(false, 0UL, "CalcElemVolumeScalar", &____must_manage_CalcElemVolumeScalar, ____alias_loc_id_50, ____chimes_did_disable28, false); return ____chimes_ret_var_3; ;
# 1792 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemVolumeScalar", &____must_manage_CalcElemVolumeScalar, ____alias_loc_id_50, ____chimes_did_disable28, false); }
# 1793 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline Real_t CalcElemVolume_npm( const Real_t x[8], const Real_t y[8], const Real_t z[8] );
static inline Real_t CalcElemVolume_quick( const Real_t x[8], const Real_t y[8], const Real_t z[8] ); static inline Real_t CalcElemVolume( const Real_t x[8], const Real_t y[8], const Real_t z[8] );
static inline
# 1795 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t CalcElemVolume_resumable( const Real_t x[8], const Real_t y[8], const Real_t z[8] )
# 1796 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable29 = new_stack((void *)(&CalcElemVolume), "CalcElemVolume", &____must_manage_CalcElemVolume, 3, 0, (size_t)(2224956529753666968UL), (size_t)(2224956529753666969UL), (size_t)(2224956529753666970UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1797 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ____chimes_ret_var_4; ; call_lbl_0: ____chimes_ret_var_4 = (({ calling_npm("CalcElemVolumeScalar", 0); CalcElemVolumeScalar_npm(x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7], y[0], y[1], y[2], y[3], y[4], y[5], y[6], y[7], z[0], z[1], z[2], z[3], z[4], z[5], z[6], z[7]); })); rm_stack(false, 0UL, "CalcElemVolume", &____must_manage_CalcElemVolume, ____alias_loc_id_7, ____chimes_did_disable29, false); return ____chimes_ret_var_4; ;
# 1800 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemVolume", &____must_manage_CalcElemVolume, ____alias_loc_id_7, ____chimes_did_disable29, false); }
# 1801 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1802 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline Real_t AreaFace_npm( const Real_t x0, const Real_t x1, const Real_t x2, const Real_t x3, const Real_t y0, const Real_t y1, const Real_t y2, const Real_t y3, const Real_t z0, const Real_t z1, const Real_t z2, const Real_t z3);
static inline Real_t AreaFace_quick( const Real_t x0, const Real_t x1, const Real_t x2, const Real_t x3, const Real_t y0, const Real_t y1, const Real_t y2, const Real_t y3, const Real_t z0, const Real_t z1, const Real_t z2, const Real_t z3); static inline Real_t AreaFace( const Real_t x0, const Real_t x1, const Real_t x2, const Real_t x3, const Real_t y0, const Real_t y1, const Real_t y2, const Real_t y3, const Real_t z0, const Real_t z1, const Real_t z2, const Real_t z3);
static inline
# 1803 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t AreaFace_resumable( const Real_t x0, const Real_t x1,
# 1804 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t x2, const Real_t x3,
# 1805 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t y0, const Real_t y1,
# 1806 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t y2, const Real_t y3,
# 1807 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t z0, const Real_t z1,
# 1808 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t z2, const Real_t z3)
# 1809 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable30 = new_stack((void *)(&AreaFace), "AreaFace", &____must_manage_AreaFace, 12, 0, (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1810 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t fx; fx = ((x2 - x0) - (x3 - x1)) ;
# 1811 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t fy; fy = ((y2 - y0) - (y3 - y1)) ;
# 1812 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t fz; fz = ((z2 - z0) - (z3 - z1)) ;
# 1813 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t gx; gx = ((x2 - x0) + (x3 - x1)) ;
# 1814 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t gy; gy = ((y2 - y0) + (y3 - y1)) ;
# 1815 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t gz; gz = ((z2 - z0) + (z3 - z1)) ;
# 1816 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t area; area = ((fx * fx + fy * fy + fz * fz) *
# 1818 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (gx * gx + gy * gy + gz * gz) -
# 1819 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (fx * gx + fy * gy + fz * gz) *
# 1820 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (fx * gx + fy * gy + fz * gz)) ;
# 1821 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ____chimes_ret_var_5; ; ____chimes_ret_var_5 = (area); rm_stack(false, 0UL, "AreaFace", &____must_manage_AreaFace, ____alias_loc_id_31, ____chimes_did_disable30, false); return ____chimes_ret_var_5; ;
# 1822 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "AreaFace", &____must_manage_AreaFace, ____alias_loc_id_31, ____chimes_did_disable30, false); }
# 1823 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1824 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline Real_t CalcElemCharacteristicLength_npm( const Real_t x[8], const Real_t y[8], const Real_t z[8], const Real_t volume);
static inline Real_t CalcElemCharacteristicLength_quick( const Real_t x[8], const Real_t y[8], const Real_t z[8], const Real_t volume); static inline Real_t CalcElemCharacteristicLength( const Real_t x[8], const Real_t y[8], const Real_t z[8], const Real_t volume);
static inline
# 1825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t CalcElemCharacteristicLength_resumable( const Real_t x[8],
# 1826 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t y[8],
# 1827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t z[8],
# 1828 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t volume)
# 1829 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable31 = new_stack((void *)(&CalcElemCharacteristicLength), "CalcElemCharacteristicLength", &____must_manage_CalcElemCharacteristicLength, 4, 0, (size_t)(2224956529753671707UL), (size_t)(2224956529753671708UL), (size_t)(2224956529753671709UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1830 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t a; Real_t charLength; charLength = (Real_t(0.0)) ;
# 1831 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1832 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: a = ({ calling_npm("AreaFace", 0); AreaFace_npm(x[0], x[1], x[2], x[3], y[0], y[1], y[2], y[3], z[0], z[1], z[2], z[3]); }) ;
# 1835 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1836 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1837 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: a = ({ calling_npm("AreaFace", 0); AreaFace_npm(x[4], x[5], x[6], x[7], y[4], y[5], y[6], y[7], z[4], z[5], z[6], z[7]); }) ;
# 1840 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1841 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1842 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: a = ({ calling_npm("AreaFace", 0); AreaFace_npm(x[0], x[1], x[5], x[4], y[0], y[1], y[5], y[4], z[0], z[1], z[5], z[4]); }) ;
# 1845 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1846 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1847 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: a = ({ calling_npm("AreaFace", 0); AreaFace_npm(x[1], x[2], x[6], x[5], y[1], y[2], y[6], y[5], z[1], z[2], z[6], z[5]); }) ;
# 1850 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1851 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_4: a = ({ calling_npm("AreaFace", 0); AreaFace_npm(x[2], x[3], x[7], x[6], y[2], y[3], y[7], y[6], z[2], z[3], z[7], z[6]); }) ;
# 1855 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1856 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1857 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_5: a = ({ calling_npm("AreaFace", 0); AreaFace_npm(x[3], x[0], x[4], x[7], y[3], y[0], y[4], y[7], z[3], z[0], z[4], z[7]); }) ;
# 1860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1861 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1862 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_6: charLength = Real_t(4.0) * volume / ({ calling_npm("SQRT", 0); SQRT_npm(charLength); });
# 1863 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ____chimes_ret_var_6; ; ____chimes_ret_var_6 = (charLength); rm_stack(false, 0UL, "CalcElemCharacteristicLength", &____must_manage_CalcElemCharacteristicLength, ____alias_loc_id_28, ____chimes_did_disable31, false); return ____chimes_ret_var_6; ;
# 1865 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemCharacteristicLength", &____must_manage_CalcElemCharacteristicLength, ____alias_loc_id_28, ____chimes_did_disable31, false); }
# 1866 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1867 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcElemVelocityGrandient_npm( const Real_t* const xvel, const Real_t* const yvel, const Real_t* const zvel, const Real_t b[][8], const Real_t detJ, Real_t* const d );
static inline void CalcElemVelocityGrandient_quick( const Real_t* const xvel, const Real_t* const yvel, const Real_t* const zvel, const Real_t b[][8], const Real_t detJ, Real_t* const d ); static inline void CalcElemVelocityGrandient( const Real_t* const xvel, const Real_t* const yvel, const Real_t* const zvel, const Real_t b[][8], const Real_t detJ, Real_t* const d );
static inline
# 1868 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemVelocityGrandient_resumable( const Real_t* const xvel,
# 1869 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t* const yvel,
# 1870 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t* const zvel,
# 1871 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t b[][8],
# 1872 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t detJ,
# 1873 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t* const d )
# 1874 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable32 = new_stack((void *)(&CalcElemVelocityGrandient), "CalcElemVelocityGrandient", &____must_manage_CalcElemVelocityGrandient, 6, 0, (size_t)(2224956529753672908UL), (size_t)(2224956529753672909UL), (size_t)(2224956529753672910UL), (size_t)(2224956529753672911UL), (size_t)(0UL), (size_t)(2224956529753672913UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1875 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t inv_detJ; inv_detJ = (1.0 / detJ) ;
# 1876 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dyddx; Real_t dxddy; Real_t dzddx; Real_t dxddz; Real_t dzddy; Real_t dyddz; ;
# 1877 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  const Real_t *pfx; pfx = (b[0]) ;
# 1878 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  const Real_t *pfy; pfy = (b[1]) ;
# 1879 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  const Real_t *pfz; pfz = (b[2]) ;
# 1880 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1881 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[0] = inv_detJ * ( pfx[0] * (xvel[0]-xvel[6])
# 1882 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfx[1] * (xvel[1]-xvel[7])
# 1883 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfx[2] * (xvel[2]-xvel[4])
# 1884 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfx[3] * (xvel[3]-xvel[5]) );
# 1885 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1886 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[1] = inv_detJ * ( pfy[0] * (yvel[0]-yvel[6])
# 1887 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfy[1] * (yvel[1]-yvel[7])
# 1888 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfy[2] * (yvel[2]-yvel[4])
# 1889 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfy[3] * (yvel[3]-yvel[5]) );
# 1890 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1891 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[2] = inv_detJ * ( pfz[0] * (zvel[0]-zvel[6])
# 1892 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfz[1] * (zvel[1]-zvel[7])
# 1893 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfz[2] * (zvel[2]-zvel[4])
# 1894 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfz[3] * (zvel[3]-zvel[5]) );
# 1895 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1896 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dyddx = inv_detJ * ( pfx[0] * (yvel[0]-yvel[6])
# 1897 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[1] * (yvel[1]-yvel[7])
# 1898 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[2] * (yvel[2]-yvel[4])
# 1899 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[3] * (yvel[3]-yvel[5]) );
# 1900 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1901 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dxddy = inv_detJ * ( pfy[0] * (xvel[0]-xvel[6])
# 1902 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[1] * (xvel[1]-xvel[7])
# 1903 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[2] * (xvel[2]-xvel[4])
# 1904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[3] * (xvel[3]-xvel[5]) );
# 1905 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1906 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dzddx = inv_detJ * ( pfx[0] * (zvel[0]-zvel[6])
# 1907 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[1] * (zvel[1]-zvel[7])
# 1908 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[2] * (zvel[2]-zvel[4])
# 1909 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[3] * (zvel[3]-zvel[5]) );
# 1910 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1911 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dxddz = inv_detJ * ( pfz[0] * (xvel[0]-xvel[6])
# 1912 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[1] * (xvel[1]-xvel[7])
# 1913 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[2] * (xvel[2]-xvel[4])
# 1914 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[3] * (xvel[3]-xvel[5]) );
# 1915 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1916 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dzddy = inv_detJ * ( pfy[0] * (zvel[0]-zvel[6])
# 1917 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[1] * (zvel[1]-zvel[7])
# 1918 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[2] * (zvel[2]-zvel[4])
# 1919 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[3] * (zvel[3]-zvel[5]) );
# 1920 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1921 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dyddz = inv_detJ * ( pfz[0] * (yvel[0]-yvel[6])
# 1922 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[1] * (yvel[1]-yvel[7])
# 1923 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[2] * (yvel[2]-yvel[4])
# 1924 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[3] * (yvel[3]-yvel[5]) );
# 1925 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[5] = .5 * ( dxddy + dyddx );
# 1926 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[4] = .5 * ( dxddz + dzddx );
# 1927 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[3] = .5 * ( dzddy + dyddz );
# 1928 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemVelocityGrandient", &____must_manage_CalcElemVelocityGrandient, ____alias_loc_id_30, ____chimes_did_disable32, false); }
# 1929 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1930 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcKinematicsForElems_npm( Index_t numElem, Real_t dt );
static inline void CalcKinematicsForElems_quick( Index_t numElem, Real_t dt ); static inline void CalcKinematicsForElems( Index_t numElem, Real_t dt );
static inline
# 1931 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcKinematicsForElems_resumable( Index_t numElem, Real_t dt )
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable33 = new_stack((void *)(&CalcKinematicsForElems), "CalcKinematicsForElems", &____must_manage_CalcKinematicsForElems, 2, 0, (size_t)(0UL), (size_t)(0UL)) ; Real_t zd_local[8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t yd_local[8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t xd_local[8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t z_local[8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t y_local[8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t x_local[8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t D[6];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t B[3][8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (____must_checkpoint_CalcKinematicsForElems_x_local_0 || ____must_checkpoint_CalcKinematicsForElems_B_0) { register_stack_vars(2, "CalcKinematicsForElems|x_local|0", &____must_checkpoint_CalcKinematicsForElems_x_local_0, "[8 x double]", (void *)(x_local), (size_t)64, 0, 0, 0, "CalcKinematicsForElems|B|0", &____must_checkpoint_CalcKinematicsForElems_B_0, "[3 x [8 x double]]", (void *)(B), (size_t)192, 0, 0, 0); } if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 1933 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_4: bool ____chimes_disable15 = disable_current_thread(); void *____chimes_parent_ctx13 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth12 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth12 = get_thread_stack_depth(); size_t ____chimes_region_id12; unsigned ____chimes_parent_thread12 = entering_omp_parallel(4, &____chimes_region_id12, 10, &B, &D, &dt, &numElem, &x_local, &xd_local, &y_local, &yd_local, &z_local, &zd_local); int ____chimes_first_iter12 = 1;
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem, dt) firstprivate(____chimes_first_iter12) firstprivate(B) firstprivate(D) firstprivate(x_local) firstprivate(y_local) firstprivate(z_local) firstprivate(xd_local) firstprivate(yd_local) firstprivate(zd_local)
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1935 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for( Index_t k=0 ; k<numElem ; ++k )
# 1936 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { { if (____chimes_first_iter12) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread12, ____chimes_parent_ctx13, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth12, ____chimes_region_id12, 10, &B, &D, &dt, &numElem, &x_local, &xd_local, &y_local, &yd_local, &z_local, &zd_local); ____chimes_first_iter12 = 0; } {
# 1937 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1938 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1939 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1940 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1941 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1942 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1943 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1944 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1945 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t detJ; detJ = (0.0) ;
# 1946 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1947 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t volume; ;
# 1948 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t relativeVolume; ;
# 1949 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t *elemToNode; elemToNode = (domain.nodelist + (k * 8)) ;
# 1950 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1951 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1952 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t lnode; for( lnode = (0) ; lnode<8 ; ++lnode )
# 1953 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 1954 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t gnode; gnode = (elemToNode[lnode]) ;
# 1955 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x_local[lnode] = domain.x[gnode];
# 1956 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y_local[lnode] = domain.y[gnode];
# 1957 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z_local[lnode] = domain.z[gnode];
# 1958 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 1959 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1960 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1961 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: volume = ({ calling_npm("CalcElemVolume", 0); CalcElemVolume_npm(x_local, y_local, z_local); });
# 1962 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  relativeVolume = volume / domain.volo[k] ;
# 1963 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.vnew[k] = relativeVolume ;
# 1964 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delv[k] = relativeVolume - domain.v[k] ;
# 1965 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1966 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1967 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: domain.arealg[k] = ({ calling_npm("CalcElemCharacteristicLength", 0); CalcElemCharacteristicLength_npm(x_local, y_local, z_local, volume); });
# 1971 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1972 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1973 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t lnode; for( lnode = (0) ; lnode<8 ; ++lnode )
# 1974 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 1975 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t gnode; gnode = (elemToNode[lnode]) ;
# 1976 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   xd_local[lnode] = domain.xd[gnode];
# 1977 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   yd_local[lnode] = domain.yd[gnode];
# 1978 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   zd_local[lnode] = domain.zd[gnode];
# 1979 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 1980 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1981 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dt2; dt2 = (0.5 * dt) ;
# 1982 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t j; for ( j = (0) ; j<8 ; ++j )
# 1983 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 1984 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x_local[j] -= dt2 * xd_local[j];
# 1985 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y_local[j] -= dt2 * yd_local[j];
# 1986 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z_local[j] -= dt2 * zd_local[j];
# 1987 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 1988 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1989 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: ({ calling_npm("CalcElemShapeFunctionDerivatives", 0); CalcElemShapeFunctionDerivatives_npm(x_local, y_local, z_local, B, &detJ); });
# 1993 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1994 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_3: ({ calling_npm("CalcElemVelocityGrandient", 0); CalcElemVelocityGrandient_npm(xd_local, yd_local, zd_local, B, detJ, D); });
# 1998 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1999 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2000 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dxx[k] = D[0];
# 2001 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dyy[k] = D[1];
# 2002 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dzz[k] = D[2];
# 2003 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth12, ____chimes_region_id12, 1); reenable_current_thread(____chimes_disable15); }
# 2004 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcKinematicsForElems", &____must_manage_CalcKinematicsForElems, ____alias_loc_id_27, ____chimes_did_disable33, false); }
# 2005 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2006 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcLagrangeElements_npm(Real_t deltatime);
static inline void CalcLagrangeElements_quick(Real_t deltatime); static inline void CalcLagrangeElements(Real_t deltatime);
static inline
# 2007 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcLagrangeElements_resumable(Real_t deltatime)
# 2008 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable34 = new_stack((void *)(&CalcLagrangeElements), "CalcLagrangeElements", &____must_manage_CalcLagrangeElements, 1, 0, (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 2009 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 2010 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (numElem > 0) {
# 2011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: ({ calling_npm("CalcKinematicsForElems", 0); CalcKinematicsForElems_npm(numElem, deltatime); }) ;
# 2012 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2013 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2014 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_1: bool ____chimes_disable16 = disable_current_thread(); void *____chimes_parent_ctx14 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth13 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth13 = get_thread_stack_depth(); size_t ____chimes_region_id13; unsigned ____chimes_parent_thread13 = entering_omp_parallel(1, &____chimes_region_id13, 1, &numElem); int ____chimes_first_iter13 = 1;
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem) firstprivate(____chimes_first_iter13)
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2016 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for ( Index_t k=0 ; k<numElem ; ++k )
# 2017 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { { if (____chimes_first_iter13) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread13, ____chimes_parent_ctx14, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth13, ____chimes_region_id13, 1, &numElem); ____chimes_first_iter13 = 0; } {
# 2018 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2019 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t vdov; vdov = (domain.dxx[k] + domain.dyy[k] + domain.dzz[k]) ;
# 2020 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t vdovthird; vdovthird = (vdov/3.0) ;
# 2021 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2022 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2023 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.vdov[k] = vdov ;
# 2024 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.dxx[k] -= vdovthird ;
# 2025 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.dyy[k] -= vdovthird ;
# 2026 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.dzz[k] -= vdovthird ;
# 2027 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2028 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2029 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (domain.vnew[k] <= 0.0)
# 2030 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   {
# 2031 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    exit(VolumeError) ;
# 2032 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2033 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } } leaving_omp_parallel(____chimes_call_stack_depth13, ____chimes_region_id13, 1); reenable_current_thread(____chimes_disable16); }
# 2034 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2035 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcLagrangeElements", &____must_manage_CalcLagrangeElements, ____alias_loc_id_16, ____chimes_did_disable34, false); }
# 2036 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2037 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcMonotonicQGradientsForElems_npm();
static inline void CalcMonotonicQGradientsForElems_quick(); static inline void CalcMonotonicQGradientsForElems();
static inline
# 2038 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcMonotonicQGradientsForElems_resumable()
# 2039 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable35 = new_stack((void *)(&CalcMonotonicQGradientsForElems), "CalcMonotonicQGradientsForElems", &____must_manage_CalcMonotonicQGradientsForElems, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 2040 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2041 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 2042 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_3: bool ____chimes_disable17 = disable_current_thread(); void *____chimes_parent_ctx15 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth14 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth14 = get_thread_stack_depth(); size_t ____chimes_region_id14; unsigned ____chimes_parent_thread14 = entering_omp_parallel(3, &____chimes_region_id14, 1, &numElem); int ____chimes_first_iter14 = 1;
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem) firstprivate(____chimes_first_iter14)
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2044 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < numElem ; ++i ) { { if (____chimes_first_iter14) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread14, ____chimes_parent_ctx15, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth14, ____chimes_region_id14, 1, &numElem); ____chimes_first_iter14 = 0; } {
# 2045 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t ptiny; ptiny = (1.e-36) ;
# 2046 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ax; Real_t ay; Real_t az; ;
# 2047 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dxv; Real_t dyv; Real_t dzv; ;
# 2048 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2049 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t *elemToNode; elemToNode = (domain.nodelist + (8 * i)) ;
# 2050 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n0; n0 = (elemToNode[0]) ;
# 2051 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n1; n1 = (elemToNode[1]) ;
# 2052 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n2; n2 = (elemToNode[2]) ;
# 2053 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n3; n3 = (elemToNode[3]) ;
# 2054 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n4; n4 = (elemToNode[4]) ;
# 2055 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n5; n5 = (elemToNode[5]) ;
# 2056 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n6; n6 = (elemToNode[6]) ;
# 2057 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n7; n7 = (elemToNode[7]) ;
# 2058 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2059 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x0; x0 = (domain.x[n0]) ;
# 2060 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x1; x1 = (domain.x[n1]) ;
# 2061 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x2; x2 = (domain.x[n2]) ;
# 2062 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x3; x3 = (domain.x[n3]) ;
# 2063 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x4; x4 = (domain.x[n4]) ;
# 2064 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x5; x5 = (domain.x[n5]) ;
# 2065 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x6; x6 = (domain.x[n6]) ;
# 2066 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x7; x7 = (domain.x[n7]) ;
# 2067 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2068 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y0; y0 = (domain.y[n0]) ;
# 2069 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y1; y1 = (domain.y[n1]) ;
# 2070 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y2; y2 = (domain.y[n2]) ;
# 2071 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y3; y3 = (domain.y[n3]) ;
# 2072 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y4; y4 = (domain.y[n4]) ;
# 2073 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y5; y5 = (domain.y[n5]) ;
# 2074 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y6; y6 = (domain.y[n6]) ;
# 2075 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y7; y7 = (domain.y[n7]) ;
# 2076 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2077 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z0; z0 = (domain.z[n0]) ;
# 2078 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z1; z1 = (domain.z[n1]) ;
# 2079 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z2; z2 = (domain.z[n2]) ;
# 2080 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z3; z3 = (domain.z[n3]) ;
# 2081 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z4; z4 = (domain.z[n4]) ;
# 2082 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z5; z5 = (domain.z[n5]) ;
# 2083 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z6; z6 = (domain.z[n6]) ;
# 2084 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z7; z7 = (domain.z[n7]) ;
# 2085 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2086 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv0; xv0 = (domain.xd[n0]) ;
# 2087 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv1; xv1 = (domain.xd[n1]) ;
# 2088 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv2; xv2 = (domain.xd[n2]) ;
# 2089 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv3; xv3 = (domain.xd[n3]) ;
# 2090 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv4; xv4 = (domain.xd[n4]) ;
# 2091 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv5; xv5 = (domain.xd[n5]) ;
# 2092 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv6; xv6 = (domain.xd[n6]) ;
# 2093 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv7; xv7 = (domain.xd[n7]) ;
# 2094 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2095 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv0; yv0 = (domain.yd[n0]) ;
# 2096 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv1; yv1 = (domain.yd[n1]) ;
# 2097 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv2; yv2 = (domain.yd[n2]) ;
# 2098 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv3; yv3 = (domain.yd[n3]) ;
# 2099 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv4; yv4 = (domain.yd[n4]) ;
# 2100 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv5; yv5 = (domain.yd[n5]) ;
# 2101 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv6; yv6 = (domain.yd[n6]) ;
# 2102 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv7; yv7 = (domain.yd[n7]) ;
# 2103 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2104 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv0; zv0 = (domain.zd[n0]) ;
# 2105 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv1; zv1 = (domain.zd[n1]) ;
# 2106 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv2; zv2 = (domain.zd[n2]) ;
# 2107 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv3; zv3 = (domain.zd[n3]) ;
# 2108 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv4; zv4 = (domain.zd[n4]) ;
# 2109 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv5; zv5 = (domain.zd[n5]) ;
# 2110 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv6; zv6 = (domain.zd[n6]) ;
# 2111 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv7; zv7 = (domain.zd[n7]) ;
# 2112 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2113 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t vol; vol = (domain.volo[i]*domain.vnew[i]) ;
# 2114 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t norm; norm = (1.0 / ( vol + ptiny )) ;
# 2115 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2116 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dxj; dxj = (-0.25*((x0 + x1 + x5 + x4) - (x3 + x2 + x6 + x7))) ;
# 2117 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dyj; dyj = (-0.25*((y0 + y1 + y5 + y4) - (y3 + y2 + y6 + y7))) ;
# 2118 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dzj; dzj = (-0.25*((z0 + z1 + z5 + z4) - (z3 + z2 + z6 + z7))) ;
# 2119 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2120 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dxi; dxi = (0.25*((x1 + x2 + x6 + x5) - (x0 + x3 + x7 + x4))) ;
# 2121 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dyi; dyi = (0.25*((y1 + y2 + y6 + y5) - (y0 + y3 + y7 + y4))) ;
# 2122 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dzi; dzi = (0.25*((z1 + z2 + z6 + z5) - (z0 + z3 + z7 + z4))) ;
# 2123 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2124 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dxk; dxk = (0.25*((x4 + x5 + x6 + x7) - (x0 + x1 + x2 + x3))) ;
# 2125 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dyk; dyk = (0.25*((y4 + y5 + y6 + y7) - (y0 + y1 + y2 + y3))) ;
# 2126 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dzk; dzk = (0.25*((z4 + z5 + z6 + z7) - (z0 + z1 + z2 + z3))) ;
# 2127 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2128 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2129 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2130 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax = dyi*dzj - dzi*dyj ;
# 2131 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay = dzi*dxj - dxi*dzj ;
# 2132 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az = dxi*dyj - dyi*dxj ;
# 2133 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2134 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: domain.delx_zeta[i] = vol / ({ calling_npm("SQRT", 0); SQRT_npm(ax*ax + ay*ay + az*az + ptiny); }) ;
# 2135 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2136 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax *= norm ;
# 2137 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay *= norm ;
# 2138 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az *= norm ;
# 2139 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2140 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dxv = 0.25*((xv4 + xv5 + xv6 + xv7) - (xv0 + xv1 + xv2 + xv3)) ;
# 2141 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dyv = 0.25*((yv4 + yv5 + yv6 + yv7) - (yv0 + yv1 + yv2 + yv3)) ;
# 2142 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dzv = 0.25*((zv4 + zv5 + zv6 + zv7) - (zv0 + zv1 + zv2 + zv3)) ;
# 2143 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2144 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delv_zeta[i] = ax*dxv + ay*dyv + az*dzv ;
# 2145 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2146 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2147 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2148 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax = dyj*dzk - dzj*dyk ;
# 2149 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay = dzj*dxk - dxj*dzk ;
# 2150 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az = dxj*dyk - dyj*dxk ;
# 2151 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2152 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: domain.delx_xi[i] = vol / ({ calling_npm("SQRT", 0); SQRT_npm(ax*ax + ay*ay + az*az + ptiny); }) ;
# 2153 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2154 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax *= norm ;
# 2155 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay *= norm ;
# 2156 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az *= norm ;
# 2157 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2158 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dxv = 0.25*((xv1 + xv2 + xv6 + xv5) - (xv0 + xv3 + xv7 + xv4)) ;
# 2159 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dyv = 0.25*((yv1 + yv2 + yv6 + yv5) - (yv0 + yv3 + yv7 + yv4)) ;
# 2160 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dzv = 0.25*((zv1 + zv2 + zv6 + zv5) - (zv0 + zv3 + zv7 + zv4)) ;
# 2161 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2162 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delv_xi[i] = ax*dxv + ay*dyv + az*dzv ;
# 2163 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2164 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2165 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2166 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax = dyk*dzi - dzk*dyi ;
# 2167 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay = dzk*dxi - dxk*dzi ;
# 2168 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az = dxk*dyi - dyk*dxi ;
# 2169 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2170 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: domain.delx_eta[i] = vol / ({ calling_npm("SQRT", 0); SQRT_npm(ax*ax + ay*ay + az*az + ptiny); }) ;
# 2171 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2172 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax *= norm ;
# 2173 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay *= norm ;
# 2174 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az *= norm ;
# 2175 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2176 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dxv = -0.25*((xv0 + xv1 + xv5 + xv4) - (xv3 + xv2 + xv6 + xv7)) ;
# 2177 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dyv = -0.25*((yv0 + yv1 + yv5 + yv4) - (yv3 + yv2 + yv6 + yv7)) ;
# 2178 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dzv = -0.25*((zv0 + zv1 + zv5 + zv4) - (zv3 + zv2 + zv6 + zv7)) ;
# 2179 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2180 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delv_eta[i] = ax*dxv + ay*dyv + az*dzv ;
# 2181 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth14, ____chimes_region_id14, 1); reenable_current_thread(____chimes_disable17); }
# 2182 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2183 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcMonotonicQGradientsForElems", &____must_manage_CalcMonotonicQGradientsForElems, ____alias_loc_id_24, ____chimes_did_disable35, false); }
# 2184 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2185 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcMonotonicQRegionForElems_npm( Real_t qlc_monoq, Real_t qqc_monoq, Real_t monoq_limiter_mult, Real_t monoq_max_slope, Real_t ptiny, Index_t elength );
static inline void CalcMonotonicQRegionForElems_quick( Real_t qlc_monoq, Real_t qqc_monoq, Real_t monoq_limiter_mult, Real_t monoq_max_slope, Real_t ptiny, Index_t elength ); static inline void CalcMonotonicQRegionForElems( Real_t qlc_monoq, Real_t qqc_monoq, Real_t monoq_limiter_mult, Real_t monoq_max_slope, Real_t ptiny, Index_t elength );
static inline
# 2186 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcMonotonicQRegionForElems_resumable(
# 2187 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t qlc_monoq,
# 2188 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t qqc_monoq,
# 2189 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t monoq_limiter_mult,
# 2190 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t monoq_max_slope,
# 2191 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t ptiny,
# 2192 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2193 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2194 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Index_t elength )
# 2195 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable36 = new_stack((void *)(&CalcMonotonicQRegionForElems), "CalcMonotonicQRegionForElems", &____must_manage_CalcMonotonicQRegionForElems, 6, 0, (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_0: bool ____chimes_disable18 = disable_current_thread(); void *____chimes_parent_ctx16 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth15 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth15 = get_thread_stack_depth(); size_t ____chimes_region_id15; unsigned ____chimes_parent_thread15 = entering_omp_parallel(0, &____chimes_region_id15, 6, &elength, &monoq_limiter_mult, &monoq_max_slope, &ptiny, &qlc_monoq, &qqc_monoq); int ____chimes_first_iter15 = 1;
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(elength, qlc_monoq, qqc_monoq, monoq_limiter_mult, monoq_max_slope, ptiny) firstprivate(____chimes_first_iter15)
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2197 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for ( Index_t ielem = 0 ; ielem < elength; ++ielem ) { { if (____chimes_first_iter15) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread15, ____chimes_parent_ctx16, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth15, ____chimes_region_id15, 6, &elength, &monoq_limiter_mult, &monoq_max_slope, &ptiny, &qlc_monoq, &qqc_monoq); ____chimes_first_iter15 = 0; } {
# 2198 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t qlin; Real_t qquad; ;
# 2199 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t phixi; Real_t phieta; Real_t phizeta; ;
# 2200 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t i; i = (domain.matElemlist[ielem]) ;
# 2201 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Int_t bcMask; bcMask = (domain.elemBC[i]) ;
# 2202 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t delvm; Real_t delvp; ;
# 2203 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2204 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2205 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t norm; norm = (1. / ( domain.delv_xi[i] + ptiny )) ;
# 2206 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2207 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x003) {
# 2208 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvm = domain.delv_xi[domain.lxim[i]] ; break ;
# 2209 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x001: delvm = domain.delv_xi[i] ; break ;
# 2210 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x002: delvm = 0.0 ; break ;
# 2211 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2212 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2213 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x00c) {
# 2214 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvp = domain.delv_xi[domain.lxip[i]] ; break ;
# 2215 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x004: delvp = domain.delv_xi[i] ; break ;
# 2216 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x008: delvp = 0.0 ; break ;
# 2217 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2218 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2219 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2220 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm = delvm * norm ;
# 2221 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp = delvp * norm ;
# 2222 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2223 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  phixi = .5 * ( delvm + delvp ) ;
# 2224 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2225 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm *= monoq_limiter_mult ;
# 2226 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp *= monoq_limiter_mult ;
# 2227 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2228 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvm < phixi) {phixi = delvm; } ;
# 2229 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvp < phixi) {phixi = delvp; } ;
# 2230 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phixi < 0.) {phixi = 0.; } ;
# 2231 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phixi > monoq_max_slope) {phixi = monoq_max_slope; };
# 2232 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2233 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2235 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  norm = 1. / ( domain.delv_eta[i] + ptiny ) ;
# 2236 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2237 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x030) {
# 2238 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvm = domain.delv_eta[domain.letam[i]] ; break ;
# 2239 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x010: delvm = domain.delv_eta[i] ; break ;
# 2240 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x020: delvm = Real_t(0.0) ; break ;
# 2241 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2242 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2243 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x0c0) {
# 2244 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvp = domain.delv_eta[domain.letap[i]] ; break ;
# 2245 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x040: delvp = domain.delv_eta[i] ; break ;
# 2246 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x080: delvp = Real_t(0.0) ; break ;
# 2247 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2248 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2249 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2250 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm = delvm * norm ;
# 2251 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp = delvp * norm ;
# 2252 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2253 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  phieta = Real_t(.5) * ( delvm + delvp ) ;
# 2254 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2255 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm *= monoq_limiter_mult ;
# 2256 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp *= monoq_limiter_mult ;
# 2257 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2258 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvm < phieta) {phieta = delvm; } ;
# 2259 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvp < phieta) {phieta = delvp; } ;
# 2260 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phieta < Real_t(0.)) {phieta = Real_t(0.); } ;
# 2261 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phieta > monoq_max_slope) {phieta = monoq_max_slope; };
# 2262 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2263 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2264 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  norm = Real_t(1.) / ( domain.delv_zeta[i] + ptiny ) ;
# 2265 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2266 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x300) {
# 2267 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvm = domain.delv_zeta[domain.lzetam[i]] ; break ;
# 2268 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x100: delvm = domain.delv_zeta[i] ; break ;
# 2269 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x200: delvm = Real_t(0.0) ; break ;
# 2270 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2271 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2272 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0xc00) {
# 2273 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvp = domain.delv_zeta[domain.lzetap[i]] ; break ;
# 2274 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x400: delvp = domain.delv_zeta[i] ; break ;
# 2275 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x800: delvp = Real_t(0.0) ; break ;
# 2276 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2277 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2278 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2279 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm = delvm * norm ;
# 2280 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp = delvp * norm ;
# 2281 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2282 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  phizeta = Real_t(.5) * ( delvm + delvp ) ;
# 2283 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2284 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm *= monoq_limiter_mult ;
# 2285 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp *= monoq_limiter_mult ;
# 2286 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2287 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvm < phizeta) {phizeta = delvm; } ;
# 2288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvp < phizeta) {phizeta = delvp; } ;
# 2289 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phizeta < Real_t(0.)) {phizeta = Real_t(0.); };
# 2290 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phizeta > monoq_max_slope) {phizeta = monoq_max_slope; };
# 2291 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2292 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2293 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2294 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( domain.vdov[i] > Real_t(0.) ) {
# 2295 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qlin = Real_t(0.) ;
# 2296 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qquad = Real_t(0.) ;
# 2297 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2298 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  else {
# 2299 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t delvxxi; delvxxi = (domain.delv_xi[i] * domain.delx_xi[i]) ;
# 2300 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t delvxeta; delvxeta = (domain.delv_eta[i] * domain.delx_eta[i]) ;
# 2301 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t delvxzeta; delvxzeta = (domain.delv_zeta[i] * domain.delx_zeta[i]) ;
# 2302 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2303 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (delvxxi > Real_t(0.)) {delvxxi = Real_t(0.); } ;
# 2304 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (delvxeta > Real_t(0.)) {delvxeta = Real_t(0.); } ;
# 2305 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (delvxzeta > Real_t(0.)) {delvxzeta = Real_t(0.); } ;
# 2306 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2307 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t rho; rho = (domain.elemMass[i] / (domain.volo[i] * domain.vnew[i])) ;
# 2308 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2309 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qlin = -qlc_monoq * rho *
# 2310 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            ( delvxxi * (Real_t(1.) - phixi) +
# 2311 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    delvxeta * (Real_t(1.) - phieta) +
# 2312 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    delvxzeta * (Real_t(1.) - phizeta) ) ;
# 2313 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2314 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qquad = qqc_monoq * rho *
# 2315 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            ( delvxxi*delvxxi * (Real_t(1.) - phixi*phixi) +
# 2316 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    delvxeta*delvxeta * (Real_t(1.) - phieta*phieta) +
# 2317 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    delvxzeta*delvxzeta * (Real_t(1.) - phizeta*phizeta) ) ;
# 2318 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2319 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2320 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.qq[i] = qquad ;
# 2321 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.ql[i] = qlin ;
# 2322 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth15, ____chimes_region_id15, 1); reenable_current_thread(____chimes_disable18); }
# 2323 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcMonotonicQRegionForElems", &____must_manage_CalcMonotonicQRegionForElems, ____alias_loc_id_26, ____chimes_did_disable36, false); }
# 2324 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2325 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcMonotonicQForElems_npm();
static inline void CalcMonotonicQForElems_quick(); static inline void CalcMonotonicQForElems();
static inline
# 2326 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcMonotonicQForElems_resumable()
# 2327 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable37 = new_stack((void *)(&CalcMonotonicQForElems), "CalcMonotonicQForElems", &____must_manage_CalcMonotonicQForElems, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 2328 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2329 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2330 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2331 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ptiny; ptiny = (Real_t(1.e-36)) ;
# 2332 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t monoq_max_slope; monoq_max_slope = (domain.monoq_max_slope) ;
# 2333 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t monoq_limiter_mult; monoq_limiter_mult = (domain.monoq_limiter_mult) ;
# 2334 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2335 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2336 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2337 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2338 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t elength; elength = (domain.numElem) ;
# 2339 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (elength > 0) {
# 2340 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t qlc_monoq; qlc_monoq = (domain.qlc_monoq) ;
# 2341 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t qqc_monoq; qqc_monoq = (domain.qqc_monoq) ;
# 2342 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: ({ calling_npm("CalcMonotonicQRegionForElems", 0); CalcMonotonicQRegionForElems_npm(qlc_monoq, qqc_monoq, monoq_limiter_mult, monoq_max_slope, ptiny, elength); });
# 2351 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2352 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcMonotonicQForElems", &____must_manage_CalcMonotonicQForElems, ____alias_loc_id_25, ____chimes_did_disable37, false); }
# 2353 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2354 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcQForElems_npm();
static inline void CalcQForElems_quick(); static inline void CalcQForElems();
static inline
# 2355 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcQForElems_resumable()
# 2356 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable38 = new_stack((void *)(&CalcQForElems), "CalcQForElems", &____must_manage_CalcQForElems, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 2357 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t qstop; qstop = (domain.qstop) ;
# 2358 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 2359 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2360 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2361 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2362 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2363 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2364 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2365 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcMonotonicQGradientsForElems", 0); CalcMonotonicQGradientsForElems_npm(); }) ;
# 2366 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2367 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2368 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2369 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("CalcMonotonicQForElems", 0); CalcMonotonicQForElems_npm(); }) ;
# 2370 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2371 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2372 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (numElem != 0) {
# 2373 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t idx; idx = (-1) ;
# 2374 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t i; for ( i = (0) ; i<numElem; ++i) {
# 2375 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if ( domain.q[i] > qstop ) {
# 2376 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    idx = i ;
# 2377 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    break ;
# 2378 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2379 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 2380 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2381 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if(idx >= 0) {
# 2382 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   exit(QStopError) ;
# 2383 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2384 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2385 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcQForElems", &____must_manage_CalcQForElems, ____alias_loc_id_17, ____chimes_did_disable38, false); }
# 2386 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2387 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcPressureForElems_npm(Real_t* p_new, Real_t* bvc, Real_t* pbvc, Real_t* e_old, Real_t* compression, Real_t *vnewc, Real_t pmin, Real_t p_cut, Real_t eosvmax, Index_t length);
static inline void CalcPressureForElems_quick(Real_t* p_new, Real_t* bvc, Real_t* pbvc, Real_t* e_old, Real_t* compression, Real_t *vnewc, Real_t pmin, Real_t p_cut, Real_t eosvmax, Index_t length); static inline void CalcPressureForElems(Real_t* p_new, Real_t* bvc, Real_t* pbvc, Real_t* e_old, Real_t* compression, Real_t *vnewc, Real_t pmin, Real_t p_cut, Real_t eosvmax, Index_t length);
static inline
# 2388 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcPressureForElems_resumable(Real_t* p_new, Real_t* bvc,
# 2389 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t* pbvc, Real_t* e_old,
# 2390 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t* compression, Real_t *vnewc,
# 2391 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t pmin,
# 2392 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t p_cut, Real_t eosvmax,
# 2393 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Index_t length)
# 2394 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable39 = new_stack((void *)(&CalcPressureForElems), "CalcPressureForElems", &____must_manage_CalcPressureForElems, 10, 0, (size_t)(2224956529753669537UL), (size_t)(2224956529753669538UL), (size_t)(2224956529753669539UL), (size_t)(2224956529753669540UL), (size_t)(2224956529753669541UL), (size_t)(2224956529753669542UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 2395 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_1: bool ____chimes_disable19 = disable_current_thread(); void *____chimes_parent_ctx17 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth16 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth16 = get_thread_stack_depth(); size_t ____chimes_region_id16; unsigned ____chimes_parent_thread16 = entering_omp_parallel(1, &____chimes_region_id16, 1, &length); int ____chimes_first_iter16 = 1;
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length) firstprivate(____chimes_first_iter16)
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2397 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0; i < length ; ++i) { { if (____chimes_first_iter16) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread16, ____chimes_parent_ctx17, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth16, ____chimes_region_id16, 1, &length); ____chimes_first_iter16 = 0; } {
# 2398 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t c1s; c1s = (Real_t(2.0)/Real_t(3.0)) ;
# 2399 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  bvc[i] = c1s * (compression[i] + Real_t(1.));
# 2400 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  pbvc[i] = c1s;
# 2401 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth16, ____chimes_region_id16, 1); reenable_current_thread(____chimes_disable19); }
# 2402 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_2: bool ____chimes_disable20 = disable_current_thread(); void *____chimes_parent_ctx18 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth17 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth17 = get_thread_stack_depth(); size_t ____chimes_region_id17; unsigned ____chimes_parent_thread17 = entering_omp_parallel(2, &____chimes_region_id17, 4, &eosvmax, &length, &p_cut, &pmin); int ____chimes_first_iter17 = 1;
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, pmin, p_cut, eosvmax) firstprivate(____chimes_first_iter17)
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2404 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i){ { if (____chimes_first_iter17) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread17, ____chimes_parent_ctx18, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth17, ____chimes_region_id17, 4, &eosvmax, &length, &p_cut, &pmin); ____chimes_first_iter17 = 0; } {
# 2405 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  p_new[i] = bvc[i] * e_old[i] ;
# 2406 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2407 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: if (({ calling_npm("FABS", 0); FABS_npm(p_new[i]); }) < p_cut) {p_new[i] = Real_t(0.0); } ;
# 2409 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2410 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (vnewc[i] >= eosvmax) {p_new[i] = Real_t(0.0); } ;
# 2412 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2413 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (p_new[i] < pmin) {p_new[i] = pmin; } ;
# 2415 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth17, ____chimes_region_id17, 1); reenable_current_thread(____chimes_disable20); }
# 2416 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcPressureForElems", &____must_manage_CalcPressureForElems, ____alias_loc_id_23, ____chimes_did_disable39, false); }
# 2417 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2418 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcEnergyForElems_npm(Real_t* p_new, Real_t* e_new, Real_t* q_new, Real_t* bvc, Real_t* pbvc, Real_t* p_old, Real_t* e_old, Real_t* q_old, Real_t* compression, Real_t* compHalfStep, Real_t* vnewc, Real_t* work, Real_t* delvc, Real_t pmin, Real_t p_cut, Real_t e_cut, Real_t q_cut, Real_t emin, Real_t* qq, Real_t* ql, Real_t rho0, Real_t eosvmax, Index_t length);
static inline void CalcEnergyForElems_quick(Real_t* p_new, Real_t* e_new, Real_t* q_new, Real_t* bvc, Real_t* pbvc, Real_t* p_old, Real_t* e_old, Real_t* q_old, Real_t* compression, Real_t* compHalfStep, Real_t* vnewc, Real_t* work, Real_t* delvc, Real_t pmin, Real_t p_cut, Real_t e_cut, Real_t q_cut, Real_t emin, Real_t* qq, Real_t* ql, Real_t rho0, Real_t eosvmax, Index_t length); static inline void CalcEnergyForElems(Real_t* p_new, Real_t* e_new, Real_t* q_new, Real_t* bvc, Real_t* pbvc, Real_t* p_old, Real_t* e_old, Real_t* q_old, Real_t* compression, Real_t* compHalfStep, Real_t* vnewc, Real_t* work, Real_t* delvc, Real_t pmin, Real_t p_cut, Real_t e_cut, Real_t q_cut, Real_t emin, Real_t* qq, Real_t* ql, Real_t rho0, Real_t eosvmax, Index_t length);
static inline
# 2419 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcEnergyForElems_resumable(Real_t* p_new, Real_t* e_new, Real_t* q_new,
# 2420 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* bvc, Real_t* pbvc,
# 2421 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* p_old, Real_t* e_old, Real_t* q_old,
# 2422 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* compression, Real_t* compHalfStep,
# 2423 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* vnewc, Real_t* work, Real_t* delvc, Real_t pmin,
# 2424 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t p_cut, Real_t e_cut, Real_t q_cut, Real_t emin,
# 2425 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* qq, Real_t* ql,
# 2426 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t rho0,
# 2427 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t eosvmax,
# 2428 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Index_t length)
# 2429 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable40 = new_stack((void *)(&CalcEnergyForElems), "CalcEnergyForElems", &____must_manage_CalcEnergyForElems, 23, 0, (size_t)(2224956529753669266UL), (size_t)(2224956529753669267UL), (size_t)(2224956529753669268UL), (size_t)(2224956529753669269UL), (size_t)(2224956529753669270UL), (size_t)(2224956529753669271UL), (size_t)(2224956529753669272UL), (size_t)(2224956529753669273UL), (size_t)(2224956529753669274UL), (size_t)(2224956529753669275UL), (size_t)(2224956529753669276UL), (size_t)(2224956529753669277UL), (size_t)(2224956529753669278UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(2224956529753669284UL), (size_t)(2224956529753669285UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 2430 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *pHalfStep; pHalfStep = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668695UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2431 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((pHalfStep) ? static_cast<void> (0) : __assert_fail ("pHalfStep", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2431, __PRETTY_FUNCTION__));
# 2432 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_9: bool ____chimes_disable21 = disable_current_thread(); void *____chimes_parent_ctx19 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth18 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth18 = get_thread_stack_depth(); size_t ____chimes_region_id18; unsigned ____chimes_parent_thread18 = entering_omp_parallel(9, &____chimes_region_id18, 2, &emin, &length); int ____chimes_first_iter18 = 1;
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, emin) firstprivate(____chimes_first_iter18)
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2434 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i) { { if (____chimes_first_iter18) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread18, ____chimes_parent_ctx19, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth18, ____chimes_region_id18, 2, &emin, &length); ____chimes_first_iter18 = 0; } {
# 2435 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  e_new[i] = e_old[i] - Real_t(0.5) * delvc[i] * (p_old[i] + q_old[i])
# 2436 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  + Real_t(0.5) * work[i];
# 2437 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2438 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (e_new[i] < emin ) {
# 2439 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = emin ;
# 2440 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2441 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth18, ____chimes_region_id18, 1); reenable_current_thread(____chimes_disable21); }
# 2442 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2443 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcPressureForElems", 0); CalcPressureForElems_npm(pHalfStep, bvc, pbvc, e_new, compHalfStep, vnewc, pmin, p_cut, eosvmax, length); });
# 2445 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_10: bool ____chimes_disable22 = disable_current_thread(); void *____chimes_parent_ctx20 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth19 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth19 = get_thread_stack_depth(); size_t ____chimes_region_id19; unsigned ____chimes_parent_thread19 = entering_omp_parallel(10, &____chimes_region_id19, 2, &length, &rho0); int ____chimes_first_iter19 = 1;
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, rho0) firstprivate(____chimes_first_iter19)
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2447 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i) { { if (____chimes_first_iter19) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread19, ____chimes_parent_ctx20, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth19, ____chimes_region_id19, 2, &length, &rho0); ____chimes_first_iter19 = 0; } {
# 2448 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t vhalf; vhalf = (Real_t(1.) / (Real_t(1.) + compHalfStep[i])) ;
# 2449 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2450 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( delvc[i] > Real_t(0.) ) {
# 2451 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_new[i] = Real_t(0.) ;
# 2452 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2453 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  else {
# 2454 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t ssc; ssc = (( pbvc[i] * e_new[i]
# 2455 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + vhalf * vhalf * bvc[i] * pHalfStep[i] ) / rho0) ;
# 2456 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2457 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if ( ssc <= Real_t(.111111e-36) ) {
# 2458 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ssc =Real_t(.333333e-18) ;
# 2459 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } else {
# 2460 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     call_lbl_1: ssc = ({ calling_npm("SQRT", 0); SQRT_npm(ssc); }) ;
# 2461 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2462 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2463 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_new[i] = (ssc*ql[i] + qq[i]) ;
# 2464 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2465 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2466 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  e_new[i] = e_new[i] + Real_t(0.5) * delvc[i]
# 2467 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  * ( Real_t(3.0)*(p_old[i] + q_old[i])
# 2468 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     - Real_t(4.0)*(pHalfStep[i] + q_new[i])) ;
# 2469 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth19, ____chimes_region_id19, 1); reenable_current_thread(____chimes_disable22); }
# 2470 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_11: bool ____chimes_disable23 = disable_current_thread(); void *____chimes_parent_ctx21 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth20 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth20 = get_thread_stack_depth(); size_t ____chimes_region_id20; unsigned ____chimes_parent_thread20 = entering_omp_parallel(11, &____chimes_region_id20, 3, &e_cut, &emin, &length); int ____chimes_first_iter20 = 1;
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, emin, e_cut) firstprivate(____chimes_first_iter20)
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2472 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i) { { if (____chimes_first_iter20) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread20, ____chimes_parent_ctx21, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth20, ____chimes_region_id20, 3, &e_cut, &emin, &length); ____chimes_first_iter20 = 0; } {
# 2473 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2474 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  e_new[i] += Real_t(0.5) * work[i];
# 2475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2476 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: if (({ calling_npm("FABS", 0); FABS_npm(e_new[i]); }) < e_cut) {
# 2477 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = Real_t(0.) ;
# 2478 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2479 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( e_new[i] < emin ) {
# 2480 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = emin ;
# 2481 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2482 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth20, ____chimes_region_id20, 1); reenable_current_thread(____chimes_disable23); }
# 2483 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2484 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: ({ calling_npm("CalcPressureForElems", 0); CalcPressureForElems_npm(p_new, bvc, pbvc, e_new, compression, vnewc, pmin, p_cut, eosvmax, length); });
# 2486 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_12: bool ____chimes_disable24 = disable_current_thread(); void *____chimes_parent_ctx22 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth21 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth21 = get_thread_stack_depth(); size_t ____chimes_region_id21; unsigned ____chimes_parent_thread21 = entering_omp_parallel(12, &____chimes_region_id21, 4, &e_cut, &emin, &length, &rho0); int ____chimes_first_iter21 = 1;
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, rho0, emin, e_cut) firstprivate(____chimes_first_iter21)
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2488 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i){ { if (____chimes_first_iter21) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread21, ____chimes_parent_ctx22, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth21, ____chimes_region_id21, 4, &e_cut, &emin, &length, &rho0); ____chimes_first_iter21 = 0; } {
# 2489 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t sixth; sixth = (Real_t(1.0) / Real_t(6.0)) ;
# 2490 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t q_tilde; ;
# 2491 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2492 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvc[i] > Real_t(0.)) {
# 2493 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_tilde = Real_t(0.) ;
# 2494 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2495 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  else {
# 2496 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t ssc; ssc = (( pbvc[i] * e_new[i]
# 2497 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + vnewc[i] * vnewc[i] * bvc[i] * p_new[i] ) / rho0) ;
# 2498 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2499 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if ( ssc <= Real_t(.111111e-36) ) {
# 2500 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ssc = Real_t(.333333e-18) ;
# 2501 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } else {
# 2502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     call_lbl_4: ssc = ({ calling_npm("SQRT", 0); SQRT_npm(ssc); }) ;
# 2503 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2504 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2505 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_tilde = (ssc*ql[i] + qq[i]) ;
# 2506 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2507 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2508 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  e_new[i] = e_new[i] - ( Real_t(7.0)*(p_old[i] + q_old[i])
# 2509 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                               - Real_t(8.0)*(pHalfStep[i] + q_new[i])
# 2510 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                               + (p_new[i] + q_tilde)) * delvc[i]*sixth ;
# 2511 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2512 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_5: if (({ calling_npm("FABS", 0); FABS_npm(e_new[i]); }) < e_cut) {
# 2513 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = Real_t(0.) ;
# 2514 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( e_new[i] < emin ) {
# 2516 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = emin ;
# 2517 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2518 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth21, ____chimes_region_id21, 1); reenable_current_thread(____chimes_disable24); }
# 2519 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2520 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_6: ({ calling_npm("CalcPressureForElems", 0); CalcPressureForElems_npm(p_new, bvc, pbvc, e_new, compression, vnewc, pmin, p_cut, eosvmax, length); });
# 2522 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_13: bool ____chimes_disable25 = disable_current_thread(); void *____chimes_parent_ctx23 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth22 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth22 = get_thread_stack_depth(); size_t ____chimes_region_id22; unsigned ____chimes_parent_thread22 = entering_omp_parallel(13, &____chimes_region_id22, 3, &length, &q_cut, &rho0); int ____chimes_first_iter22 = 1;
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, rho0, q_cut) firstprivate(____chimes_first_iter22)
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2524 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i){ { if (____chimes_first_iter22) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread22, ____chimes_parent_ctx23, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth22, ____chimes_region_id22, 3, &length, &q_cut, &rho0); ____chimes_first_iter22 = 0; } {
# 2525 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2526 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( delvc[i] <= Real_t(0.) ) {
# 2527 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t ssc; ssc = (( pbvc[i] * e_new[i]
# 2528 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + vnewc[i] * vnewc[i] * bvc[i] * p_new[i] ) / rho0) ;
# 2529 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2530 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if ( ssc <= Real_t(.111111e-36) ) {
# 2531 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ssc = Real_t(.333333e-18) ;
# 2532 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } else {
# 2533 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     call_lbl_7: ssc = ({ calling_npm("SQRT", 0); SQRT_npm(ssc); }) ;
# 2534 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2535 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2536 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_new[i] = (ssc*ql[i] + qq[i]) ;
# 2537 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2538 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    call_lbl_8: if (({ calling_npm("FABS", 0); FABS_npm(q_new[i]); }) < q_cut) {q_new[i] = Real_t(0.); } ;
# 2539 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2540 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth22, ____chimes_region_id22, 1); reenable_current_thread(____chimes_disable25); }
# 2541 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2542 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)pHalfStep) - sizeof(void *)), 2224956529753668695UL);free((((unsigned char *)pHalfStep) - sizeof(void *))); }) ;
# 2543 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2544 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 rm_stack(false, 0UL, "CalcEnergyForElems", &____must_manage_CalcEnergyForElems, ____alias_loc_id_21, ____chimes_did_disable40, false); return ;
# 2545 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2546 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2547 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcSoundSpeedForElems_npm(Real_t *vnewc, Real_t rho0, Real_t *enewc, Real_t *pnewc, Real_t *pbvc, Real_t *bvc, Real_t ss4o3, Index_t nz);
static inline void CalcSoundSpeedForElems_quick(Real_t *vnewc, Real_t rho0, Real_t *enewc, Real_t *pnewc, Real_t *pbvc, Real_t *bvc, Real_t ss4o3, Index_t nz); static inline void CalcSoundSpeedForElems(Real_t *vnewc, Real_t rho0, Real_t *enewc, Real_t *pnewc, Real_t *pbvc, Real_t *bvc, Real_t ss4o3, Index_t nz);
static inline
# 2548 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcSoundSpeedForElems_resumable(Real_t *vnewc, Real_t rho0, Real_t *enewc,
# 2549 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                            Real_t *pnewc, Real_t *pbvc,
# 2550 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                            Real_t *bvc, Real_t ss4o3, Index_t nz)
# 2551 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable41 = new_stack((void *)(&CalcSoundSpeedForElems), "CalcSoundSpeedForElems", &____must_manage_CalcSoundSpeedForElems, 8, 0, (size_t)(2224956529753669390UL), (size_t)(0UL), (size_t)(2224956529753669392UL), (size_t)(2224956529753669393UL), (size_t)(2224956529753669394UL), (size_t)(2224956529753669395UL), (size_t)(0UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_1: bool ____chimes_disable26 = disable_current_thread(); void *____chimes_parent_ctx24 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth23 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth23 = get_thread_stack_depth(); size_t ____chimes_region_id23; unsigned ____chimes_parent_thread23 = entering_omp_parallel(1, &____chimes_region_id23, 3, &nz, &rho0, &ss4o3); int ____chimes_first_iter23 = 1;
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(nz, rho0, ss4o3) firstprivate(____chimes_first_iter23)
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2553 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0; i < nz ; ++i) { { if (____chimes_first_iter23) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread23, ____chimes_parent_ctx24, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth23, ____chimes_region_id23, 3, &nz, &rho0, &ss4o3); ____chimes_first_iter23 = 0; } {
# 2554 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t iz; iz = (domain.matElemlist[i]) ;
# 2555 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t ssTmp; ssTmp = ((pbvc[i] * enewc[i] + vnewc[i] * vnewc[i] *
# 2556 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
      bvc[i] * pnewc[i]) / rho0) ;
# 2557 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (ssTmp <= Real_t(.111111e-36)) {
# 2558 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ssTmp = Real_t(.333333e-18);
# 2559 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2560 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  else {
# 2561 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    call_lbl_0: ssTmp = ({ calling_npm("SQRT", 0); SQRT_npm(ssTmp); });
# 2562 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2563 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.ss[iz] = ssTmp;
# 2564 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth23, ____chimes_region_id23, 1); reenable_current_thread(____chimes_disable26); }
# 2565 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcSoundSpeedForElems", &____must_manage_CalcSoundSpeedForElems, ____alias_loc_id_22, ____chimes_did_disable41, false); }
# 2566 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2567 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void EvalEOSForElems_npm(Real_t *vnewc, Index_t length);
static inline void EvalEOSForElems_quick(Real_t *vnewc, Index_t length); static inline void EvalEOSForElems(Real_t *vnewc, Index_t length);
static inline
# 2568 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void EvalEOSForElems_resumable(Real_t *vnewc, Index_t length)
# 2569 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable42 = new_stack((void *)(&EvalEOSForElems), "EvalEOSForElems", &____must_manage_EvalEOSForElems, 2, 0, (size_t)(2224956529753668607UL), (size_t)(0UL)) ; if (____chimes_replaying) { switch(get_next_call()) { case(2): { goto call_lbl_2; } case(11): { goto call_lbl_11; } default: { chimes_error(); } } } ; ;
# 2570 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t e_cut; e_cut = (domain.e_cut) ;
# 2571 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t p_cut; p_cut = (domain.p_cut) ;
# 2572 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ss4o3; ss4o3 = (domain.ss4o3) ;
# 2573 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t q_cut; q_cut = (domain.q_cut) ;
# 2574 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2575 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t eosvmax; eosvmax = (domain.eosvmax) ;
# 2576 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t eosvmin; eosvmin = (domain.eosvmin) ;
# 2577 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pmin; pmin = (domain.pmin) ;
# 2578 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t emin; emin = (domain.emin) ;
# 2579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t rho0; rho0 = (domain.refdens) ;
# 2580 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2581 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *e_old; e_old = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753667971UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2582 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *delvc; delvc = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668072UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2583 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *p_old; p_old = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668079UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2584 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *q_old; q_old = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668086UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2585 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *compression; compression = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668093UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2586 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *compHalfStep; compHalfStep = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668100UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2587 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *qq; qq = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668107UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2588 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *ql; ql = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668114UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2589 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *work; work = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668121UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2590 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *p_new; p_new = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668128UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2591 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *e_new; e_new = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668135UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2592 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *q_new; q_new = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668142UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2593 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *bvc; bvc = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668149UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2594 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *pbvc; pbvc = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668156UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2595 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((e_old) ? static_cast<void> (0) : __assert_fail ("e_old", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2595, __PRETTY_FUNCTION__)); ((delvc) ? static_cast<void> (0) : __assert_fail ("delvc", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2595, __PRETTY_FUNCTION__)); ((p_old) ? static_cast<void> (0) : __assert_fail ("p_old", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2595, __PRETTY_FUNCTION__)); ((q_old) ? static_cast<void> (0) : __assert_fail ("q_old", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2595, __PRETTY_FUNCTION__));
# 2596 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((compression) ? static_cast<void> (0) : __assert_fail ("compression", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2596, __PRETTY_FUNCTION__)); ((compHalfStep) ? static_cast<void> (0) : __assert_fail ("compHalfStep", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2596, __PRETTY_FUNCTION__)); ((qq) ? static_cast<void> (0) : __assert_fail ("qq", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2596, __PRETTY_FUNCTION__));
# 2597 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((ql) ? static_cast<void> (0) : __assert_fail ("ql", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2597, __PRETTY_FUNCTION__)); ((work) ? static_cast<void> (0) : __assert_fail ("work", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2597, __PRETTY_FUNCTION__)); ((p_new) ? static_cast<void> (0) : __assert_fail ("p_new", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2597, __PRETTY_FUNCTION__)); ((e_new) ? static_cast<void> (0) : __assert_fail ("e_new", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2597, __PRETTY_FUNCTION__));
# 2598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((q_new) ? static_cast<void> (0) : __assert_fail ("q_new", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2598, __PRETTY_FUNCTION__)); ((bvc) ? static_cast<void> (0) : __assert_fail ("bvc", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2598, __PRETTY_FUNCTION__)); ((pbvc) ? static_cast<void> (0) : __assert_fail ("pbvc", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2598, __PRETTY_FUNCTION__));
# 2599 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2600 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_2: void *____chimes_parent_ctx25 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth24 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth24 = get_thread_stack_depth(); size_t ____chimes_region_id24; unsigned ____chimes_parent_thread24 = entering_omp_parallel(2, &____chimes_region_id24, 0);
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2602 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread24, ____chimes_parent_ctx25, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth24, ____chimes_region_id24, 0); if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } {
# 2603 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t i; ;
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable28; ____chimes_disable28 = disable_current_thread();
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2605 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (i=0; i<length; ++i) { {
# 2606 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[i]) ;
# 2607 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_old[i] = domain.e[zidx] ;
# 2608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable28);
# 2609 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2610 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t j; ;
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable29; ____chimes_disable29 = disable_current_thread();
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2612 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (j=0; j<length; ++j) { {
# 2613 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[j]) ;
# 2614 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   delvc[j] = domain.delv[zidx] ;
# 2615 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable29);
# 2616 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t k; ;
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable30; ____chimes_disable30 = disable_current_thread();
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2619 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (k=0; k<length; ++k) { {
# 2620 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[k]) ;
# 2621 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   p_old[k] = domain.p[zidx] ;
# 2622 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable30);
# 2623 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2624 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t l; ;
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable31; ____chimes_disable31 = disable_current_thread();
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2626 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (l=0; l<length; ++l) { {
# 2627 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[l]) ;
# 2628 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_old[l] = domain.q[zidx] ;
# 2629 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable31);
# 2630 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t m; ;
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable32; ____chimes_disable32 = disable_current_thread();
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2633 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (m = 0; m < length ; ++m) { {
# 2634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t vchalf; ;
# 2635 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   compression[m] = Real_t(1.) / vnewc[m] - Real_t(1.);
# 2636 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   vchalf = vnewc[m] - delvc[m] * Real_t(.5);
# 2637 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   compHalfStep[m] = Real_t(1.) / vchalf - Real_t(1.);
# 2638 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable32);
# 2639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2640 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2641 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( eosvmin != Real_t(0.) ) {
# 2642 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t n; ;
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable33; ____chimes_disable33 = disable_current_thread();
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmin)
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for(n=0 ; n<length ; ++n) { {
# 2645 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (vnewc[n] <= eosvmin) {
# 2646 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     compHalfStep[n] = compression[n] ;
# 2647 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2648 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } } reenable_current_thread(____chimes_disable33);
# 2649 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2650 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( eosvmax != Real_t(0.) ) {
# 2651 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t p; ;
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable34; ____chimes_disable34 = disable_current_thread();
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmax)
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2653 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for(p=0 ; p<length ; ++p) { {
# 2654 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (vnewc[p] >= eosvmax) {
# 2655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     p_old[p] = Real_t(0.) ;
# 2656 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     compression[p] = Real_t(0.) ;
# 2657 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     compHalfStep[p] = Real_t(0.) ;
# 2658 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2659 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } } reenable_current_thread(____chimes_disable34);
# 2660 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2661 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2662 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t q; ;
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable35; ____chimes_disable35 = disable_current_thread();
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2664 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (q = 0 ; q < length ; ++q) { {
# 2665 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[q]) ;
# 2666 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qq[q] = domain.qq[zidx] ;
# 2667 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ql[q] = domain.ql[zidx] ;
# 2668 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   work[q] = Real_t(0.) ;
# 2669 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable35);
# 2670 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } thread_leaving(); } } leaving_omp_parallel(____chimes_call_stack_depth24, ____chimes_region_id24, 0); }
# 2671 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2672 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcEnergyForElems", 0); CalcEnergyForElems_npm(p_new, e_new, q_new, bvc, pbvc, p_old, e_old, q_old, compression, compHalfStep, vnewc, work, delvc, pmin, p_cut, e_cut, q_cut, emin, qq, ql, rho0, eosvmax, length); });
# 2677 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2678 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_11: void *____chimes_parent_ctx26 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth25 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth25 = get_thread_stack_depth(); size_t ____chimes_region_id25; unsigned ____chimes_parent_thread25 = entering_omp_parallel(11, &____chimes_region_id25, 0);
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2680 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread25, ____chimes_parent_ctx26, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth25, ____chimes_region_id25, 0); if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } {
# 2681 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t i; ;
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable37; ____chimes_disable37 = disable_current_thread();
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2683 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (i=0; i<length; ++i) { {
# 2684 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[i]) ;
# 2685 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.p[zidx] = p_new[i] ;
# 2686 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable37);
# 2687 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2688 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t j; ;
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable38; ____chimes_disable38 = disable_current_thread();
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2690 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (j=0; j<length; ++j) { {
# 2691 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[j]) ;
# 2692 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.e[zidx] = e_new[j] ;
# 2693 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable38);
# 2694 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2695 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t k; ;
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable39; ____chimes_disable39 = disable_current_thread();
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2697 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (k=0; k<length; ++k) { {
# 2698 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[k]) ;
# 2699 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.q[zidx] = q_new[k] ;
# 2700 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable39);
# 2701 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } thread_leaving(); } } leaving_omp_parallel(____chimes_call_stack_depth25, ____chimes_region_id25, 0); }
# 2702 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2703 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("CalcSoundSpeedForElems", 0); CalcSoundSpeedForElems_npm(vnewc, rho0, e_new, p_new, pbvc, bvc, ss4o3, length); }) ;
# 2705 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2706 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)pbvc) - sizeof(void *)), 2224956529753668156UL);free((((unsigned char *)pbvc) - sizeof(void *))); }) ;
# 2707 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)bvc) - sizeof(void *)), 2224956529753668149UL);free((((unsigned char *)bvc) - sizeof(void *))); }) ;
# 2708 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)q_new) - sizeof(void *)), 2224956529753668142UL);free((((unsigned char *)q_new) - sizeof(void *))); }) ;
# 2709 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)e_new) - sizeof(void *)), 2224956529753668135UL);free((((unsigned char *)e_new) - sizeof(void *))); }) ;
# 2710 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)p_new) - sizeof(void *)), 2224956529753668128UL);free((((unsigned char *)p_new) - sizeof(void *))); }) ;
# 2711 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)work) - sizeof(void *)), 2224956529753668121UL);free((((unsigned char *)work) - sizeof(void *))); }) ;
# 2712 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)ql) - sizeof(void *)), 2224956529753668114UL);free((((unsigned char *)ql) - sizeof(void *))); }) ;
# 2713 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)qq) - sizeof(void *)), 2224956529753668107UL);free((((unsigned char *)qq) - sizeof(void *))); }) ;
# 2714 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)compHalfStep) - sizeof(void *)), 2224956529753668100UL);free((((unsigned char *)compHalfStep) - sizeof(void *))); }) ;
# 2715 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)compression) - sizeof(void *)), 2224956529753668093UL);free((((unsigned char *)compression) - sizeof(void *))); }) ;
# 2716 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)q_old) - sizeof(void *)), 2224956529753668086UL);free((((unsigned char *)q_old) - sizeof(void *))); }) ;
# 2717 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)p_old) - sizeof(void *)), 2224956529753668079UL);free((((unsigned char *)p_old) - sizeof(void *))); }) ;
# 2718 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)delvc) - sizeof(void *)), 2224956529753668072UL);free((((unsigned char *)delvc) - sizeof(void *))); }) ;
# 2719 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)e_old) - sizeof(void *)), 2224956529753667971UL);free((((unsigned char *)e_old) - sizeof(void *))); }) ;
# 2720 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "EvalEOSForElems", &____must_manage_EvalEOSForElems, ____alias_loc_id_20, ____chimes_did_disable42, false); }
# 2721 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2722 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void ApplyMaterialPropertiesForElems_npm();
static inline void ApplyMaterialPropertiesForElems_quick(); static inline void ApplyMaterialPropertiesForElems();
static inline
# 2723 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void ApplyMaterialPropertiesForElems_resumable()
# 2724 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable43 = new_stack((void *)(&ApplyMaterialPropertiesForElems), "ApplyMaterialPropertiesForElems", &____must_manage_ApplyMaterialPropertiesForElems, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { case(1): { goto call_lbl_1; } default: { chimes_error(); } } } ; ;
# 2725 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t length; length = (domain.numElem) ;
# 2726 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2727 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (length != 0) {
# 2728 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2729 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t eosvmin; eosvmin = (domain.eosvmin) ;
# 2730 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t eosvmax; eosvmax = (domain.eosvmax) ;
# 2731 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t *vnewc; vnewc = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753667708UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2732 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        ((vnewc) ? static_cast<void> (0) : __assert_fail ("vnewc", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2732, __PRETTY_FUNCTION__));
# 2733 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_1: void *____chimes_parent_ctx27 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth26 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth26 = get_thread_stack_depth(); size_t ____chimes_region_id26; unsigned ____chimes_parent_thread26 = entering_omp_parallel(1, &____chimes_region_id26, 0);
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2735 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread26, ____chimes_parent_ctx27, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth26, ____chimes_region_id26, 0); if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } {
# 2736 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t i; ;
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable41; ____chimes_disable41 = disable_current_thread();
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2738 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for (i=0 ; i<length ; ++i) { {
# 2739 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t zn; zn = (domain.matElemlist[i]) ;
# 2740 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    vnewc[i] = domain.vnew[zn] ;
# 2741 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } } reenable_current_thread(____chimes_disable41);
# 2742 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2743 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (eosvmin != Real_t(0.)) {
# 2744 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                Index_t j; ;
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable42; ____chimes_disable42 = disable_current_thread();
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmin)
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2746 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    for(j=0 ; j<length ; ++j) { {
# 2747 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     if (vnewc[j] < eosvmin) {vnewc[j] = eosvmin; } ;
# 2749 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     } } reenable_current_thread(____chimes_disable42);
# 2750 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2751 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2752 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (eosvmax != Real_t(0.)) {
# 2753 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                Index_t k; ;
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable43; ____chimes_disable43 = disable_current_thread();
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmax)
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2755 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    for(k=0 ; k<length ; ++k) { {
# 2756 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     if (vnewc[k] > eosvmax) {vnewc[k] = eosvmax; } ;
# 2758 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     } } reenable_current_thread(____chimes_disable43);
# 2759 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2760 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2761 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t l; ;
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable44; ____chimes_disable44 = disable_current_thread();
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmin,eosvmax)
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2763 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for (l=0; l<length; ++l) { {
# 2764 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t zn; zn = (domain.matElemlist[l]) ;
# 2765 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Real_t vc; vc = (domain.v[zn]) ;
# 2766 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (eosvmin != Real_t(0.)) {
# 2767 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     if (vc < eosvmin) {vc = eosvmin; } ;
# 2769 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2770 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (eosvmax != Real_t(0.)) {
# 2771 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     if (vc > eosvmax) {vc = eosvmax; } ;
# 2773 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2774 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (vc <= 0.) {
# 2775 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     exit(VolumeError) ;
# 2776 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2777 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } } reenable_current_thread(____chimes_disable44);
# 2778 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } thread_leaving(); } } leaving_omp_parallel(____chimes_call_stack_depth26, ____chimes_region_id26, 0); }
# 2779 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2780 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: ({ calling_npm("EvalEOSForElems", 0); EvalEOSForElems_npm(vnewc, length); });
# 2781 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2782 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)vnewc) - sizeof(void *)), 2224956529753667708UL);free((((unsigned char *)vnewc) - sizeof(void *))); }) ;
# 2783 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2784 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2785 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "ApplyMaterialPropertiesForElems", &____must_manage_ApplyMaterialPropertiesForElems, ____alias_loc_id_18, ____chimes_did_disable43, false); }
# 2786 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2787 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void UpdateVolumesForElems_npm();
static inline void UpdateVolumesForElems_quick(); static inline void UpdateVolumesForElems();
static inline
# 2788 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void UpdateVolumesForElems_resumable()
# 2789 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable44 = new_stack((void *)(&UpdateVolumesForElems), "UpdateVolumesForElems", &____must_manage_UpdateVolumesForElems, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 2790 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 2791 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (numElem != 0) {
# 2792 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t v_cut; v_cut = (domain.v_cut) ;
# 2793 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_1: bool ____chimes_disable45 = disable_current_thread(); void *____chimes_parent_ctx28 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth27 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth27 = get_thread_stack_depth(); size_t ____chimes_region_id27; unsigned ____chimes_parent_thread27 = entering_omp_parallel(1, &____chimes_region_id27, 2, &numElem, &v_cut); int ____chimes_first_iter27 = 1;
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem,v_cut) firstprivate(____chimes_first_iter27)
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2795 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for(Index_t i=0 ; i<numElem ; ++i) { { if (____chimes_first_iter27) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread27, ____chimes_parent_ctx28, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth27, ____chimes_region_id27, 2, &numElem, &v_cut); ____chimes_first_iter27 = 0; } {
# 2796 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t tmpV; ;
# 2797 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   tmpV = domain.vnew[i] ;
# 2798 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2799 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    call_lbl_0: if (({ calling_npm("FABS", 0); FABS_npm(tmpV - Real_t(1.0)); }) < v_cut) {tmpV = Real_t(1.0); } ;
# 2801 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.v[i] = tmpV ;
# 2802 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } } leaving_omp_parallel(____chimes_call_stack_depth27, ____chimes_region_id27, 1); reenable_current_thread(____chimes_disable45); }
# 2803 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2804 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2805 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 rm_stack(false, 0UL, "UpdateVolumesForElems", &____must_manage_UpdateVolumesForElems, ____alias_loc_id_19, ____chimes_did_disable44, false); return ;
# 2806 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2807 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2808 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void LagrangeElements_npm();
static inline void LagrangeElements_quick(); static inline void LagrangeElements();
static inline
# 2809 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void LagrangeElements_resumable()
# 2810 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable45 = new_stack((void *)(&LagrangeElements), "LagrangeElements", &____must_manage_LagrangeElements, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 2811 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t deltatime; deltatime = (domain.deltatime) ;
# 2812 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2813 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcLagrangeElements", 0); CalcLagrangeElements_npm(deltatime); }) ;
# 2814 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2815 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2816 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("CalcQForElems", 0); CalcQForElems_npm(); }) ;
# 2817 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2818 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: ({ calling_npm("ApplyMaterialPropertiesForElems", 0); ApplyMaterialPropertiesForElems_npm(); }) ;
# 2819 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2820 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: ({ calling_npm("UpdateVolumesForElems", 0); UpdateVolumesForElems_npm(); }) ;
# 2821 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "LagrangeElements", &____must_manage_LagrangeElements, ____alias_loc_id_11, ____chimes_did_disable45, false); }
# 2822 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2823 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static int get_num_threads_npm();
static int get_num_threads_quick(); static int get_num_threads();
static int get_num_threads_resumable() {const int ____chimes_did_disable46 = new_stack((void *)(&get_num_threads), "get_num_threads", &____must_manage_get_num_threads, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { case(0): { goto call_lbl_0; } default: { chimes_error(); } } } ; ;
# 2824 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    int nthreads; ;
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_0: void *____chimes_parent_ctx29 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth28 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth28 = get_thread_stack_depth(); size_t ____chimes_region_id28; unsigned ____chimes_parent_thread28 = entering_omp_parallel(0, &____chimes_region_id28, 0);
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2826 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread28, ____chimes_parent_ctx29, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth28, ____chimes_region_id28, 0); if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } {
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp single
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2828 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { bool ____chimes_disable47; ____chimes_disable47 = disable_current_thread(); {
# 2829 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            nthreads = omp_get_num_threads();
# 2830 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         } reenable_current_thread(____chimes_disable47); }
# 2831 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     } thread_leaving(); } } leaving_omp_parallel(____chimes_call_stack_depth28, ____chimes_region_id28, 0); }
# 2832 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     int ____chimes_ret_var_7; ; ____chimes_ret_var_7 = (nthreads); rm_stack(false, 0UL, "get_num_threads", &____must_manage_get_num_threads, ____alias_loc_id_14, ____chimes_did_disable46, false); return ____chimes_ret_var_7; ;
# 2833 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "get_num_threads", &____must_manage_get_num_threads, ____alias_loc_id_14, ____chimes_did_disable46, false); }
# 2834 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2835 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcCourantConstraintForElems_npm();
static inline void CalcCourantConstraintForElems_quick(); static inline void CalcCourantConstraintForElems();
static inline
# 2836 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcCourantConstraintForElems_resumable()
# 2837 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable47 = new_stack((void *)(&CalcCourantConstraintForElems), "CalcCourantConstraintForElems", &____must_manage_CalcCourantConstraintForElems, 0, 0) ; if (____chimes_replaying) { goto lbl_0; } ; ;
# 2838 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dtcourant; dtcourant = (Real_t(1.0e+20)) ;
# 2839 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t courant_elem; courant_elem = (-1) ;
# 2840 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t qqc; qqc = (domain.qqc) ;
# 2841 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t length; length = (domain.numElem) ;
# 2842 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2843 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t qqc2; qqc2 = (Real_t(64.0) * qqc * qqc) ;
# 2844 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2845 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2846 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Index_t threads; call_lbl_0: threads = (({ calling_npm("get_num_threads", 0); get_num_threads_npm(); })) ;
# 2855 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2855 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         lbl_0: Index_t courant_elem_per_thread[threads]; if (____chimes_replaying) { goto lbl_1; } ;
# 2856 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         lbl_1: Real_t dtcourant_per_thread[threads]; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ;
# 2857 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2858 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { Index_t i; for ( i = (0) ; i < threads; i++) {
# 2859 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                courant_elem_per_thread[i] = -1;
# 2860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                dtcourant_per_thread[i] = Real_t(1.0e+20);
# 2861 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 2862 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2863 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_2: bool ____chimes_disable48 = disable_current_thread(); void *____chimes_parent_ctx30 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth29 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth29 = get_thread_stack_depth(); size_t ____chimes_region_id29; unsigned ____chimes_parent_thread29 = entering_omp_parallel(2, &____chimes_region_id29, 2, &length, &qqc2); int ____chimes_first_iter29 = 1;
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length,qqc2), shared(dtcourant,courant_elem) firstprivate(____chimes_first_iter29)
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2865 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i) { { if (____chimes_first_iter29) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread29, ____chimes_parent_ctx30, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth29, ____chimes_region_id29, 2, &length, &qqc2); ____chimes_first_iter29 = 0; } {
# 2866 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t indx; indx = (domain.matElemlist[i]) ;
# 2867 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2868 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dtf; dtf = (domain.ss[indx] * domain.ss[indx]) ;
# 2869 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2870 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( domain.vdov[indx] < Real_t(0.) ) {
# 2871 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2872 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   dtf = dtf
# 2873 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            + qqc2 * domain.arealg[indx] * domain.arealg[indx]
# 2874 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            * domain.vdov[indx] * domain.vdov[indx] ;
# 2875 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2876 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2877 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: dtf = ({ calling_npm("SQRT", 0); SQRT_npm(dtf); }) ;
# 2878 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2879 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dtf = domain.arealg[indx] / dtf ;
# 2880 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2881 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2882 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (domain.vdov[indx] != Real_t(0.)) {
# 2883 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   {
# 2884 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2885 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t thread_num; thread_num = (omp_get_thread_num()) ;
# 2894 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2894 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         if ( dtf < dtcourant_per_thread[thread_num] ) {
# 2895 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         {
# 2896 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                 dtcourant_per_thread[thread_num] = dtf ;
# 2897 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                        courant_elem_per_thread[thread_num] = indx ;
# 2898 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                }
# 2899 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        }
# 2900 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2901 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2902 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2903 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth29, ____chimes_region_id29, 1); reenable_current_thread(____chimes_disable48); }
# 2904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i < threads; i++) {
# 2905 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                if(dtcourant_per_thread[i] < dtcourant) {
# 2906 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        dtcourant = dtcourant_per_thread[i];
# 2907 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        courant_elem = courant_elem_per_thread[i];
# 2908 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                }
# 2909 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 2910 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2911 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2912 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2913 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2914 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (courant_elem != -1) {
# 2915 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dtcourant = dtcourant ;
# 2916 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2917 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2918 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 rm_stack(false, 0UL, "CalcCourantConstraintForElems", &____must_manage_CalcCourantConstraintForElems, ____alias_loc_id_12, ____chimes_did_disable47, false); return ;
# 2919 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2920 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2921 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcHydroConstraintForElems_npm();
static inline void CalcHydroConstraintForElems_quick(); static inline void CalcHydroConstraintForElems();
static inline
# 2922 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcHydroConstraintForElems_resumable()
# 2923 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable48 = new_stack((void *)(&CalcHydroConstraintForElems), "CalcHydroConstraintForElems", &____must_manage_CalcHydroConstraintForElems, 0, 0) ; if (____chimes_replaying) { goto lbl_0; } ; ;
# 2924 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dthydro; dthydro = (Real_t(1.0e+20)) ;
# 2925 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t hydro_elem; hydro_elem = (-1) ;
# 2926 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dvovmax; dvovmax = (domain.dvovmax) ;
# 2927 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t length; length = (domain.numElem) ;
# 2928 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2929 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2930 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t threads; call_lbl_0: threads = (({ calling_npm("get_num_threads", 0); get_num_threads_npm(); })) ;
# 2931 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2933 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2935 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2936 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2937 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2938 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         lbl_0: Real_t dthydro_per_thread[threads]; if (____chimes_replaying) { goto lbl_1; } ;
# 2939 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         lbl_1: Index_t hydro_elem_per_thread[threads]; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ;
# 2940 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2941 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { Index_t i; for ( i = (0) ; i < threads; i++) {
# 2942 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                hydro_elem_per_thread[i] = -1;
# 2943 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                dthydro_per_thread[i] = Real_t(1.0e+20);
# 2944 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 2945 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2946 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2947 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { Index_t i; for ( i = (0) ; i < length ; ++i) {
# 2948 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                 Index_t indx; indx = (domain.matElemlist[i]) ;
# 2949 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2950 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                if (domain.vdov[indx] != Real_t(0.)) {
# 2951 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         Real_t dtdvov; call_lbl_1: dtdvov = (dvovmax / (({ calling_npm("FABS", 0); FABS_npm(domain.vdov[indx]); })+Real_t(1.e-20))) ;
# 2952 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2953 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2954 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         Index_t thread_num; thread_num = (omp_get_thread_num()) ;
# 2955 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2956 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2957 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2958 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2959 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2960 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2961 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2962 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        if ( dthydro_per_thread[thread_num] > dtdvov ) {
# 2963 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                {
# 2964 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                        dthydro_per_thread[thread_num] = dtdvov ;
# 2965 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                        hydro_elem_per_thread[thread_num] = indx ;
# 2966 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                }
# 2967 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        }
# 2968 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                }
# 2969 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 2970 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2971 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { Index_t i; for ( i = (0) ; i < threads; i++) {
# 2972 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                if(dthydro_per_thread[i] < dthydro) {
# 2973 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        dthydro = dthydro_per_thread[i];
# 2974 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        hydro_elem = hydro_elem_per_thread[i];
# 2975 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                }
# 2976 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 2977 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2978 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (hydro_elem != -1) {
# 2979 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dthydro = dthydro ;
# 2980 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2981 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2982 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 rm_stack(false, 0UL, "CalcHydroConstraintForElems", &____must_manage_CalcHydroConstraintForElems, ____alias_loc_id_13, ____chimes_did_disable48, false); return ;
# 2983 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2984 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2985 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcTimeConstraintsForElems_npm();
static inline void CalcTimeConstraintsForElems_quick(); static inline void CalcTimeConstraintsForElems();
static inline
# 2986 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcTimeConstraintsForElems_resumable() {const int ____chimes_did_disable49 = new_stack((void *)(&CalcTimeConstraintsForElems), "CalcTimeConstraintsForElems", &____must_manage_CalcTimeConstraintsForElems, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 2987 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2988 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcCourantConstraintForElems", 0); CalcCourantConstraintForElems_npm(); }) ;
# 2989 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2990 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2991 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("CalcHydroConstraintForElems", 0); CalcHydroConstraintForElems_npm(); }) ;
# 2992 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcTimeConstraintsForElems", &____must_manage_CalcTimeConstraintsForElems, 0, ____chimes_did_disable49, false); }
# 2993 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2994 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void LagrangeLeapFrog_npm();
static inline void LagrangeLeapFrog_quick(); static inline void LagrangeLeapFrog();
static inline
# 2995 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void LagrangeLeapFrog_resumable()
# 2996 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable50 = new_stack((void *)(&LagrangeLeapFrog), "LagrangeLeapFrog", &____must_manage_LagrangeLeapFrog, 0, 0) ; if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } ; ;
# 2997 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2998 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2999 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("LagrangeNodal", 0); LagrangeNodal_npm(); });
# 3000 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3001 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3002 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3003 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("LagrangeElements", 0); LagrangeElements_npm(); });
# 3004 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3005 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: ({ calling_npm("CalcTimeConstraintsForElems", 0); CalcTimeConstraintsForElems_npm(); });
# 3006 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3007 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3008 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "LagrangeLeapFrog", &____must_manage_LagrangeLeapFrog, 0, ____chimes_did_disable50, false); }
# 3009 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3010 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
int main_quick(int argc, char *argv[]); int main(int argc, char *argv[]);
int main_resumable(int argc, char *argv[])
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable51 = new_stack((void *)(&main), "main", (int *)0, 2, 0, (size_t)(0UL), (size_t)(2224956529753666877UL)) ; Real_t z_local[8];
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t y_local[8];
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t x_local[8];
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Index_t edgeElems;
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
timeval end;
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
timeval start;
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 register_stack_vars(4, "main|x_local|0", (int *)0x0, "[8 x double]", (void *)(x_local), (size_t)64, 0, 0, 0, "main|edgeElems|0", (int *)0x0, "i32", (void *)(&edgeElems), (size_t)4, 0, 0, 0, "main|end|0", (int *)0x0, "%struct.timeval = type { i64, i64 }", (void *)(&end), (size_t)16, 0, 1, 0, "main|start|0", (int *)0x0, "%struct.timeval = type { i64, i64 }", (void *)(&start), (size_t)16, 0, 1, 0); if (____chimes_replaying) { switch(get_next_call()) { case(8): { goto call_lbl_8; } default: { chimes_error(); } } } ; ;
# 3012 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     ;
# 3013 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gettimeofday(&start, __null);
# 3014 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     edgeElems = (atoi(argv[1])) ;
# 3016 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t edgeNodes; edgeNodes = (edgeElems+1) ;
# 3017 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3018 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t tx; Real_t ty; Real_t tz; ;
# 3019 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t nidx; Index_t zidx; ;
# 3020 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t domElems; ;
# 3032 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3032 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.sizeX = edgeElems ;
# 3033 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.sizeY = edgeElems ;
# 3034 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.sizeZ = edgeElems ;
# 3035 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.numElem = edgeElems*edgeElems*edgeElems ;
# 3036 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.numNode = edgeNodes*edgeNodes*edgeNodes ;
# 3037 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3038 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domElems = domain.numElem ;
# 3039 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3040 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3041 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3042 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("AllocateElemPersistent", 0); AllocateElemPersistent_npm(&domain, domain.numElem); }) ;
# 3044 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("AllocateElemTemporary", 0); AllocateElemTemporary_npm(&domain, domain.numElem); }) ;
# 3045 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3046 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: ({ calling_npm("AllocateNodalPersistent", 0); AllocateNodalPersistent_npm(&domain, domain.numNode); }) ;
# 3047 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: ({ calling_npm("AllocateNodesets", 0); AllocateNodesets_npm(&domain, edgeNodes*edgeNodes); }) ;
# 3048 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3049 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3050 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3051 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 nidx = 0 ;
# 3052 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 tz = Real_t(0.) ;
# 3053 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t plane; for ( plane = (0) ; plane<edgeNodes; ++plane) {
# 3054 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ty = Real_t(0.) ;
# 3055 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t row; for ( row = (0) ; row<edgeNodes; ++row) {
# 3056 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   tx = Real_t(0.) ;
# 3057 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   { Index_t col; for ( col = (0) ; col<edgeNodes; ++col) {
# 3058 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    domain.x[nidx] = tx ;
# 3059 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    domain.y[nidx] = ty ;
# 3060 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    domain.z[nidx] = tz ;
# 3061 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ++nidx ;
# 3062 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3063 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    tx = Real_t(1.125)*Real_t(col+1)/Real_t(edgeElems) ;
# 3064 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } }
# 3065 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3066 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ty = Real_t(1.125)*Real_t(row+1)/Real_t(edgeElems) ;
# 3067 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3068 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3069 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  tz = Real_t(1.125)*Real_t(plane+1)/Real_t(edgeElems) ;
# 3070 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3071 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3072 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3073 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3074 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3075 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 nidx = 0 ;
# 3076 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 zidx = 0 ;
# 3077 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t plane; for ( plane = (0) ; plane<edgeElems; ++plane) {
# 3078 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t row; for ( row = (0) ; row<edgeElems; ++row) {
# 3079 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   { Index_t col; for ( col = (0) ; col<edgeElems; ++col) {
# 3080 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t *localNode; localNode = (domain.nodelist + (8 * zidx)) ;
# 3081 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[0] = nidx ;
# 3082 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[1] = nidx + 1 ;
# 3083 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[2] = nidx + edgeNodes + 1 ;
# 3084 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[3] = nidx + edgeNodes ;
# 3085 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[4] = nidx + edgeNodes*edgeNodes ;
# 3086 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[5] = nidx + edgeNodes*edgeNodes + 1 ;
# 3087 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[6] = nidx + edgeNodes*edgeNodes + edgeNodes + 1 ;
# 3088 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[7] = nidx + edgeNodes*edgeNodes + edgeNodes ;
# 3089 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ++zidx ;
# 3090 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ++nidx ;
# 3091 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } }
# 3092 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ++nidx ;
# 3093 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3094 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  nidx += edgeNodes ;
# 3095 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3096 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3097 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_4: ({ calling_npm("AllocateNodeElemIndexes", 0); AllocateNodeElemIndexes_npm(&domain); });
# 3098 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3099 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3100 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<domElems; ++i) {
# 3101 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.matElemlist[i] = i ;
# 3102 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3103 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3104 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3105 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.dtfixed = Real_t(-1.0e-7) ;
# 3106 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.deltatime = Real_t(1.0e-7) ;
# 3107 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.deltatimemultlb = Real_t(1.1) ;
# 3108 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.deltatimemultub = Real_t(1.2) ;
# 3109 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.stoptime = Real_t(1.0e-2) ;
# 3110 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.dtcourant = Real_t(1.0e+20) ;
# 3111 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.dthydro = Real_t(1.0e+20) ;
# 3112 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.dtmax = Real_t(1.0e-2) ;
# 3113 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.time = Real_t(0.) ;
# 3114 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.cycle = 0 ;
# 3115 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3116 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.e_cut = Real_t(1.0e-7) ;
# 3117 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.p_cut = Real_t(1.0e-7) ;
# 3118 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.q_cut = Real_t(1.0e-7) ;
# 3119 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.u_cut = Real_t(1.0e-7) ;
# 3120 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.v_cut = Real_t(1.0e-10) ;
# 3121 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3122 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.hgcoef = Real_t(3.0) ;
# 3123 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.ss4o3 = Real_t(4.0)/Real_t(3.0) ;
# 3124 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3125 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.qstop = Real_t(1.0e+12) ;
# 3126 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.monoq_max_slope = Real_t(1.0) ;
# 3127 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.monoq_limiter_mult = Real_t(2.0) ;
# 3128 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.qlc_monoq = Real_t(0.5) ;
# 3129 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.qqc_monoq = Real_t(2.0)/Real_t(3.0) ;
# 3130 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.qqc = Real_t(2.0) ;
# 3131 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3132 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.pmin = Real_t(0.) ;
# 3133 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.emin = Real_t(-1.0e+15) ;
# 3134 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3135 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.dvovmax = Real_t(0.1) ;
# 3136 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3137 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.eosvmax = Real_t(1.0e+9) ;
# 3138 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.eosvmin = Real_t(1.0e-9) ;
# 3139 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3140 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.refdens = Real_t(1.0) ;
# 3141 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3142 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3143 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<domElems; ++i) {
# 3144 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     ;
# 3145 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t *elemToNode; elemToNode = (domain.nodelist + (8 * i)) ;
# 3146 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t lnode; for( lnode = (0) ; lnode<8 ; ++lnode )
# 3147 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 3148 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t gnode; gnode = (elemToNode[lnode]) ;
# 3149 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x_local[lnode] = domain.x[gnode];
# 3150 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y_local[lnode] = domain.y[gnode];
# 3151 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z_local[lnode] = domain.z[gnode];
# 3152 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3153 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3154 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3155 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t volume; call_lbl_5: volume = (({ calling_npm("CalcElemVolume", 0); CalcElemVolume_npm(x_local, y_local, z_local); })) ;
# 3156 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.volo[i] = volume ;
# 3157 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.elemMass[i] = volume ;
# 3158 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t j; for ( j = (0) ; j<8; ++j) {
# 3159 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t idx; idx = (elemToNode[j]) ;
# 3160 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.nodalMass[idx] += volume / Real_t(8.0) ;
# 3161 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3162 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3163 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3164 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3165 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.e[0] = Real_t(3.948746e+7) ;
# 3166 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3167 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3168 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 nidx = 0 ;
# 3169 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<edgeNodes; ++i) {
# 3170 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t planeInc; planeInc = (i*edgeNodes*edgeNodes) ;
# 3171 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t rowInc; rowInc = (i*edgeNodes) ;
# 3172 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t j; for ( j = (0) ; j<edgeNodes; ++j) {
# 3173 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.symmX[nidx] = planeInc + j*edgeNodes ;
# 3174 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.symmY[nidx] = planeInc + j ;
# 3175 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.symmZ[nidx] = rowInc + j ;
# 3176 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ++nidx ;
# 3177 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3178 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3179 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3180 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3181 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.lxim[0] = 0 ;
# 3182 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (1) ; i<domElems; ++i) {
# 3183 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.lxim[i] = i-1 ;
# 3184 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.lxip[i-1] = i ;
# 3185 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3186 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.lxip[domElems-1] = domElems-1 ;
# 3187 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3188 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<edgeElems; ++i) {
# 3189 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.letam[i] = i ;
# 3190 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.letap[domElems-edgeElems+i] = domElems-edgeElems+i ;
# 3191 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3192 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (edgeElems) ; i<domElems; ++i) {
# 3193 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.letam[i] = i-edgeElems ;
# 3194 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.letap[i-edgeElems] = i ;
# 3195 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3197 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<edgeElems*edgeElems; ++i) {
# 3198 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.lzetam[i] = i ;
# 3199 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.lzetap[domElems-edgeElems*edgeElems+i] = domElems-edgeElems*edgeElems+i ;
# 3200 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3201 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (edgeElems*edgeElems) ; i<domElems; ++i) {
# 3202 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.lzetam[i] = i - edgeElems*edgeElems ;
# 3203 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.lzetap[i-edgeElems*edgeElems] = i ;
# 3204 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3205 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3206 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3207 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<domElems; ++i) {
# 3208 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.elemBC[i] = 0 ;
# 3209 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3210 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3211 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3212 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3213 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<edgeElems; ++i) {
# 3214 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t planeInc; planeInc = (i*edgeElems*edgeElems) ;
# 3215 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t rowInc; rowInc = (i*edgeElems) ;
# 3216 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t j; for ( j = (0) ; j<edgeElems; ++j) {
# 3217 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.elemBC[planeInc+j*edgeElems] |= 0x001 ;
# 3218 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.elemBC[planeInc+j*edgeElems+edgeElems-1] |= 0x008 ;
# 3219 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.elemBC[planeInc+j] |= 0x010 ;
# 3220 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.elemBC[planeInc+j+edgeElems*edgeElems-edgeElems] |= 0x080 ;
# 3221 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.elemBC[rowInc+j] |= 0x100 ;
# 3222 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.elemBC[rowInc+j+domElems-edgeElems*edgeElems] |= 0x800 ;
# 3223 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3224 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3225 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3226 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3227 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3228 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3229 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 while(domain.time < domain.stoptime ) {
# 3230 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3231 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_6: ({ calling_npm("TimeIncrement", 0); TimeIncrement_npm(); }) ;
# 3232 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_7: ({ calling_npm("LagrangeLeapFrog", 0); LagrangeLeapFrog_npm(); }) ;
# 3241 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3241 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         call_lbl_8: checkpoint_transformed(8, ____alias_loc_id_0);
# 3242 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3243 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 3244 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3245 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3246 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gettimeofday(&end, __null);
# 3247 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  double elapsed_time; elapsed_time = (double(end.tv_sec - start.tv_sec) + double(end.tv_usec - start.tv_usec) *1e-6) ;
# 3248 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3249 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3250 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("\n\nElapsed time = %.10f\n\n", elapsed_time);
# 3251 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3252 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t ElemId; ElemId = (0) ;
# 3253 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("Run completed:  \n");
# 3254 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("   Problem size        =  %i \n", edgeElems);
# 3255 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("   Iteration count     =  %i \n", domain.cycle);
# 3256 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("   Final Origin Energy = %12.6e \n", domain.e[ElemId]);
# 3257 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3258 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t MaxAbsDiff; MaxAbsDiff = (Real_t(0.0)) ;
# 3259 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t TotalAbsDiff; TotalAbsDiff = (Real_t(0.0)) ;
# 3260 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t MaxRelDiff; MaxRelDiff = (Real_t(0.0)) ;
# 3261 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3262 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t j; for ( j = (0) ; j<edgeElems; ++j) {
# 3263 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t k; for ( k = (j+1) ; k<edgeElems; ++k) {
# 3264 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t AbsDiff; call_lbl_9: AbsDiff = (({ calling_npm("FABS", 0); FABS_npm(domain.e[j*edgeElems+k] - domain.e[k*edgeElems+j]); })) ;
# 3265 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   TotalAbsDiff += AbsDiff;
# 3266 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3267 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (MaxAbsDiff <AbsDiff) {MaxAbsDiff = AbsDiff; };
# 3268 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3269 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t RelDiff; RelDiff = (AbsDiff / domain.e[k*edgeElems+j]) ;
# 3270 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3271 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (MaxRelDiff <RelDiff) {MaxRelDiff = RelDiff; };
# 3272 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3273 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3274 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3275 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("   Testing Plane 0 of Energy Array:\n");
# 3276 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("        MaxAbsDiff   = %12.6e\n", MaxAbsDiff );
# 3277 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("        TotalAbsDiff = %12.6e\n", TotalAbsDiff );
# 3278 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("        MaxRelDiff   = %12.6e\n\n", MaxRelDiff );
# 3279 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3280 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  int ____chimes_ret_var_8; ; ____chimes_ret_var_8 = (0); rm_stack(false, 0UL, "main", (int *)0x0, ____alias_loc_id_6, ____chimes_did_disable51, false); return ____chimes_ret_var_8; ;
# 3281 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "main", (int *)0x0, ____alias_loc_id_6, ____chimes_did_disable51, false); }
# 103 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
inline real8 SQRT_quick(real8 arg) {const int ____chimes_did_disable0 = new_stack((void *)(&SQRT), "SQRT", &____must_manage_SQRT, 1, 0, (size_t)(0UL)) ; ; ; double ____chimes_ret_var_0; ; ____chimes_ret_var_0 = (sqrt(arg)); rm_stack(false, 0UL, "SQRT", &____must_manage_SQRT, ____alias_loc_id_15, ____chimes_did_disable0, false); return ____chimes_ret_var_0; ; rm_stack(false, 0UL, "SQRT", &____must_manage_SQRT, ____alias_loc_id_15, ____chimes_did_disable0, false); }

inline real8 SQRT(real8 arg) { return (____chimes_replaying ? SQRT_resumable(arg) : SQRT_quick(arg)); }
# 105 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
inline real8 CBRT_quick(real8 arg) {const int ____chimes_did_disable1 = new_stack((void *)(&CBRT), "CBRT", &____must_manage_CBRT, 1, 0, (size_t)(0UL)) ; ; ; double ____chimes_ret_var_1; ; ____chimes_ret_var_1 = (cbrt(arg)); rm_stack(false, 0UL, "CBRT", &____must_manage_CBRT, ____alias_loc_id_44, ____chimes_did_disable1, false); return ____chimes_ret_var_1; ; rm_stack(false, 0UL, "CBRT", &____must_manage_CBRT, ____alias_loc_id_44, ____chimes_did_disable1, false); }

inline real8 CBRT(real8 arg) { return (____chimes_replaying ? CBRT_resumable(arg) : CBRT_quick(arg)); }
# 107 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
inline real8 FABS_quick(real8 arg) {const int ____chimes_did_disable2 = new_stack((void *)(&FABS), "FABS", &____must_manage_FABS, 1, 0, (size_t)(0UL)) ; ; ; double ____chimes_ret_var_2; ; ____chimes_ret_var_2 = (fabs(arg)); rm_stack(false, 0UL, "FABS", &____must_manage_FABS, ____alias_loc_id_9, ____chimes_did_disable2, false); return ____chimes_ret_var_2; ; rm_stack(false, 0UL, "FABS", &____must_manage_FABS, ____alias_loc_id_9, ____chimes_did_disable2, false); }

inline real8 FABS(real8 arg) { return (____chimes_replaying ? FABS_resumable(arg) : FABS_quick(arg)); }
# 374 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateNodalPersistent_quick(Domain *self, size_t size)
# 375 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable3 = new_stack((void *)(&AllocateNodalPersistent), "AllocateNodalPersistent", &____must_manage_AllocateNodalPersistent, 2, 0, (size_t)(2224956529753665263UL), (size_t)(0UL)) ; ; ;
# 376 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->x = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 377 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->y = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 378 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->z = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 379 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 380 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->xd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 381 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->yd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 382 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->zd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 383 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->xd, 0x00, sizeof(Real_t) * size);
# 384 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->yd, 0x00, sizeof(Real_t) * size);
# 385 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->zd, 0x00, sizeof(Real_t) * size);
# 386 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 387 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->xdd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 388 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->ydd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 389 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->zdd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 390 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->xdd, 0x00, sizeof(Real_t) * size);
# 391 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->ydd, 0x00, sizeof(Real_t) * size);
# 392 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->zdd, 0x00, sizeof(Real_t) * size);
# 393 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 394 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->fx = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 395 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->fy = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->fz = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 397 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 398 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodalMass = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 399 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->nodalMass, 0x00, sizeof(Real_t) * size);
# 400 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "AllocateNodalPersistent", &____must_manage_AllocateNodalPersistent, ____alias_loc_id_1, ____chimes_did_disable3, false); }

void AllocateNodalPersistent(Domain *self, size_t size) { (____chimes_replaying ? AllocateNodalPersistent_resumable(self, size) : AllocateNodalPersistent_quick(self, size)); }
# 402 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateElemPersistent_quick(Domain *self, size_t size)
# 403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable4 = new_stack((void *)(&AllocateElemPersistent), "AllocateElemPersistent", &____must_manage_AllocateElemPersistent, 2, 0, (size_t)(2224956529753665462UL), (size_t)(0UL)) ; ; ;
# 404 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->matElemlist = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 405 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodelist = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * 8 * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * 8*size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 406 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 407 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->lxim = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 408 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->lxip = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 409 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->letam = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 410 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->letap = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 411 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->lzetam = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 412 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->lzetap = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 413 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 414 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->elemBC = (Int_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Int_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Int_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 415 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 416 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->e = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 417 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->e, 0x00, sizeof(Real_t) * size);
# 418 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 419 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->p = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 420 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->p, 0x00, sizeof(Real_t) * size);
# 421 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->q = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 422 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->ql = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 423 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->qq = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 424 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 425 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->v = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 426 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { int i; for ( i = (0) ;i < size; i++) { (self->v)[i] = 1.0; } };
# 427 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->volo = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 428 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delv = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 429 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->vdov = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 430 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 431 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->arealg = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 432 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->ss = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 434 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 435 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->elemMass = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 436 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "AllocateElemPersistent", &____must_manage_AllocateElemPersistent, ____alias_loc_id_2, ____chimes_did_disable4, false); }

void AllocateElemPersistent(Domain *self, size_t size) { (____chimes_replaying ? AllocateElemPersistent_resumable(self, size) : AllocateElemPersistent_quick(self, size)); }
# 440 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateElemTemporary_quick(Domain *self, size_t size)
# 441 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable5 = new_stack((void *)(&AllocateElemTemporary), "AllocateElemTemporary", &____must_manage_AllocateElemTemporary, 2, 0, (size_t)(2224956529753665541UL), (size_t)(0UL)) ; ; ;
# 442 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->dxx = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 443 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->dyy = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 444 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->dzz = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 445 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delv_xi = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 447 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delv_eta = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 448 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delv_zeta = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 449 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 450 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delx_xi = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 451 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delx_eta = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 452 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delx_zeta = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 453 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 454 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->vnew = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 455 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "AllocateElemTemporary", &____must_manage_AllocateElemTemporary, ____alias_loc_id_3, ____chimes_did_disable5, false); }

void AllocateElemTemporary(Domain *self, size_t size) { (____chimes_replaying ? AllocateElemTemporary_resumable(self, size) : AllocateElemTemporary_quick(self, size)); }
# 457 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateNodesets_quick(Domain *self, size_t size)
# 458 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable6 = new_stack((void *)(&AllocateNodesets), "AllocateNodesets", &____must_manage_AllocateNodesets, 2, 0, (size_t)(2224956529753665571UL), (size_t)(0UL)) ; ; ;
# 459 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->symmX = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665551UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 460 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->symmY = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665551UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 461 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->symmZ = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665551UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 462 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "AllocateNodesets", &____must_manage_AllocateNodesets, ____alias_loc_id_4, ____chimes_did_disable6, false); }

void AllocateNodesets(Domain *self, size_t size) { (____chimes_replaying ? AllocateNodesets_resumable(self, size) : AllocateNodesets_quick(self, size)); }
# 464 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateNodeElemIndexes_quick(Domain *self)
# 465 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable7 = new_stack((void *)(&AllocateNodeElemIndexes), "AllocateNodeElemIndexes", &____must_manage_AllocateNodeElemIndexes, 1, 0, (size_t)(2224956529753665893UL)) ; ; ;
# 466 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t m; ;
# 467 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t numElem; numElem = (self->numElem) ;
# 468 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t numNode; numNode = (self->numNode) ;
# 469 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 470 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodeElemCount = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((numNode * sizeof(Index_t)) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, numNode * sizeof(Index_t), 2224956529753665656UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 472 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 473 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { Index_t i; for ( i = (0) ;i<numNode;++i) {
# 474 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        (self->nodeElemCount)[i]=0;
# 475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } }
# 476 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 477 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { Index_t i; for ( i = (0) ; i<numElem; ++i) {
# 478 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Index_t *nl; nl = (self->nodelist + (8 * i)) ;
# 479 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { Index_t j; for ( j = (0) ; j < 8; ++j) {
# 480 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            ++(self->nodeElemCount[nl[j]]);
# 481 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 482 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } }
# 483 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 484 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodeElemStart = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * numNode) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * numNode, 2224956529753665656UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 485 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 486 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodeElemStart[0]=0;
# 487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 488 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { Index_t i; for ( i = (1) ; i < numNode; ++i) {
# 489 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        self->nodeElemStart[i] = self->nodeElemStart[i-1] + self->nodeElemCount[i-1] ;
# 490 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } }
# 491 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 492 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->cornerListSize = (self->nodeElemStart[numNode-1] +
# 493 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                self->nodeElemCount[numNode-1]);
# 494 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodeElemCornerList = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * self->cornerListSize) + sizeof(void *)); ; malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * self->cornerListSize, 2224956529753665656UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 495 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 496 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { Index_t i; for ( i = (0) ; i < numNode; ++i) {
# 497 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        (self->nodeElemCount)[i]=0;
# 498 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } }
# 499 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 500 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { Index_t i; for ( i = (0) ; i < numElem; ++i) {
# 501 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Index_t *nl; nl = (self->nodelist + (8 * i)) ;
# 502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { Index_t j; for ( j = (0) ; j < 8; ++j) {
# 503 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             Index_t m; m = (nl[j]) ;
# 504 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             Index_t k; k = (i*8 + j) ;
# 505 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             Index_t offset; offset = (self->nodeElemStart[m]+self->nodeElemCount[m]) ;
# 506 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 507 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            self->nodeElemCornerList[offset] = k;
# 508 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            ++((self->nodeElemCount)[m]);
# 509 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 510 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } }
# 511 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 512 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t clSize; clSize = (self->cornerListSize) ;
# 513 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { Index_t i; for ( i = (0) ; i < clSize; ++i) {
# 514 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Index_t clv; clv = (self->nodeElemCornerList[i]) ;
# 515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        if ((clv < 0) || (clv > numElem*8)) {
# 516 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            fprintf(stderr,
# 517 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                    "AllocateNodeElemIndexes(): nodeElemCornerList entry out of range!\n");
# 518 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            exit(1);
# 519 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        }
# 520 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } }
# 521 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "AllocateNodeElemIndexes", &____must_manage_AllocateNodeElemIndexes, ____alias_loc_id_5, ____chimes_did_disable7, false); }

void AllocateNodeElemIndexes(Domain *self) { (____chimes_replaying ? AllocateNodeElemIndexes_resumable(self) : AllocateNodeElemIndexes_quick(self)); }
# 552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 553 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void TimeIncrement_quick()
# 554 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable8 = new_stack((void *)(&TimeIncrement), "TimeIncrement", &____must_manage_TimeIncrement, 0, 0) ; ; ;
# 555 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t targetdt; targetdt = (domain.stoptime - domain.time) ;
# 556 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 557 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if ((domain.dtfixed <= (0.0)) && (domain.cycle != 0)) {
# 558 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ratio; ;
# 559 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t olddt; olddt = (domain.deltatime) ;
# 560 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 561 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 562 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t newdt; newdt = (Real_t(1.0e+20)) ;
# 563 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (domain.dtcourant < newdt) {
# 564 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   newdt = domain.dtcourant / Real_t(2.0) ;
# 565 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 566 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (domain.dthydro < newdt) {
# 567 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   newdt = domain.dthydro * Real_t(2.0) / Real_t(3.0) ;
# 568 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 569 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 570 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ratio = newdt / olddt ;
# 571 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (ratio >= Real_t(1.0)) {
# 572 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (ratio < domain.deltatimemultlb) {{
# 573 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    newdt = olddt ;
# 574 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }; } else if (ratio > domain.deltatimemultub) {
# 576 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    newdt = olddt*domain.deltatimemultub ;
# 577 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 578 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 580 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (newdt > domain.dtmax) {
# 581 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   newdt = domain.dtmax ;
# 582 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 583 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.deltatime = newdt ;
# 584 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 585 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 586 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 587 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if ((targetdt > domain.deltatime) &&
# 588 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  (targetdt < (Real_t(4.0) * domain.deltatime / Real_t(3.0))) ) {
# 589 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  targetdt = Real_t(2.0) * domain.deltatime / Real_t(3.0) ;
# 590 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 591 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 592 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (targetdt < domain.deltatime) {
# 593 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.deltatime = targetdt ;
# 594 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 595 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 596 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.time += domain.deltatime ;
# 597 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 ++domain.cycle ;
# 599 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "TimeIncrement", &____must_manage_TimeIncrement, ____alias_loc_id_8, ____chimes_did_disable8, false); }

static inline
# 553 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void TimeIncrement() { (____chimes_replaying ? TimeIncrement_resumable() : TimeIncrement_quick()); }
# 601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 602 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void InitStressTermsForElems_quick(Index_t numElem,
# 603 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                             Real_t *sigxx, Real_t *sigyy, Real_t *sigzz)
# 604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable9 = new_stack((void *)(&InitStressTermsForElems), "InitStressTermsForElems", &____must_manage_InitStressTermsForElems, 4, 0, (size_t)(0UL), (size_t)(2224956529753673607UL), (size_t)(2224956529753673608UL), (size_t)(2224956529753673609UL)) ; ; ;
# 605 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 606 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 607 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_0: bool ____chimes_disable0 = disable_current_thread(); void *____chimes_parent_ctx1 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth0 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth0 = get_thread_stack_depth(); size_t ____chimes_region_id0; unsigned ____chimes_parent_thread0 = entering_omp_parallel(0, &____chimes_region_id0, 1, &numElem); int ____chimes_first_iter0 = 1;
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem) firstprivate(____chimes_first_iter0)
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 609 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < numElem ; ++i){ { if (____chimes_first_iter0) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread0, ____chimes_parent_ctx1, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth0, ____chimes_region_id0, 1, &numElem); ____chimes_first_iter0 = 0; } {
# 610 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  sigxx[i] = sigyy[i] = sigzz[i] = - domain.p[i] - domain.q[i];
# 611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth0, ____chimes_region_id0, 1); reenable_current_thread(____chimes_disable0); }
# 612 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "InitStressTermsForElems", &____must_manage_InitStressTermsForElems, ____alias_loc_id_38, ____chimes_did_disable9, false); }

static inline
# 602 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void InitStressTermsForElems(Index_t numElem,
# 603 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                             Real_t *sigxx, Real_t *sigyy, Real_t *sigzz) { (____chimes_replaying ? InitStressTermsForElems_resumable(numElem, sigxx, sigyy, sigzz) : InitStressTermsForElems_quick(numElem, sigxx, sigyy, sigzz)); }
# 614 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 615 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemShapeFunctionDerivatives_quick( const Real_t* const x,
# 616 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           const Real_t* const y,
# 617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           const Real_t* const z,
# 618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           Real_t b[][8],
# 619 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           Real_t* const volume )
# 620 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable10 = new_stack((void *)(&CalcElemShapeFunctionDerivatives), "CalcElemShapeFunctionDerivatives", &____must_manage_CalcElemShapeFunctionDerivatives, 5, 0, (size_t)(2224956529753672372UL), (size_t)(2224956529753672373UL), (size_t)(2224956529753672374UL), (size_t)(2224956529753672375UL), (size_t)(2224956529753672376UL)) ; ; ;
# 621 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x0; x0 = (x[0]) ; Real_t x1; x1 = (x[1]) ;
# 622 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x2; x2 = (x[2]) ; Real_t x3; x3 = (x[3]) ;
# 623 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x4; x4 = (x[4]) ; Real_t x5; x5 = (x[5]) ;
# 624 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x6; x6 = (x[6]) ; Real_t x7; x7 = (x[7]) ;
# 625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 626 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y0; y0 = (y[0]) ; Real_t y1; y1 = (y[1]) ;
# 627 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y2; y2 = (y[2]) ; Real_t y3; y3 = (y[3]) ;
# 628 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y4; y4 = (y[4]) ; Real_t y5; y5 = (y[5]) ;
# 629 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y6; y6 = (y[6]) ; Real_t y7; y7 = (y[7]) ;
# 630 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z0; z0 = (z[0]) ; Real_t z1; z1 = (z[1]) ;
# 632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z2; z2 = (z[2]) ; Real_t z3; z3 = (z[3]) ;
# 633 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z4; z4 = (z[4]) ; Real_t z5; z5 = (z[5]) ;
# 634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z6; z6 = (z[6]) ; Real_t z7; z7 = (z[7]) ;
# 635 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 636 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t fjxxi; Real_t fjxet; Real_t fjxze; ;
# 637 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t fjyxi; Real_t fjyet; Real_t fjyze; ;
# 638 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t fjzxi; Real_t fjzet; Real_t fjzze; ;
# 639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t cjxxi; Real_t cjxet; Real_t cjxze; ;
# 640 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t cjyxi; Real_t cjyet; Real_t cjyze; ;
# 641 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t cjzxi; Real_t cjzet; Real_t cjzze; ;
# 642 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjxxi = .125 * ( (x6-x0) + (x5-x3) - (x7-x1) - (x4-x2) );
# 644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjxet = .125 * ( (x6-x0) - (x5-x3) + (x7-x1) - (x4-x2) );
# 645 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjxze = .125 * ( (x6-x0) + (x5-x3) + (x7-x1) + (x4-x2) );
# 646 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 647 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjyxi = .125 * ( (y6-y0) + (y5-y3) - (y7-y1) - (y4-y2) );
# 648 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjyet = .125 * ( (y6-y0) - (y5-y3) + (y7-y1) - (y4-y2) );
# 649 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjyze = .125 * ( (y6-y0) + (y5-y3) + (y7-y1) + (y4-y2) );
# 650 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 651 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjzxi = .125 * ( (z6-z0) + (z5-z3) - (z7-z1) - (z4-z2) );
# 652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjzet = .125 * ( (z6-z0) - (z5-z3) + (z7-z1) - (z4-z2) );
# 653 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjzze = .125 * ( (z6-z0) + (z5-z3) + (z7-z1) + (z4-z2) );
# 654 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 656 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjxxi = (fjyet * fjzze) - (fjzet * fjyze);
# 657 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjxet = - (fjyxi * fjzze) + (fjzxi * fjyze);
# 658 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjxze = (fjyxi * fjzet) - (fjzxi * fjyet);
# 659 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 660 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjyxi = - (fjxet * fjzze) + (fjzet * fjxze);
# 661 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjyet = (fjxxi * fjzze) - (fjzxi * fjxze);
# 662 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjyze = - (fjxxi * fjzet) + (fjzxi * fjxet);
# 663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 664 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjzxi = (fjxet * fjyze) - (fjyet * fjxze);
# 665 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjzet = - (fjxxi * fjyze) + (fjyxi * fjxze);
# 666 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjzze = (fjxxi * fjyet) - (fjyxi * fjxet);
# 667 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 668 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 669 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 670 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 671 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 672 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][0] = - cjxxi - cjxet - cjxze;
# 673 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][1] = cjxxi - cjxet - cjxze;
# 674 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][2] = cjxxi + cjxet - cjxze;
# 675 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][3] = - cjxxi + cjxet - cjxze;
# 676 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][4] = -b[0][2];
# 677 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][5] = -b[0][3];
# 678 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][6] = -b[0][0];
# 679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][7] = -b[0][1];
# 680 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 681 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][0] = - cjyxi - cjyet - cjyze;
# 682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][1] = cjyxi - cjyet - cjyze;
# 683 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][2] = cjyxi + cjyet - cjyze;
# 684 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][3] = - cjyxi + cjyet - cjyze;
# 685 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][4] = -b[1][2];
# 686 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][5] = -b[1][3];
# 687 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][6] = -b[1][0];
# 688 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][7] = -b[1][1];
# 689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 690 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][0] = - cjzxi - cjzet - cjzze;
# 691 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][1] = cjzxi - cjzet - cjzze;
# 692 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][2] = cjzxi + cjzet - cjzze;
# 693 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][3] = - cjzxi + cjzet - cjzze;
# 694 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][4] = -b[2][2];
# 695 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][5] = -b[2][3];
# 696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][6] = -b[2][0];
# 697 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][7] = -b[2][1];
# 698 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 699 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 700 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *volume = Real_t(8.) * ( fjxet * cjxet + fjyet * cjyet + fjzet * cjzet);
# 701 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemShapeFunctionDerivatives", &____must_manage_CalcElemShapeFunctionDerivatives, ____alias_loc_id_29, ____chimes_did_disable10, false); }

static inline
# 615 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemShapeFunctionDerivatives( const Real_t* const x,
# 616 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           const Real_t* const y,
# 617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           const Real_t* const z,
# 618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           Real_t b[][8],
# 619 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           Real_t* const volume ) { (____chimes_replaying ? CalcElemShapeFunctionDerivatives_resumable(x, y, z, b, volume) : CalcElemShapeFunctionDerivatives_quick(x, y, z, b, volume)); }
# 703 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 704 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void SumElemFaceNormal_quick(Real_t *normalX0, Real_t *normalY0, Real_t *normalZ0,
# 705 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       Real_t *normalX1, Real_t *normalY1, Real_t *normalZ1,
# 706 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       Real_t *normalX2, Real_t *normalY2, Real_t *normalZ2,
# 707 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       Real_t *normalX3, Real_t *normalY3, Real_t *normalZ3,
# 708 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x0, const Real_t y0, const Real_t z0,
# 709 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x1, const Real_t y1, const Real_t z1,
# 710 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x2, const Real_t y2, const Real_t z2,
# 711 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x3, const Real_t y3, const Real_t z3)
# 712 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable11 = new_stack((void *)(&SumElemFaceNormal), "SumElemFaceNormal", &____must_manage_SumElemFaceNormal, 24, 0, (size_t)(2224956529753679568UL), (size_t)(2224956529753679569UL), (size_t)(2224956529753679570UL), (size_t)(2224956529753679571UL), (size_t)(2224956529753679572UL), (size_t)(2224956529753679573UL), (size_t)(2224956529753679574UL), (size_t)(2224956529753679575UL), (size_t)(2224956529753679576UL), (size_t)(2224956529753679577UL), (size_t)(2224956529753679578UL), (size_t)(2224956529753679579UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL)) ; ; ;
# 713 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t bisectX0; bisectX0 = (Real_t(0.5) * (x3 + x2 - x1 - x0)) ;
# 714 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t bisectY0; bisectY0 = (Real_t(0.5) * (y3 + y2 - y1 - y0)) ;
# 715 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t bisectZ0; bisectZ0 = (Real_t(0.5) * (z3 + z2 - z1 - z0)) ;
# 716 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t bisectX1; bisectX1 = (Real_t(0.5) * (x2 + x1 - x3 - x0)) ;
# 717 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t bisectY1; bisectY1 = (Real_t(0.5) * (y2 + y1 - y3 - y0)) ;
# 718 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t bisectZ1; bisectZ1 = (Real_t(0.5) * (z2 + z1 - z3 - z0)) ;
# 719 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t areaX; areaX = (Real_t(0.25) * (bisectY0 * bisectZ1 - bisectZ0 * bisectY1)) ;
# 720 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t areaY; areaY = (Real_t(0.25) * (bisectZ0 * bisectX1 - bisectX0 * bisectZ1)) ;
# 721 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t areaZ; areaZ = (Real_t(0.25) * (bisectX0 * bisectY1 - bisectY0 * bisectX1)) ;
# 722 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 723 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalX0 += areaX;
# 724 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalX1 += areaX;
# 725 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalX2 += areaX;
# 726 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalX3 += areaX;
# 727 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 728 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalY0 += areaY;
# 729 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalY1 += areaY;
# 730 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalY2 += areaY;
# 731 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalY3 += areaY;
# 732 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 733 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalZ0 += areaZ;
# 734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalZ1 += areaZ;
# 735 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalZ2 += areaZ;
# 736 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalZ3 += areaZ;
# 737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "SumElemFaceNormal", &____must_manage_SumElemFaceNormal, ____alias_loc_id_49, ____chimes_did_disable11, false); }

static inline
# 704 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void SumElemFaceNormal(Real_t *normalX0, Real_t *normalY0, Real_t *normalZ0,
# 705 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       Real_t *normalX1, Real_t *normalY1, Real_t *normalZ1,
# 706 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       Real_t *normalX2, Real_t *normalY2, Real_t *normalZ2,
# 707 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       Real_t *normalX3, Real_t *normalY3, Real_t *normalZ3,
# 708 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x0, const Real_t y0, const Real_t z0,
# 709 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x1, const Real_t y1, const Real_t z1,
# 710 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x2, const Real_t y2, const Real_t z2,
# 711 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x3, const Real_t y3, const Real_t z3) { (____chimes_replaying ? SumElemFaceNormal_resumable(normalX0, normalY0, normalZ0, normalX1, normalY1, normalZ1, normalX2, normalY2, normalZ2, normalX3, normalY3, normalZ3, x0, y0, z0, x1, y1, z1, x2, y2, z2, x3, y3, z3) : SumElemFaceNormal_quick(normalX0, normalY0, normalZ0, normalX1, normalY1, normalZ1, normalX2, normalY2, normalZ2, normalX3, normalY3, normalZ3, x0, y0, z0, x1, y1, z1, x2, y2, z2, x3, y3, z3)); }
# 739 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 740 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemNodeNormals_quick(Real_t pfx[8],
# 741 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         Real_t pfy[8],
# 742 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         Real_t pfz[8],
# 743 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         const Real_t x[8],
# 744 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         const Real_t y[8],
# 745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         const Real_t z[8])
# 746 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable12 = new_stack((void *)(&CalcElemNodeNormals), "CalcElemNodeNormals", &____must_manage_CalcElemNodeNormals, 6, 0, (size_t)(2224956529753678965UL), (size_t)(2224956529753678966UL), (size_t)(2224956529753678967UL), (size_t)(2224956529753678968UL), (size_t)(2224956529753678969UL), (size_t)(2224956529753678970UL)) ; ; ;
# 747 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i < 8 ; ++i) {
# 748 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  pfx[i] = Real_t(0.0);
# 749 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  pfy[i] = Real_t(0.0);
# 750 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  pfz[i] = Real_t(0.0);
# 751 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 752 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 753 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("SumElemFaceNormal", 0); SumElemFaceNormal_npm(&pfx[0], &pfy[0], &pfz[0], &pfx[1], &pfy[1], &pfz[1], &pfx[2], &pfy[2], &pfz[2], &pfx[3], &pfy[3], &pfz[3], x[0], y[0], z[0], x[1], y[1], z[1], x[2], y[2], z[2], x[3], y[3], z[3]); });
# 759 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 760 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("SumElemFaceNormal", 0); SumElemFaceNormal_npm(&pfx[0], &pfy[0], &pfz[0], &pfx[4], &pfy[4], &pfz[4], &pfx[5], &pfy[5], &pfz[5], &pfx[1], &pfy[1], &pfz[1], x[0], y[0], z[0], x[4], y[4], z[4], x[5], y[5], z[5], x[1], y[1], z[1]); });
# 766 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 767 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: ({ calling_npm("SumElemFaceNormal", 0); SumElemFaceNormal_npm(&pfx[1], &pfy[1], &pfz[1], &pfx[5], &pfy[5], &pfz[5], &pfx[6], &pfy[6], &pfz[6], &pfx[2], &pfy[2], &pfz[2], x[1], y[1], z[1], x[5], y[5], z[5], x[6], y[6], z[6], x[2], y[2], z[2]); });
# 773 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 774 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: ({ calling_npm("SumElemFaceNormal", 0); SumElemFaceNormal_npm(&pfx[2], &pfy[2], &pfz[2], &pfx[6], &pfy[6], &pfz[6], &pfx[7], &pfy[7], &pfz[7], &pfx[3], &pfy[3], &pfz[3], x[2], y[2], z[2], x[6], y[6], z[6], x[7], y[7], z[7], x[3], y[3], z[3]); });
# 780 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 781 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_4: ({ calling_npm("SumElemFaceNormal", 0); SumElemFaceNormal_npm(&pfx[3], &pfy[3], &pfz[3], &pfx[7], &pfy[7], &pfz[7], &pfx[4], &pfy[4], &pfz[4], &pfx[0], &pfy[0], &pfz[0], x[3], y[3], z[3], x[7], y[7], z[7], x[4], y[4], z[4], x[0], y[0], z[0]); });
# 787 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 788 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_5: ({ calling_npm("SumElemFaceNormal", 0); SumElemFaceNormal_npm(&pfx[4], &pfy[4], &pfz[4], &pfx[7], &pfy[7], &pfz[7], &pfx[6], &pfy[6], &pfz[6], &pfx[5], &pfy[5], &pfz[5], x[4], y[4], z[4], x[7], y[7], z[7], x[6], y[6], z[6], x[5], y[5], z[5]); });
# 794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemNodeNormals", &____must_manage_CalcElemNodeNormals, ____alias_loc_id_47, ____chimes_did_disable12, false); }

static inline
# 740 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemNodeNormals(Real_t pfx[8],
# 741 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         Real_t pfy[8],
# 742 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         Real_t pfz[8],
# 743 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         const Real_t x[8],
# 744 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         const Real_t y[8],
# 745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         const Real_t z[8]) { (____chimes_replaying ? CalcElemNodeNormals_resumable(pfx, pfy, pfz, x, y, z) : CalcElemNodeNormals_quick(pfx, pfy, pfz, x, y, z)); }
# 796 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 797 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void SumElemStressesToNodeForces_quick( const Real_t B[][8],
# 798 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t stress_xx,
# 799 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t stress_yy,
# 800 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t stress_zz,
# 801 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Real_t* const fx,
# 802 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Real_t* const fy,
# 803 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Real_t* const fz )
# 804 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable13 = new_stack((void *)(&SumElemStressesToNodeForces), "SumElemStressesToNodeForces", &____must_manage_SumElemStressesToNodeForces, 7, 0, (size_t)(2224956529753679329UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(2224956529753679333UL), (size_t)(2224956529753679334UL), (size_t)(2224956529753679335UL)) ; ; ;
# 805 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfx0; pfx0 = (B[0][0]) ; Real_t pfx1; pfx1 = (B[0][1]) ;
# 806 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfx2; pfx2 = (B[0][2]) ; Real_t pfx3; pfx3 = (B[0][3]) ;
# 807 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfx4; pfx4 = (B[0][4]) ; Real_t pfx5; pfx5 = (B[0][5]) ;
# 808 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfx6; pfx6 = (B[0][6]) ; Real_t pfx7; pfx7 = (B[0][7]) ;
# 809 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 810 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfy0; pfy0 = (B[1][0]) ; Real_t pfy1; pfy1 = (B[1][1]) ;
# 811 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfy2; pfy2 = (B[1][2]) ; Real_t pfy3; pfy3 = (B[1][3]) ;
# 812 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfy4; pfy4 = (B[1][4]) ; Real_t pfy5; pfy5 = (B[1][5]) ;
# 813 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfy6; pfy6 = (B[1][6]) ; Real_t pfy7; pfy7 = (B[1][7]) ;
# 814 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 815 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfz0; pfz0 = (B[2][0]) ; Real_t pfz1; pfz1 = (B[2][1]) ;
# 816 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfz2; pfz2 = (B[2][2]) ; Real_t pfz3; pfz3 = (B[2][3]) ;
# 817 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfz4; pfz4 = (B[2][4]) ; Real_t pfz5; pfz5 = (B[2][5]) ;
# 818 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfz6; pfz6 = (B[2][6]) ; Real_t pfz7; pfz7 = (B[2][7]) ;
# 819 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 820 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[0] = -( stress_xx * pfx0 );
# 821 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[1] = -( stress_xx * pfx1 );
# 822 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[2] = -( stress_xx * pfx2 );
# 823 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[3] = -( stress_xx * pfx3 );
# 824 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[4] = -( stress_xx * pfx4 );
# 825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[5] = -( stress_xx * pfx5 );
# 826 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[6] = -( stress_xx * pfx6 );
# 827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[7] = -( stress_xx * pfx7 );
# 828 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 829 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[0] = -( stress_yy * pfy0 );
# 830 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[1] = -( stress_yy * pfy1 );
# 831 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[2] = -( stress_yy * pfy2 );
# 832 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[3] = -( stress_yy * pfy3 );
# 833 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[4] = -( stress_yy * pfy4 );
# 834 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[5] = -( stress_yy * pfy5 );
# 835 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[6] = -( stress_yy * pfy6 );
# 836 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[7] = -( stress_yy * pfy7 );
# 837 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 838 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[0] = -( stress_zz * pfz0 );
# 839 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[1] = -( stress_zz * pfz1 );
# 840 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[2] = -( stress_zz * pfz2 );
# 841 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[3] = -( stress_zz * pfz3 );
# 842 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[4] = -( stress_zz * pfz4 );
# 843 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[5] = -( stress_zz * pfz5 );
# 844 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[6] = -( stress_zz * pfz6 );
# 845 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[7] = -( stress_zz * pfz7 );
# 846 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "SumElemStressesToNodeForces", &____must_manage_SumElemStressesToNodeForces, ____alias_loc_id_48, ____chimes_did_disable13, false); }

static inline
# 797 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void SumElemStressesToNodeForces( const Real_t B[][8],
# 798 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t stress_xx,
# 799 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t stress_yy,
# 800 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t stress_zz,
# 801 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Real_t* const fx,
# 802 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Real_t* const fy,
# 803 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Real_t* const fz ) { (____chimes_replaying ? SumElemStressesToNodeForces_resumable(B, stress_xx, stress_yy, stress_zz, fx, fy, fz) : SumElemStressesToNodeForces_quick(B, stress_xx, stress_yy, stress_zz, fx, fy, fz)); }
# 848 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 849 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void IntegrateStressForElems_quick( Index_t numElem,
# 850 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Real_t *sigxx, Real_t *sigyy, Real_t *sigzz,
# 851 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Real_t *determ)
# 852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable14 = new_stack((void *)(&IntegrateStressForElems), "IntegrateStressForElems", &____must_manage_IntegrateStressForElems, 5, 0, (size_t)(0UL), (size_t)(2224956529753673920UL), (size_t)(2224956529753673921UL), (size_t)(2224956529753673922UL), (size_t)(2224956529753673923UL)) ; Real_t z_local[8];
# 852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t y_local[8];
# 852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t x_local[8];
# 852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t B[3][8];
# 852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (____must_checkpoint_IntegrateStressForElems_B_0) { register_stack_vars(1, "IntegrateStressForElems|B|0", &____must_checkpoint_IntegrateStressForElems_B_0, "[3 x [8 x double]]", (void *)(B), (size_t)192, 0, 0, 0); } ; ;
# 853 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem8; numElem8 = (numElem * 8) ;
# 854 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fx_elem; fx_elem = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753673654UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 855 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fy_elem; fy_elem = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753673678UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 856 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fz_elem; fz_elem = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753673685UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 857 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((fx_elem) ? static_cast<void> (0) : __assert_fail ("fx_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 857, __PRETTY_FUNCTION__)); ((fy_elem) ? static_cast<void> (0) : __assert_fail ("fy_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 857, __PRETTY_FUNCTION__)); ((fz_elem) ? static_cast<void> (0) : __assert_fail ("fz_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 857, __PRETTY_FUNCTION__));
# 858 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 859 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_3: bool ____chimes_disable1 = disable_current_thread(); void *____chimes_parent_ctx2 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth1 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth1 = get_thread_stack_depth(); size_t ____chimes_region_id1; unsigned ____chimes_parent_thread1 = entering_omp_parallel(3, &____chimes_region_id1, 5, &B, &numElem, &x_local, &y_local, &z_local); int ____chimes_first_iter1 = 1;
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem) firstprivate(____chimes_first_iter1) firstprivate(B) firstprivate(x_local) firstprivate(y_local) firstprivate(z_local)
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 861 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for( Index_t k=0 ; k<numElem ; ++k )
# 862 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { { if (____chimes_first_iter1) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread1, ____chimes_parent_ctx2, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth1, ____chimes_region_id1, 5, &B, &numElem, &x_local, &y_local, &z_local); ____chimes_first_iter1 = 0; } {
# 863 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 865 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 866 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 867 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 868 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t *elemNodes; elemNodes = (domain.nodelist + (8 * k)) ;
# 869 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 870 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 871 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t lnode; for( lnode = (0) ; lnode<8 ; ++lnode )
# 872 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 873 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t gnode; gnode = (elemNodes[lnode]) ;
# 874 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x_local[lnode] = domain.x[gnode];
# 875 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y_local[lnode] = domain.y[gnode];
# 876 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z_local[lnode] = domain.z[gnode];
# 877 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 878 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 879 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 880 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: ({ calling_npm("CalcElemShapeFunctionDerivatives", 0); CalcElemShapeFunctionDerivatives_npm(x_local, y_local, z_local, B, &determ[k]); });
# 882 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 883 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: ({ calling_npm("CalcElemNodeNormals", 0); CalcElemNodeNormals_npm(B[0], B[1], B[2], x_local, y_local, z_local); });
# 885 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 886 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: ({ calling_npm("SumElemStressesToNodeForces", 0); SumElemStressesToNodeForces_npm(B, sigxx[k], sigyy[k], sigzz[k], &fx_elem[k*8], &fy_elem[k*8], &fz_elem[k*8]); }) ;
# 899 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 899 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth1, ____chimes_region_id1, 1); reenable_current_thread(____chimes_disable1); }
# 900 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 901 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 {
# 902 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t numNode; numNode = (domain.numNode) ;
# 903 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_4: bool ____chimes_disable2 = disable_current_thread(); void *____chimes_parent_ctx3 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth2 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth2 = get_thread_stack_depth(); size_t ____chimes_region_id2; unsigned ____chimes_parent_thread2 = entering_omp_parallel(4, &____chimes_region_id2, 5, &B, &numNode, &x_local, &y_local, &z_local); int ____chimes_first_iter2 = 1;
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode) firstprivate(____chimes_first_iter2)
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 905 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for( Index_t gnode=0 ; gnode<numNode ; ++gnode )
# 906 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { { if (____chimes_first_iter2) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread2, ____chimes_parent_ctx3, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth2, ____chimes_region_id2, 5, &B, &numNode, &x_local, &y_local, &z_local); ____chimes_first_iter2 = 0; } {
# 907 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t count; count = (domain.nodeElemCount[gnode]) ;
# 908 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t start; start = (domain.nodeElemStart[gnode]) ;
# 909 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t fx; fx = (Real_t(0.0)) ;
# 910 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t fy; fy = (Real_t(0.0)) ;
# 911 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t fz; fz = (Real_t(0.0)) ;
# 912 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   { Index_t i; for ( i = (0) ; i < count ; ++i) {
# 913 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t elem; elem = (domain.nodeElemCornerList[start+i]) ;
# 914 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fx += fx_elem[elem] ;
# 915 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fy += fy_elem[elem] ;
# 916 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fz += fz_elem[elem] ;
# 917 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } }
# 918 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fx[gnode] = fx ;
# 919 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fy[gnode] = fy ;
# 920 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fz[gnode] = fz ;
# 921 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } } leaving_omp_parallel(____chimes_call_stack_depth2, ____chimes_region_id2, 1); reenable_current_thread(____chimes_disable2); }
# 922 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 923 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 924 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fz_elem) - sizeof(void *)), 2224956529753673685UL);free((((unsigned char *)fz_elem) - sizeof(void *))); }) ;
# 925 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fy_elem) - sizeof(void *)), 2224956529753673678UL);free((((unsigned char *)fy_elem) - sizeof(void *))); }) ;
# 926 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fx_elem) - sizeof(void *)), 2224956529753673654UL);free((((unsigned char *)fx_elem) - sizeof(void *))); }) ;
# 927 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "IntegrateStressForElems", &____must_manage_IntegrateStressForElems, ____alias_loc_id_39, ____chimes_did_disable14, false); }

static inline
# 849 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void IntegrateStressForElems( Index_t numElem,
# 850 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Real_t *sigxx, Real_t *sigyy, Real_t *sigzz,
# 851 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Real_t *determ) { (____chimes_replaying ? IntegrateStressForElems_resumable(numElem, sigxx, sigyy, sigzz, determ) : IntegrateStressForElems_quick(numElem, sigxx, sigyy, sigzz, determ)); }
# 930 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 931 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CollectDomainNodesToElemNodes_quick(const Index_t* elemToNode,
# 932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                   Real_t elemX[8],
# 933 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                   Real_t elemY[8],
# 934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                   Real_t elemZ[8])
# 935 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable15 = new_stack((void *)(&CollectDomainNodesToElemNodes), "CollectDomainNodesToElemNodes", &____must_manage_CollectDomainNodesToElemNodes, 4, 0, (size_t)(2224956529753674459UL), (size_t)(2224956529753674460UL), (size_t)(2224956529753674461UL), (size_t)(2224956529753674462UL)) ; ; ;
# 936 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd0i; nd0i = (elemToNode[0]) ;
# 937 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd1i; nd1i = (elemToNode[1]) ;
# 938 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd2i; nd2i = (elemToNode[2]) ;
# 939 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd3i; nd3i = (elemToNode[3]) ;
# 940 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd4i; nd4i = (elemToNode[4]) ;
# 941 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd5i; nd5i = (elemToNode[5]) ;
# 942 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd6i; nd6i = (elemToNode[6]) ;
# 943 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t nd7i; nd7i = (elemToNode[7]) ;
# 944 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 945 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[0] = domain.x[nd0i];
# 946 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[1] = domain.x[nd1i];
# 947 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[2] = domain.x[nd2i];
# 948 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[3] = domain.x[nd3i];
# 949 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[4] = domain.x[nd4i];
# 950 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[5] = domain.x[nd5i];
# 951 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[6] = domain.x[nd6i];
# 952 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[7] = domain.x[nd7i];
# 953 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 954 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[0] = domain.y[nd0i];
# 955 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[1] = domain.y[nd1i];
# 956 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[2] = domain.y[nd2i];
# 957 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[3] = domain.y[nd3i];
# 958 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[4] = domain.y[nd4i];
# 959 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[5] = domain.y[nd5i];
# 960 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[6] = domain.y[nd6i];
# 961 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[7] = domain.y[nd7i];
# 962 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 963 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[0] = domain.z[nd0i];
# 964 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[1] = domain.z[nd1i];
# 965 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[2] = domain.z[nd2i];
# 966 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[3] = domain.z[nd3i];
# 967 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[4] = domain.z[nd4i];
# 968 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[5] = domain.z[nd5i];
# 969 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[6] = domain.z[nd6i];
# 970 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[7] = domain.z[nd7i];
# 971 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 972 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CollectDomainNodesToElemNodes", &____must_manage_CollectDomainNodesToElemNodes, ____alias_loc_id_41, ____chimes_did_disable15, false); }

static inline
# 931 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CollectDomainNodesToElemNodes(const Index_t* elemToNode,
# 932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                   Real_t elemX[8],
# 933 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                   Real_t elemY[8],
# 934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                   Real_t elemZ[8]) { (____chimes_replaying ? CollectDomainNodesToElemNodes_resumable(elemToNode, elemX, elemY, elemZ) : CollectDomainNodesToElemNodes_quick(elemToNode, elemX, elemY, elemZ)); }
# 974 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 975 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void VoluDer_quick(const Real_t x0, const Real_t x1, const Real_t x2,
# 976 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t x3, const Real_t x4, const Real_t x5,
# 977 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t y0, const Real_t y1, const Real_t y2,
# 978 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t y3, const Real_t y4, const Real_t y5,
# 979 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t z0, const Real_t z1, const Real_t z2,
# 980 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t z3, const Real_t z4, const Real_t z5,
# 981 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             Real_t* dvdx, Real_t* dvdy, Real_t* dvdz)
# 982 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable16 = new_stack((void *)(&VoluDer), "VoluDer", &____must_manage_VoluDer, 21, 0, (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(2224956529753678550UL), (size_t)(2224956529753678551UL), (size_t)(2224956529753678552UL)) ; ; ;
# 983 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t twelfth; twelfth = (Real_t(1.0) / Real_t(12.0)) ;
# 984 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 985 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdx =
# 986 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y1 + y2) * (z0 + z1) - (y0 + y1) * (z1 + z2) +
# 987 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y0 + y4) * (z3 + z4) - (y3 + y4) * (z0 + z4) -
# 988 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y2 + y5) * (z3 + z5) + (y3 + y5) * (z2 + z5);
# 989 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdy =
# 990 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 - (x1 + x2) * (z0 + z1) + (x0 + x1) * (z1 + z2) -
# 991 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (x0 + x4) * (z3 + z4) + (x3 + x4) * (z0 + z4) +
# 992 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (x2 + x5) * (z3 + z5) - (x3 + x5) * (z2 + z5);
# 993 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 994 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdz =
# 995 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 - (y1 + y2) * (x0 + x1) + (y0 + y1) * (x1 + x2) -
# 996 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y0 + y4) * (x3 + x4) + (y3 + y4) * (x0 + x4) +
# 997 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y2 + y5) * (x3 + x5) - (y3 + y5) * (x2 + x5);
# 998 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 999 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdx *= twelfth;
# 1000 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdy *= twelfth;
# 1001 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdz *= twelfth;
# 1002 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "VoluDer", &____must_manage_VoluDer, ____alias_loc_id_46, ____chimes_did_disable16, false); }

static inline
# 975 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void VoluDer(const Real_t x0, const Real_t x1, const Real_t x2,
# 976 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t x3, const Real_t x4, const Real_t x5,
# 977 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t y0, const Real_t y1, const Real_t y2,
# 978 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t y3, const Real_t y4, const Real_t y5,
# 979 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t z0, const Real_t z1, const Real_t z2,
# 980 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t z3, const Real_t z4, const Real_t z5,
# 981 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             Real_t* dvdx, Real_t* dvdy, Real_t* dvdz) { (____chimes_replaying ? VoluDer_resumable(x0, x1, x2, x3, x4, x5, y0, y1, y2, y3, y4, y5, z0, z1, z2, z3, z4, z5, dvdx, dvdy, dvdz) : VoluDer_quick(x0, x1, x2, x3, x4, x5, y0, y1, y2, y3, y4, y5, z0, z1, z2, z3, z4, z5, dvdx, dvdy, dvdz)); }
# 1004 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1005 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemVolumeDerivative_quick(Real_t dvdx[8],
# 1006 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t dvdy[8],
# 1007 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t dvdz[8],
# 1008 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              const Real_t x[8],
# 1009 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              const Real_t y[8],
# 1010 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              const Real_t z[8])
# 1011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable17 = new_stack((void *)(&CalcElemVolumeDerivative), "CalcElemVolumeDerivative", &____must_manage_CalcElemVolumeDerivative, 6, 0, (size_t)(2224956529753674970UL), (size_t)(2224956529753674971UL), (size_t)(2224956529753674972UL), (size_t)(2224956529753674973UL), (size_t)(2224956529753674974UL), (size_t)(2224956529753674975UL)) ; ; ;
# 1012 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[1], x[2], x[3], x[4], x[5], x[7], y[1], y[2], y[3], y[4], y[5], y[7], z[1], z[2], z[3], z[4], z[5], z[7], &dvdx[0], &dvdy[0], &dvdz[0]); });
# 1016 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[0], x[1], x[2], x[7], x[4], x[6], y[0], y[1], y[2], y[7], y[4], y[6], z[0], z[1], z[2], z[7], z[4], z[6], &dvdx[3], &dvdy[3], &dvdz[3]); });
# 1020 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[3], x[0], x[1], x[6], x[7], x[5], y[3], y[0], y[1], y[6], y[7], y[5], z[3], z[0], z[1], z[6], z[7], z[5], &dvdx[2], &dvdy[2], &dvdz[2]); });
# 1024 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[2], x[3], x[0], x[5], x[6], x[4], y[2], y[3], y[0], y[5], y[6], y[4], z[2], z[3], z[0], z[5], z[6], z[4], &dvdx[1], &dvdy[1], &dvdz[1]); });
# 1028 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_4: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[7], x[6], x[5], x[0], x[3], x[1], y[7], y[6], y[5], y[0], y[3], y[1], z[7], z[6], z[5], z[0], z[3], z[1], &dvdx[4], &dvdy[4], &dvdz[4]); });
# 1032 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_5: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[4], x[7], x[6], x[1], x[0], x[2], y[4], y[7], y[6], y[1], y[0], y[2], z[4], z[7], z[6], z[1], z[0], z[2], &dvdx[5], &dvdy[5], &dvdz[5]); });
# 1036 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_6: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[5], x[4], x[7], x[2], x[1], x[3], y[5], y[4], y[7], y[2], y[1], y[3], z[5], z[4], z[7], z[2], z[1], z[3], &dvdx[6], &dvdy[6], &dvdz[6]); });
# 1040 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_7: ({ calling_npm("VoluDer", 0); VoluDer_npm(x[6], x[5], x[4], x[3], x[2], x[0], y[6], y[5], y[4], y[3], y[2], y[0], z[6], z[5], z[4], z[3], z[2], z[0], &dvdx[7], &dvdy[7], &dvdz[7]); });
# 1044 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemVolumeDerivative", &____must_manage_CalcElemVolumeDerivative, ____alias_loc_id_42, ____chimes_did_disable17, false); }

static inline
# 1005 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemVolumeDerivative(Real_t dvdx[8],
# 1006 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t dvdy[8],
# 1007 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t dvdz[8],
# 1008 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              const Real_t x[8],
# 1009 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              const Real_t y[8],
# 1010 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              const Real_t z[8]) { (____chimes_replaying ? CalcElemVolumeDerivative_resumable(dvdx, dvdy, dvdz, x, y, z) : CalcElemVolumeDerivative_quick(dvdx, dvdy, dvdz, x, y, z)); }
# 1046 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1047 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemFBHourglassForce_quick(Real_t *xd, Real_t *yd, Real_t *zd, Real_t *hourgam0,
# 1048 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hourgam1, Real_t *hourgam2, Real_t *hourgam3,
# 1049 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hourgam4, Real_t *hourgam5, Real_t *hourgam6,
# 1050 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hourgam7, Real_t coefficient,
# 1051 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hgfx, Real_t *hgfy, Real_t *hgfz )
# 1052 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable18 = new_stack((void *)(&CalcElemFBHourglassForce), "CalcElemFBHourglassForce", &____must_manage_CalcElemFBHourglassForce, 15, 0, (size_t)(2224956529753678285UL), (size_t)(2224956529753678286UL), (size_t)(2224956529753678287UL), (size_t)(2224956529753678288UL), (size_t)(2224956529753678289UL), (size_t)(2224956529753678290UL), (size_t)(2224956529753678291UL), (size_t)(2224956529753678292UL), (size_t)(2224956529753678293UL), (size_t)(2224956529753678294UL), (size_t)(2224956529753678295UL), (size_t)(0UL), (size_t)(2224956529753678297UL), (size_t)(2224956529753678298UL), (size_t)(2224956529753678299UL)) ; ; ;
# 1053 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t i00; i00 = (0) ;
# 1054 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t i01; i01 = (1) ;
# 1055 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t i02; i02 = (2) ;
# 1056 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t i03; i03 = (3) ;
# 1057 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1058 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t h00; h00 = (hourgam0[i00] * xd[0] + hourgam1[i00] * xd[1] +
# 1060 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i00] * xd[2] + hourgam3[i00] * xd[3] +
# 1061 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i00] * xd[4] + hourgam5[i00] * xd[5] +
# 1062 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i00] * xd[6] + hourgam7[i00] * xd[7]) ;
# 1063 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1064 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t h01; h01 = (hourgam0[i01] * xd[0] + hourgam1[i01] * xd[1] +
# 1066 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i01] * xd[2] + hourgam3[i01] * xd[3] +
# 1067 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i01] * xd[4] + hourgam5[i01] * xd[5] +
# 1068 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i01] * xd[6] + hourgam7[i01] * xd[7]) ;
# 1069 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1070 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t h02; h02 = (hourgam0[i02] * xd[0] + hourgam1[i02] * xd[1]+
# 1072 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i02] * xd[2] + hourgam3[i02] * xd[3]+
# 1073 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i02] * xd[4] + hourgam5[i02] * xd[5]+
# 1074 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i02] * xd[6] + hourgam7[i02] * xd[7]) ;
# 1075 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1076 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t h03; h03 = (hourgam0[i03] * xd[0] + hourgam1[i03] * xd[1] +
# 1078 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i03] * xd[2] + hourgam3[i03] * xd[3] +
# 1079 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i03] * xd[4] + hourgam5[i03] * xd[5] +
# 1080 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i03] * xd[6] + hourgam7[i03] * xd[7]) ;
# 1081 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1082 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[0] = coefficient *
# 1083 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam0[i00] * h00 + hourgam0[i01] * h01 +
# 1084 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam0[i02] * h02 + hourgam0[i03] * h03);
# 1085 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1086 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[1] = coefficient *
# 1087 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam1[i00] * h00 + hourgam1[i01] * h01 +
# 1088 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam1[i02] * h02 + hourgam1[i03] * h03);
# 1089 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1090 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[2] = coefficient *
# 1091 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam2[i00] * h00 + hourgam2[i01] * h01 +
# 1092 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam2[i02] * h02 + hourgam2[i03] * h03);
# 1093 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1094 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[3] = coefficient *
# 1095 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam3[i00] * h00 + hourgam3[i01] * h01 +
# 1096 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam3[i02] * h02 + hourgam3[i03] * h03);
# 1097 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1098 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[4] = coefficient *
# 1099 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam4[i00] * h00 + hourgam4[i01] * h01 +
# 1100 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam4[i02] * h02 + hourgam4[i03] * h03);
# 1101 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1102 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[5] = coefficient *
# 1103 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam5[i00] * h00 + hourgam5[i01] * h01 +
# 1104 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam5[i02] * h02 + hourgam5[i03] * h03);
# 1105 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1106 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[6] = coefficient *
# 1107 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam6[i00] * h00 + hourgam6[i01] * h01 +
# 1108 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam6[i02] * h02 + hourgam6[i03] * h03);
# 1109 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1110 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[7] = coefficient *
# 1111 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam7[i00] * h00 + hourgam7[i01] * h01 +
# 1112 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam7[i02] * h02 + hourgam7[i03] * h03);
# 1113 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1114 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h00 =
# 1115 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i00] * yd[0] + hourgam1[i00] * yd[1] +
# 1116 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i00] * yd[2] + hourgam3[i00] * yd[3] +
# 1117 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i00] * yd[4] + hourgam5[i00] * yd[5] +
# 1118 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i00] * yd[6] + hourgam7[i00] * yd[7];
# 1119 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1120 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h01 =
# 1121 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i01] * yd[0] + hourgam1[i01] * yd[1] +
# 1122 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i01] * yd[2] + hourgam3[i01] * yd[3] +
# 1123 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i01] * yd[4] + hourgam5[i01] * yd[5] +
# 1124 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i01] * yd[6] + hourgam7[i01] * yd[7];
# 1125 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1126 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h02 =
# 1127 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i02] * yd[0] + hourgam1[i02] * yd[1]+
# 1128 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i02] * yd[2] + hourgam3[i02] * yd[3]+
# 1129 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i02] * yd[4] + hourgam5[i02] * yd[5]+
# 1130 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i02] * yd[6] + hourgam7[i02] * yd[7];
# 1131 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1132 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h03 =
# 1133 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i03] * yd[0] + hourgam1[i03] * yd[1] +
# 1134 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i03] * yd[2] + hourgam3[i03] * yd[3] +
# 1135 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i03] * yd[4] + hourgam5[i03] * yd[5] +
# 1136 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i03] * yd[6] + hourgam7[i03] * yd[7];
# 1137 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1138 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1139 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[0] = coefficient *
# 1140 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam0[i00] * h00 + hourgam0[i01] * h01 +
# 1141 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam0[i02] * h02 + hourgam0[i03] * h03);
# 1142 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1143 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[1] = coefficient *
# 1144 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam1[i00] * h00 + hourgam1[i01] * h01 +
# 1145 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam1[i02] * h02 + hourgam1[i03] * h03);
# 1146 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1147 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[2] = coefficient *
# 1148 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam2[i00] * h00 + hourgam2[i01] * h01 +
# 1149 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam2[i02] * h02 + hourgam2[i03] * h03);
# 1150 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1151 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[3] = coefficient *
# 1152 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam3[i00] * h00 + hourgam3[i01] * h01 +
# 1153 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam3[i02] * h02 + hourgam3[i03] * h03);
# 1154 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1155 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[4] = coefficient *
# 1156 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam4[i00] * h00 + hourgam4[i01] * h01 +
# 1157 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam4[i02] * h02 + hourgam4[i03] * h03);
# 1158 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1159 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[5] = coefficient *
# 1160 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam5[i00] * h00 + hourgam5[i01] * h01 +
# 1161 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam5[i02] * h02 + hourgam5[i03] * h03);
# 1162 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1163 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[6] = coefficient *
# 1164 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam6[i00] * h00 + hourgam6[i01] * h01 +
# 1165 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam6[i02] * h02 + hourgam6[i03] * h03);
# 1166 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1167 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[7] = coefficient *
# 1168 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam7[i00] * h00 + hourgam7[i01] * h01 +
# 1169 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam7[i02] * h02 + hourgam7[i03] * h03);
# 1170 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1171 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h00 =
# 1172 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i00] * zd[0] + hourgam1[i00] * zd[1] +
# 1173 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i00] * zd[2] + hourgam3[i00] * zd[3] +
# 1174 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i00] * zd[4] + hourgam5[i00] * zd[5] +
# 1175 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i00] * zd[6] + hourgam7[i00] * zd[7];
# 1176 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1177 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h01 =
# 1178 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i01] * zd[0] + hourgam1[i01] * zd[1] +
# 1179 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i01] * zd[2] + hourgam3[i01] * zd[3] +
# 1180 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i01] * zd[4] + hourgam5[i01] * zd[5] +
# 1181 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i01] * zd[6] + hourgam7[i01] * zd[7];
# 1182 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1183 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h02 =
# 1184 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i02] * zd[0] + hourgam1[i02] * zd[1]+
# 1185 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i02] * zd[2] + hourgam3[i02] * zd[3]+
# 1186 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i02] * zd[4] + hourgam5[i02] * zd[5]+
# 1187 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i02] * zd[6] + hourgam7[i02] * zd[7];
# 1188 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1189 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h03 =
# 1190 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i03] * zd[0] + hourgam1[i03] * zd[1] +
# 1191 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i03] * zd[2] + hourgam3[i03] * zd[3] +
# 1192 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i03] * zd[4] + hourgam5[i03] * zd[5] +
# 1193 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i03] * zd[6] + hourgam7[i03] * zd[7];
# 1194 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1195 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[0] = coefficient *
# 1197 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam0[i00] * h00 + hourgam0[i01] * h01 +
# 1198 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam0[i02] * h02 + hourgam0[i03] * h03);
# 1199 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1200 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[1] = coefficient *
# 1201 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam1[i00] * h00 + hourgam1[i01] * h01 +
# 1202 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam1[i02] * h02 + hourgam1[i03] * h03);
# 1203 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1204 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[2] = coefficient *
# 1205 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam2[i00] * h00 + hourgam2[i01] * h01 +
# 1206 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam2[i02] * h02 + hourgam2[i03] * h03);
# 1207 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1208 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[3] = coefficient *
# 1209 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam3[i00] * h00 + hourgam3[i01] * h01 +
# 1210 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam3[i02] * h02 + hourgam3[i03] * h03);
# 1211 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1212 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[4] = coefficient *
# 1213 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam4[i00] * h00 + hourgam4[i01] * h01 +
# 1214 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam4[i02] * h02 + hourgam4[i03] * h03);
# 1215 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1216 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[5] = coefficient *
# 1217 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam5[i00] * h00 + hourgam5[i01] * h01 +
# 1218 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam5[i02] * h02 + hourgam5[i03] * h03);
# 1219 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1220 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[6] = coefficient *
# 1221 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam6[i00] * h00 + hourgam6[i01] * h01 +
# 1222 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam6[i02] * h02 + hourgam6[i03] * h03);
# 1223 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1224 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[7] = coefficient *
# 1225 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam7[i00] * h00 + hourgam7[i01] * h01 +
# 1226 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam7[i02] * h02 + hourgam7[i03] * h03);
# 1227 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemFBHourglassForce", &____must_manage_CalcElemFBHourglassForce, ____alias_loc_id_45, ____chimes_did_disable18, false); }

static inline
# 1047 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemFBHourglassForce(Real_t *xd, Real_t *yd, Real_t *zd, Real_t *hourgam0,
# 1048 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hourgam1, Real_t *hourgam2, Real_t *hourgam3,
# 1049 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hourgam4, Real_t *hourgam5, Real_t *hourgam6,
# 1050 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hourgam7, Real_t coefficient,
# 1051 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hgfx, Real_t *hgfy, Real_t *hgfz ) { (____chimes_replaying ? CalcElemFBHourglassForce_resumable(xd, yd, zd, hourgam0, hourgam1, hourgam2, hourgam3, hourgam4, hourgam5, hourgam6, hourgam7, coefficient, hgfx, hgfy, hgfz) : CalcElemFBHourglassForce_quick(xd, yd, zd, hourgam0, hourgam1, hourgam2, hourgam3, hourgam4, hourgam5, hourgam6, hourgam7, coefficient, hgfx, hgfy, hgfz)); }
# 1229 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1230 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcFBHourglassForceForElems_quick(Real_t *determ,
# 1231 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t *x8n, Real_t *y8n, Real_t *z8n,
# 1232 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t *dvdx, Real_t *dvdy, Real_t *dvdz,
# 1233 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t hourg)
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable19 = new_stack((void *)(&CalcFBHourglassForceForElems), "CalcFBHourglassForceForElems", &____must_manage_CalcFBHourglassForceForElems, 8, 0, (size_t)(2224956529753676376UL), (size_t)(2224956529753676377UL), (size_t)(2224956529753676378UL), (size_t)(2224956529753676379UL), (size_t)(2224956529753676380UL), (size_t)(2224956529753676381UL), (size_t)(2224956529753676382UL), (size_t)(0UL)) ; Real_t zd1[8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t yd1[8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t xd1[8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam7[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam6[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam5[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam4[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam3[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam2[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam1[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hourgam0[4];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hgfz[8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hgfy[8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t hgfx[8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t gamma[4][8];
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (____must_checkpoint_CalcFBHourglassForceForElems_hgfx_0) { register_stack_vars(1, "CalcFBHourglassForceForElems|hgfx|0", &____must_checkpoint_CalcFBHourglassForceForElems_hgfx_0, "[8 x double]", (void *)(hgfx), (size_t)64, 0, 0, 0); } ; ;
# 1235 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1236 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1237 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1238 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1239 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1240 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1241 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1242 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 1243 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem8; numElem8 = (numElem * 8) ;
# 1244 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fx_elem; fx_elem = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753675063UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1245 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fy_elem; fy_elem = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753675087UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1246 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fz_elem; fz_elem = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753675094UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1247 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((fx_elem) ? static_cast<void> (0) : __assert_fail ("fx_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1247, __PRETTY_FUNCTION__)); ((fy_elem) ? static_cast<void> (0) : __assert_fail ("fy_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1247, __PRETTY_FUNCTION__)); ((fz_elem) ? static_cast<void> (0) : __assert_fail ("fz_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1247, __PRETTY_FUNCTION__));
# 1248 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1249 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ;
# 1250 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1251 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][0] = Real_t( 1.);
# 1252 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][1] = Real_t( 1.);
# 1253 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][2] = Real_t(-1.);
# 1254 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][3] = Real_t(-1.);
# 1255 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][4] = Real_t(-1.);
# 1256 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][5] = Real_t(-1.);
# 1257 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][6] = Real_t( 1.);
# 1258 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][7] = Real_t( 1.);
# 1259 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][0] = Real_t( 1.);
# 1260 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][1] = Real_t(-1.);
# 1261 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][2] = Real_t(-1.);
# 1262 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][3] = Real_t( 1.);
# 1263 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][4] = Real_t(-1.);
# 1264 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][5] = Real_t( 1.);
# 1265 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][6] = Real_t( 1.);
# 1266 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][7] = Real_t(-1.);
# 1267 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][0] = Real_t( 1.);
# 1268 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][1] = Real_t(-1.);
# 1269 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][2] = Real_t( 1.);
# 1270 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][3] = Real_t(-1.);
# 1271 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][4] = Real_t( 1.);
# 1272 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][5] = Real_t(-1.);
# 1273 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][6] = Real_t( 1.);
# 1274 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][7] = Real_t(-1.);
# 1275 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][0] = Real_t(-1.);
# 1276 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][1] = Real_t( 1.);
# 1277 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][2] = Real_t(-1.);
# 1278 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][3] = Real_t( 1.);
# 1279 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][4] = Real_t( 1.);
# 1280 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][5] = Real_t(-1.);
# 1281 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][6] = Real_t( 1.);
# 1282 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][7] = Real_t(-1.);
# 1283 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1284 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1285 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1286 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1287 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_2: bool ____chimes_disable3 = disable_current_thread(); void *____chimes_parent_ctx4 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth3 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth3 = get_thread_stack_depth(); size_t ____chimes_region_id3; unsigned ____chimes_parent_thread3 = entering_omp_parallel(2, &____chimes_region_id3, 16, &hgfx, &hgfy, &hgfz, &hourg, &hourgam0, &hourgam1, &hourgam2, &hourgam3, &hourgam4, &hourgam5, &hourgam6, &hourgam7, &numElem, &xd1, &yd1, &zd1); int ____chimes_first_iter3 = 1;
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem, hourg) firstprivate(____chimes_first_iter3) firstprivate(hgfx) firstprivate(hgfy) firstprivate(hgfz) firstprivate(hourgam0) firstprivate(hourgam1) firstprivate(hourgam2) firstprivate(hourgam3) firstprivate(hourgam4) firstprivate(hourgam5) firstprivate(hourgam6) firstprivate(hourgam7) firstprivate(xd1) firstprivate(yd1) firstprivate(zd1)
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1289 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for(Index_t i2=0; i2<numElem; ++i2){ { if (____chimes_first_iter3) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread3, ____chimes_parent_ctx4, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth3, ____chimes_region_id3, 16, &hgfx, &hgfy, &hgfz, &hourg, &hourgam0, &hourgam1, &hourgam2, &hourgam3, &hourgam4, &hourgam5, &hourgam6, &hourgam7, &numElem, &xd1, &yd1, &zd1); ____chimes_first_iter3 = 0; } {
# 1290 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fx_local; Real_t *fy_local; Real_t *fz_local; ;
# 1291 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     ;
# 1292 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1293 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t coefficient; ;
# 1294 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1295 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
      ;
# 1296 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
      ;
# 1297 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     ;
# 1298 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1299 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   const Index_t *elemToNode; elemToNode = (domain.nodelist + (8 * i2)) ;
# 1300 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t i3; i3 = (8*i2) ;
# 1301 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t volinv; volinv = (Real_t(1.0)/determ[i2]) ;
# 1302 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ss1; Real_t mass1; Real_t volume13; ;
# 1303 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t i1; for( i1 = (0) ;i1<4;++i1){
# 1304 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1305 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t hourmodx; hourmodx = (x8n[i3] * gamma[i1][0] + x8n[i3+1] * gamma[i1][1] +
# 1307 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            x8n[i3+2] * gamma[i1][2] + x8n[i3+3] * gamma[i1][3] +
# 1308 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            x8n[i3+4] * gamma[i1][4] + x8n[i3+5] * gamma[i1][5] +
# 1309 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            x8n[i3+6] * gamma[i1][6] + x8n[i3+7] * gamma[i1][7]) ;
# 1310 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1311 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t hourmody; hourmody = (y8n[i3] * gamma[i1][0] + y8n[i3+1] * gamma[i1][1] +
# 1313 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            y8n[i3+2] * gamma[i1][2] + y8n[i3+3] * gamma[i1][3] +
# 1314 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            y8n[i3+4] * gamma[i1][4] + y8n[i3+5] * gamma[i1][5] +
# 1315 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            y8n[i3+6] * gamma[i1][6] + y8n[i3+7] * gamma[i1][7]) ;
# 1316 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1317 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t hourmodz; hourmodz = (z8n[i3] * gamma[i1][0] + z8n[i3+1] * gamma[i1][1] +
# 1319 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            z8n[i3+2] * gamma[i1][2] + z8n[i3+3] * gamma[i1][3] +
# 1320 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            z8n[i3+4] * gamma[i1][4] + z8n[i3+5] * gamma[i1][5] +
# 1321 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            z8n[i3+6] * gamma[i1][6] + z8n[i3+7] * gamma[i1][7]) ;
# 1322 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1323 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam0[i1] = gamma[i1][0] - volinv*(dvdx[i3 ] * hourmodx +
# 1324 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3 ] * hourmody +
# 1325 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3 ] * hourmodz );
# 1326 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1327 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam1[i1] = gamma[i1][1] - volinv*(dvdx[i3+1] * hourmodx +
# 1328 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+1] * hourmody +
# 1329 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+1] * hourmodz );
# 1330 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1331 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam2[i1] = gamma[i1][2] - volinv*(dvdx[i3+2] * hourmodx +
# 1332 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+2] * hourmody +
# 1333 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+2] * hourmodz );
# 1334 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1335 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam3[i1] = gamma[i1][3] - volinv*(dvdx[i3+3] * hourmodx +
# 1336 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+3] * hourmody +
# 1337 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+3] * hourmodz );
# 1338 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1339 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam4[i1] = gamma[i1][4] - volinv*(dvdx[i3+4] * hourmodx +
# 1340 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+4] * hourmody +
# 1341 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+4] * hourmodz );
# 1342 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1343 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam5[i1] = gamma[i1][5] - volinv*(dvdx[i3+5] * hourmodx +
# 1344 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+5] * hourmody +
# 1345 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+5] * hourmodz );
# 1346 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1347 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam6[i1] = gamma[i1][6] - volinv*(dvdx[i3+6] * hourmodx +
# 1348 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+6] * hourmody +
# 1349 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+6] * hourmodz );
# 1350 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1351 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam7[i1] = gamma[i1][7] - volinv*(dvdx[i3+7] * hourmodx +
# 1352 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+7] * hourmody +
# 1353 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+7] * hourmodz );
# 1354 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1355 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 1356 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1357 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1358 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1359 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1360 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ss1=domain.ss[i2];
# 1361 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  mass1=domain.elemMass[i2];
# 1362 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: volume13=({ calling_npm("CBRT", 0); CBRT_npm(determ[i2]); });
# 1363 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1364 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n0si2; n0si2 = (elemToNode[0]) ;
# 1365 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n1si2; n1si2 = (elemToNode[1]) ;
# 1366 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n2si2; n2si2 = (elemToNode[2]) ;
# 1367 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n3si2; n3si2 = (elemToNode[3]) ;
# 1368 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n4si2; n4si2 = (elemToNode[4]) ;
# 1369 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n5si2; n5si2 = (elemToNode[5]) ;
# 1370 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n6si2; n6si2 = (elemToNode[6]) ;
# 1371 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n7si2; n7si2 = (elemToNode[7]) ;
# 1372 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1373 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[0] = domain.xd[n0si2];
# 1374 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[1] = domain.xd[n1si2];
# 1375 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[2] = domain.xd[n2si2];
# 1376 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[3] = domain.xd[n3si2];
# 1377 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[4] = domain.xd[n4si2];
# 1378 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[5] = domain.xd[n5si2];
# 1379 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[6] = domain.xd[n6si2];
# 1380 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[7] = domain.xd[n7si2];
# 1381 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1382 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[0] = domain.yd[n0si2];
# 1383 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[1] = domain.yd[n1si2];
# 1384 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[2] = domain.yd[n2si2];
# 1385 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[3] = domain.yd[n3si2];
# 1386 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[4] = domain.yd[n4si2];
# 1387 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[5] = domain.yd[n5si2];
# 1388 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[6] = domain.yd[n6si2];
# 1389 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[7] = domain.yd[n7si2];
# 1390 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1391 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[0] = domain.zd[n0si2];
# 1392 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[1] = domain.zd[n1si2];
# 1393 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[2] = domain.zd[n2si2];
# 1394 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[3] = domain.zd[n3si2];
# 1395 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[4] = domain.zd[n4si2];
# 1396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[5] = domain.zd[n5si2];
# 1397 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[6] = domain.zd[n6si2];
# 1398 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[7] = domain.zd[n7si2];
# 1399 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1400 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  coefficient = - hourg * Real_t(0.01) * ss1 * mass1 / volume13;
# 1401 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1402 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: ({ calling_npm("CalcElemFBHourglassForce", 0); CalcElemFBHourglassForce_npm(xd1, yd1, zd1, hourgam0, hourgam1, hourgam2, hourgam3, hourgam4, hourgam5, hourgam6, hourgam7, coefficient, hgfx, hgfy, hgfz); });
# 1406 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1407 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local = &fx_elem[i3] ;
# 1408 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[0] = hgfx[0];
# 1409 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[1] = hgfx[1];
# 1410 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[2] = hgfx[2];
# 1411 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[3] = hgfx[3];
# 1412 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[4] = hgfx[4];
# 1413 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[5] = hgfx[5];
# 1414 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[6] = hgfx[6];
# 1415 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[7] = hgfx[7];
# 1416 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1417 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local = &fy_elem[i3] ;
# 1418 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[0] = hgfy[0];
# 1419 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[1] = hgfy[1];
# 1420 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[2] = hgfy[2];
# 1421 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[3] = hgfy[3];
# 1422 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[4] = hgfy[4];
# 1423 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[5] = hgfy[5];
# 1424 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[6] = hgfy[6];
# 1425 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[7] = hgfy[7];
# 1426 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1427 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local = &fz_elem[i3] ;
# 1428 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[0] = hgfz[0];
# 1429 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[1] = hgfz[1];
# 1430 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[2] = hgfz[2];
# 1431 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[3] = hgfz[3];
# 1432 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[4] = hgfz[4];
# 1433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[5] = hgfz[5];
# 1434 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[6] = hgfz[6];
# 1435 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[7] = hgfz[7];
# 1470 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1470 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth3, ____chimes_region_id3, 1); reenable_current_thread(____chimes_disable3); }
# 1471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1472 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 {
# 1473 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t numNode; numNode = (domain.numNode) ;
# 1474 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_3: bool ____chimes_disable4 = disable_current_thread(); void *____chimes_parent_ctx5 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth4 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth4 = get_thread_stack_depth(); size_t ____chimes_region_id4; unsigned ____chimes_parent_thread4 = entering_omp_parallel(3, &____chimes_region_id4, 15, &hgfx, &hgfy, &hgfz, &hourgam0, &hourgam1, &hourgam2, &hourgam3, &hourgam4, &hourgam5, &hourgam6, &hourgam7, &numNode, &xd1, &yd1, &zd1); int ____chimes_first_iter4 = 1;
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode) firstprivate(____chimes_first_iter4)
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1476 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for( Index_t gnode=0 ; gnode<numNode ; ++gnode )
# 1477 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { { if (____chimes_first_iter4) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread4, ____chimes_parent_ctx5, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth4, ____chimes_region_id4, 15, &hgfx, &hgfy, &hgfz, &hourgam0, &hourgam1, &hourgam2, &hourgam3, &hourgam4, &hourgam5, &hourgam6, &hourgam7, &numNode, &xd1, &yd1, &zd1); ____chimes_first_iter4 = 0; } {
# 1478 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t count; count = (domain.nodeElemCount[gnode]) ;
# 1479 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t start; start = (domain.nodeElemStart[gnode]) ;
# 1480 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t fx; fx = (Real_t(0.0)) ;
# 1481 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t fy; fy = (Real_t(0.0)) ;
# 1482 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t fz; fz = (Real_t(0.0)) ;
# 1483 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   { Index_t i; for ( i = (0) ; i < count ; ++i) {
# 1484 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t elem; elem = (domain.nodeElemCornerList[start+i]) ;
# 1485 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fx += fx_elem[elem] ;
# 1486 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fy += fy_elem[elem] ;
# 1487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fz += fz_elem[elem] ;
# 1488 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } }
# 1489 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fx[gnode] += fx ;
# 1490 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fy[gnode] += fy ;
# 1491 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fz[gnode] += fz ;
# 1492 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } } leaving_omp_parallel(____chimes_call_stack_depth4, ____chimes_region_id4, 1); reenable_current_thread(____chimes_disable4); }
# 1493 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1494 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1495 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fz_elem) - sizeof(void *)), 2224956529753675094UL);free((((unsigned char *)fz_elem) - sizeof(void *))); }) ;
# 1496 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fy_elem) - sizeof(void *)), 2224956529753675087UL);free((((unsigned char *)fy_elem) - sizeof(void *))); }) ;
# 1497 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fx_elem) - sizeof(void *)), 2224956529753675063UL);free((((unsigned char *)fx_elem) - sizeof(void *))); }) ;
# 1498 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcFBHourglassForceForElems", &____must_manage_CalcFBHourglassForceForElems, ____alias_loc_id_43, ____chimes_did_disable19, false); }

static inline
# 1230 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcFBHourglassForceForElems(Real_t *determ,
# 1231 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t *x8n, Real_t *y8n, Real_t *z8n,
# 1232 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t *dvdx, Real_t *dvdy, Real_t *dvdz,
# 1233 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t hourg) { (____chimes_replaying ? CalcFBHourglassForceForElems_resumable(determ, x8n, y8n, z8n, dvdx, dvdy, dvdz, hourg) : CalcFBHourglassForceForElems_quick(determ, x8n, y8n, z8n, dvdx, dvdy, dvdz, hourg)); }
# 1500 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1501 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcHourglassControlForElems_quick(Real_t determ[], Real_t hgcoef)
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable20 = new_stack((void *)(&CalcHourglassControlForElems), "CalcHourglassControlForElems", &____must_manage_CalcHourglassControlForElems, 2, 0, (size_t)(2224956529753674204UL), (size_t)(0UL)) ; Real_t pfz[8];
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t pfy[8];
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t pfx[8];
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t z1[8];
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t y1[8];
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t x1[8];
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (____must_checkpoint_CalcHourglassControlForElems_x1_0) { register_stack_vars(1, "CalcHourglassControlForElems|x1|0", &____must_checkpoint_CalcHourglassControlForElems_x1_0, "[8 x double]", (void *)(x1), (size_t)64, 0, 0, 0); } ; ;
# 1503 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 1504 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem8; numElem8 = (numElem * 8) ;
# 1505 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *dvdx; dvdx = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753673959UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1506 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *dvdy; dvdy = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674004UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1507 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *dvdz; dvdz = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674011UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1508 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *x8n; x8n = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674018UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1509 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *y8n; y8n = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674025UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1510 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *z8n; z8n = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674032UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1511 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((dvdx) ? static_cast<void> (0) : __assert_fail ("dvdx", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1511, __PRETTY_FUNCTION__)); ((dvdy) ? static_cast<void> (0) : __assert_fail ("dvdy", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1511, __PRETTY_FUNCTION__)); ((dvdz) ? static_cast<void> (0) : __assert_fail ("dvdz", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1511, __PRETTY_FUNCTION__));
# 1512 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((x8n) ? static_cast<void> (0) : __assert_fail ("x8n", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1512, __PRETTY_FUNCTION__)); ((y8n) ? static_cast<void> (0) : __assert_fail ("y8n", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1512, __PRETTY_FUNCTION__)); ((z8n) ? static_cast<void> (0) : __assert_fail ("z8n", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1512, __PRETTY_FUNCTION__));
# 1513 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1514 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_3: bool ____chimes_disable5 = disable_current_thread(); void *____chimes_parent_ctx6 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth5 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth5 = get_thread_stack_depth(); size_t ____chimes_region_id5; unsigned ____chimes_parent_thread5 = entering_omp_parallel(3, &____chimes_region_id5, 7, &numElem, &pfx, &pfy, &pfz, &x1, &y1, &z1); int ____chimes_first_iter5 = 1;
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem) firstprivate(____chimes_first_iter5) firstprivate(x1) firstprivate(y1) firstprivate(z1) firstprivate(pfx) firstprivate(pfy) firstprivate(pfz)
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1516 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i=0 ; i<numElem ; ++i){ { if (____chimes_first_iter5) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread5, ____chimes_parent_ctx6, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth5, ____chimes_region_id5, 7, &numElem, &pfx, &pfy, &pfz, &x1, &y1, &z1); ____chimes_first_iter5 = 0; } {
# 1517 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     ;
# 1518 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     ;
# 1519 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1520 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t *elemToNode; elemToNode = (domain.nodelist + (8 * i)) ;
# 1521 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: ({ calling_npm("CollectDomainNodesToElemNodes", 0); CollectDomainNodesToElemNodes_npm(elemToNode, x1, y1, z1); });
# 1522 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: ({ calling_npm("CalcElemVolumeDerivative", 0); CalcElemVolumeDerivative_npm(pfx, pfy, pfz, x1, y1, z1); });
# 1524 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1525 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1526 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t ii; for( ii = (0) ;ii<8;++ii){
# 1527 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t jj; jj = (8*i+ii) ;
# 1528 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1529 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   dvdx[jj] = pfx[ii];
# 1530 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   dvdy[jj] = pfy[ii];
# 1531 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   dvdz[jj] = pfz[ii];
# 1532 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x8n[jj] = x1[ii];
# 1533 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y8n[jj] = y1[ii];
# 1534 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z8n[jj] = z1[ii];
# 1535 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 1536 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1537 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  determ[i] = domain.volo[i] * domain.v[i];
# 1538 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1539 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1540 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( domain.v[i] <= Real_t(0.0) ) {
# 1541 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   exit(VolumeError) ;
# 1542 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 1543 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth5, ____chimes_region_id5, 1); reenable_current_thread(____chimes_disable5); }
# 1544 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1545 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if ( hgcoef > Real_t(0.) ) {
# 1546 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: ({ calling_npm("CalcFBHourglassForceForElems", 0); CalcFBHourglassForceForElems_npm(determ, x8n, y8n, z8n, dvdx, dvdy, dvdz, hgcoef); }) ;
# 1547 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1548 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1549 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)z8n) - sizeof(void *)), 2224956529753674032UL);free((((unsigned char *)z8n) - sizeof(void *))); }) ;
# 1550 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)y8n) - sizeof(void *)), 2224956529753674025UL);free((((unsigned char *)y8n) - sizeof(void *))); }) ;
# 1551 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)x8n) - sizeof(void *)), 2224956529753674018UL);free((((unsigned char *)x8n) - sizeof(void *))); }) ;
# 1552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)dvdz) - sizeof(void *)), 2224956529753674011UL);free((((unsigned char *)dvdz) - sizeof(void *))); }) ;
# 1553 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)dvdy) - sizeof(void *)), 2224956529753674004UL);free((((unsigned char *)dvdy) - sizeof(void *))); }) ;
# 1554 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)dvdx) - sizeof(void *)), 2224956529753673959UL);free((((unsigned char *)dvdx) - sizeof(void *))); }) ;
# 1555 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1556 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 rm_stack(false, 0UL, "CalcHourglassControlForElems", &____must_manage_CalcHourglassControlForElems, ____alias_loc_id_40, ____chimes_did_disable20, false); return ;
# 1557 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}

static inline
# 1501 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcHourglassControlForElems(Real_t determ[], Real_t hgcoef) { (____chimes_replaying ? CalcHourglassControlForElems_resumable(determ, hgcoef) : CalcHourglassControlForElems_quick(determ, hgcoef)); }
# 1559 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1560 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcVolumeForceForElems_quick()
# 1561 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable21 = new_stack((void *)(&CalcVolumeForceForElems), "CalcVolumeForceForElems", &____must_manage_CalcVolumeForceForElems, 0, 0) ; ; ;
# 1562 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 1563 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (numElem != 0) {
# 1564 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t hgcoef; hgcoef = (domain.hgcoef) ;
# 1565 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t *sigxx; sigxx = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem, 2224956529753673505UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1566 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t *sigyy; sigyy = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem, 2224956529753673483UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1567 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t *sigzz; sigzz = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem, 2224956529753673490UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1568 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t *determ; determ = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem, 2224956529753673497UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 1569 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        ((sigxx) ? static_cast<void> (0) : __assert_fail ("sigxx", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1569, __PRETTY_FUNCTION__)); ((sigyy) ? static_cast<void> (0) : __assert_fail ("sigyy", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1569, __PRETTY_FUNCTION__)); ((sigzz) ? static_cast<void> (0) : __assert_fail ("sigzz", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1569, __PRETTY_FUNCTION__)); ((determ) ? static_cast<void> (0) : __assert_fail ("determ", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1569, __PRETTY_FUNCTION__));
# 1570 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1571 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1572 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: ({ calling_npm("InitStressTermsForElems", 0); InitStressTermsForElems_npm(numElem, sigxx, sigyy, sigzz); });
# 1573 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1574 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1575 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1576 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: ({ calling_npm("IntegrateStressForElems", 0); IntegrateStressForElems_npm(numElem, sigxx, sigyy, sigzz, determ); }) ;
# 1577 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1578 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_3: bool ____chimes_disable6 = disable_current_thread(); void *____chimes_parent_ctx7 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth6 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth6 = get_thread_stack_depth(); size_t ____chimes_region_id6; unsigned ____chimes_parent_thread6 = entering_omp_parallel(3, &____chimes_region_id6, 1, &numElem); int ____chimes_first_iter6 = 1;
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem) firstprivate(____chimes_first_iter6)
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1580 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for ( Index_t k=0 ; k<numElem ; ++k ) { { if (____chimes_first_iter6) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread6, ____chimes_parent_ctx7, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth6, ____chimes_region_id6, 1, &numElem); ____chimes_first_iter6 = 0; } {
# 1581 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (determ[k] <= Real_t(0.0)) {
# 1582 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    exit(VolumeError) ;
# 1583 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 1584 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } } leaving_omp_parallel(____chimes_call_stack_depth6, ____chimes_region_id6, 1); reenable_current_thread(____chimes_disable6); }
# 1585 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1586 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: ({ calling_npm("CalcHourglassControlForElems", 0); CalcHourglassControlForElems_npm(determ, hgcoef); }) ;
# 1587 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1588 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)determ) - sizeof(void *)), 2224956529753673497UL);free((((unsigned char *)determ) - sizeof(void *))); }) ;
# 1589 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)sigzz) - sizeof(void *)), 2224956529753673490UL);free((((unsigned char *)sigzz) - sizeof(void *))); }) ;
# 1590 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)sigyy) - sizeof(void *)), 2224956529753673483UL);free((((unsigned char *)sigyy) - sizeof(void *))); }) ;
# 1591 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)sigxx) - sizeof(void *)), 2224956529753673505UL);free((((unsigned char *)sigxx) - sizeof(void *))); }) ;
# 1592 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1593 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcVolumeForceForElems", &____must_manage_CalcVolumeForceForElems, ____alias_loc_id_37, ____chimes_did_disable21, false); }

static inline
# 1560 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcVolumeForceForElems() { (____chimes_replaying ? CalcVolumeForceForElems_resumable() : CalcVolumeForceForElems_quick()); }
# 1595 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcForceForNodes_quick()
# 1596 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable22 = new_stack((void *)(&CalcForceForNodes), "CalcForceForNodes", &____must_manage_CalcForceForNodes, 0, 0) ; ; ;
# 1597 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numNode; numNode = (domain.numNode) ;
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_1: bool ____chimes_disable7 = disable_current_thread(); void *____chimes_parent_ctx8 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth7 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth7 = get_thread_stack_depth(); size_t ____chimes_region_id7; unsigned ____chimes_parent_thread7 = entering_omp_parallel(1, &____chimes_region_id7, 1, &numNode); int ____chimes_first_iter7 = 1;
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode) firstprivate(____chimes_first_iter7)
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1599 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i=0; i<numNode; ++i) { { if (____chimes_first_iter7) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread7, ____chimes_parent_ctx8, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth7, ____chimes_region_id7, 1, &numNode); ____chimes_first_iter7 = 0; } {
# 1600 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.fx[i] = Real_t(0.0) ;
# 1601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.fy[i] = Real_t(0.0) ;
# 1602 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.fz[i] = Real_t(0.0) ;
# 1603 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth7, ____chimes_region_id7, 1); reenable_current_thread(____chimes_disable7); }
# 1604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1605 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1606 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcVolumeForceForElems", 0); CalcVolumeForceForElems_npm(); }) ;
# 1607 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1609 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1610 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcForceForNodes", &____must_manage_CalcForceForNodes, ____alias_loc_id_32, ____chimes_did_disable22, false); }

static inline void CalcForceForNodes() { (____chimes_replaying ? CalcForceForNodes_resumable() : CalcForceForNodes_quick()); }
# 1613 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1614 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcAccelerationForNodes_quick()
# 1615 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable23 = new_stack((void *)(&CalcAccelerationForNodes), "CalcAccelerationForNodes", &____must_manage_CalcAccelerationForNodes, 0, 0) ; ; ;
# 1616 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numNode; numNode = (domain.numNode) ;
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_0: bool ____chimes_disable8 = disable_current_thread(); void *____chimes_parent_ctx9 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth8 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth8 = get_thread_stack_depth(); size_t ____chimes_region_id8; unsigned ____chimes_parent_thread8 = entering_omp_parallel(0, &____chimes_region_id8, 1, &numNode); int ____chimes_first_iter8 = 1;
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode) firstprivate(____chimes_first_iter8)
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0; i < numNode; ++i) { { if (____chimes_first_iter8) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread8, ____chimes_parent_ctx9, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth8, ____chimes_region_id8, 1, &numNode); ____chimes_first_iter8 = 0; } {
# 1619 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.xdd[i] = domain.fx[i] / domain.nodalMass[i];
# 1620 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.ydd[i] = domain.fy[i] / domain.nodalMass[i];
# 1621 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.zdd[i] = domain.fz[i] / domain.nodalMass[i];
# 1622 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth8, ____chimes_region_id8, 1); reenable_current_thread(____chimes_disable8); }
# 1623 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcAccelerationForNodes", &____must_manage_CalcAccelerationForNodes, ____alias_loc_id_33, ____chimes_did_disable23, false); }

static inline
# 1614 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcAccelerationForNodes() { (____chimes_replaying ? CalcAccelerationForNodes_resumable() : CalcAccelerationForNodes_quick()); }
# 1626 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1627 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void ApplyAccelerationBoundaryConditionsForNodes_quick()
# 1628 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable24 = new_stack((void *)(&ApplyAccelerationBoundaryConditionsForNodes), "ApplyAccelerationBoundaryConditionsForNodes", &____must_manage_ApplyAccelerationBoundaryConditionsForNodes, 0, 0) ; ; ;
# 1629 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numNodeBC; numNodeBC = ((domain.sizeX+1)*(domain.sizeX+1)) ;
# 1630 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_0: void *____chimes_parent_ctx10 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth9 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth9 = get_thread_stack_depth(); size_t ____chimes_region_id9; unsigned ____chimes_parent_thread9 = entering_omp_parallel(0, &____chimes_region_id9, 0);
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread9, ____chimes_parent_ctx10, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth9, ____chimes_region_id9, 0); if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } {
# 1633 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t i; ;
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable10; ____chimes_disable10 = disable_current_thread();
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(numNodeBC)
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1635 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (i=0; i<numNodeBC; ++i) { { domain.xdd[domain.symmX[i]] = Real_t(0.0); } } reenable_current_thread(____chimes_disable10); ;
# 1637 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1638 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t j; ;
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable11; ____chimes_disable11 = disable_current_thread();
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(numNodeBC)
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1640 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (j=0; j<numNodeBC; ++j) { { domain.ydd[domain.symmY[j]] = Real_t(0.0); } } reenable_current_thread(____chimes_disable11); ;
# 1642 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t k; ;
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable12; ____chimes_disable12 = disable_current_thread();
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(numNodeBC)
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1645 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (k=0; k<numNodeBC; ++k) { { domain.zdd[domain.symmZ[k]] = Real_t(0.0); } } reenable_current_thread(____chimes_disable12); ;
# 1647 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     } thread_leaving(); } } leaving_omp_parallel(____chimes_call_stack_depth9, ____chimes_region_id9, 0); }
# 1648 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "ApplyAccelerationBoundaryConditionsForNodes", &____must_manage_ApplyAccelerationBoundaryConditionsForNodes, ____alias_loc_id_34, ____chimes_did_disable24, false); }

static inline
# 1627 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void ApplyAccelerationBoundaryConditionsForNodes() { (____chimes_replaying ? ApplyAccelerationBoundaryConditionsForNodes_resumable() : ApplyAccelerationBoundaryConditionsForNodes_quick()); }
# 1650 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1651 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcVelocityForNodes_quick(const Real_t dt, const Real_t u_cut)
# 1652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable25 = new_stack((void *)(&CalcVelocityForNodes), "CalcVelocityForNodes", &____must_manage_CalcVelocityForNodes, 2, 0, (size_t)(0UL), (size_t)(0UL)) ; ; ;
# 1653 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numNode; numNode = (domain.numNode) ;
# 1654 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_3: bool ____chimes_disable13 = disable_current_thread(); void *____chimes_parent_ctx11 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth10 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth10 = get_thread_stack_depth(); size_t ____chimes_region_id10; unsigned ____chimes_parent_thread10 = entering_omp_parallel(3, &____chimes_region_id10, 1, &numNode); int ____chimes_first_iter10 = 1;
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode) firstprivate(____chimes_first_iter10)
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1656 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for ( Index_t i = 0 ; i < numNode ; ++i )
# 1657 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { { if (____chimes_first_iter10) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread10, ____chimes_parent_ctx11, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth10, ____chimes_region_id10, 1, &numNode); ____chimes_first_iter10 = 0; } {
# 1658 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t xdtmp; Real_t ydtmp; Real_t zdtmp; ;
# 1659 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1660 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xdtmp = domain.xd[i] + domain.xdd[i] * dt ;
# 1661 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: if (({ calling_npm("FABS", 0); FABS_npm(xdtmp); }) < u_cut) {xdtmp = Real_t(0.0); };
# 1662 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.xd[i] = xdtmp ;
# 1663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1664 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ydtmp = domain.yd[i] + domain.ydd[i] * dt ;
# 1665 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: if (({ calling_npm("FABS", 0); FABS_npm(ydtmp); }) < u_cut) {ydtmp = Real_t(0.0); };
# 1666 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.yd[i] = ydtmp ;
# 1667 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1668 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zdtmp = domain.zd[i] + domain.zdd[i] * dt ;
# 1669 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: if (({ calling_npm("FABS", 0); FABS_npm(zdtmp); }) < u_cut) {zdtmp = Real_t(0.0); };
# 1670 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.zd[i] = zdtmp ;
# 1671 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth10, ____chimes_region_id10, 1); reenable_current_thread(____chimes_disable13); }
# 1672 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcVelocityForNodes", &____must_manage_CalcVelocityForNodes, ____alias_loc_id_35, ____chimes_did_disable25, false); }

static inline
# 1651 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcVelocityForNodes(const Real_t dt, const Real_t u_cut) { (____chimes_replaying ? CalcVelocityForNodes_resumable(dt, u_cut) : CalcVelocityForNodes_quick(dt, u_cut)); }
# 1674 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1675 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcPositionForNodes_quick(const Real_t dt)
# 1676 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable26 = new_stack((void *)(&CalcPositionForNodes), "CalcPositionForNodes", &____must_manage_CalcPositionForNodes, 1, 0, (size_t)(0UL)) ; ; ;
# 1677 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numNode; numNode = (domain.numNode) ;
# 1678 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_0: bool ____chimes_disable14 = disable_current_thread(); void *____chimes_parent_ctx12 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth11 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth11 = get_thread_stack_depth(); size_t ____chimes_region_id11; unsigned ____chimes_parent_thread11 = entering_omp_parallel(0, &____chimes_region_id11, 1, &numNode); int ____chimes_first_iter11 = 1;
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode) firstprivate(____chimes_first_iter11)
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1680 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for ( Index_t i = 0 ; i < numNode ; ++i )
# 1681 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { { if (____chimes_first_iter11) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread11, ____chimes_parent_ctx12, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth11, ____chimes_region_id11, 1, &numNode); ____chimes_first_iter11 = 0; } {
# 1682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.x[i] += domain.xd[i] * dt ;
# 1683 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.y[i] += domain.yd[i] * dt ;
# 1684 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.z[i] += domain.zd[i] * dt ;
# 1685 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth11, ____chimes_region_id11, 1); reenable_current_thread(____chimes_disable14); }
# 1686 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcPositionForNodes", &____must_manage_CalcPositionForNodes, ____alias_loc_id_36, ____chimes_did_disable26, false); }

static inline
# 1675 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcPositionForNodes(const Real_t dt) { (____chimes_replaying ? CalcPositionForNodes_resumable(dt) : CalcPositionForNodes_quick(dt)); }
# 1688 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void LagrangeNodal_quick()
# 1690 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable27 = new_stack((void *)(&LagrangeNodal), "LagrangeNodal", &____must_manage_LagrangeNodal, 0, 0) ; ; ;
# 1691 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t delt; delt = (domain.deltatime) ;
# 1692 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t u_cut; u_cut = (domain.u_cut) ;
# 1693 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1694 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1695 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcForceForNodes", 0); CalcForceForNodes_npm(); });
# 1697 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1698 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("CalcAccelerationForNodes", 0); CalcAccelerationForNodes_npm(); });
# 1699 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1700 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: ({ calling_npm("ApplyAccelerationBoundaryConditionsForNodes", 0); ApplyAccelerationBoundaryConditionsForNodes_npm(); });
# 1701 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1702 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: ({ calling_npm("CalcVelocityForNodes", 0); CalcVelocityForNodes_npm(delt, u_cut); }) ;
# 1703 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1704 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_4: ({ calling_npm("CalcPositionForNodes", 0); CalcPositionForNodes_npm(delt); });
# 1705 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1706 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 rm_stack(false, 0UL, "LagrangeNodal", &____must_manage_LagrangeNodal, ____alias_loc_id_10, ____chimes_did_disable27, false); return;
# 1707 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}

static inline
# 1689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void LagrangeNodal() { (____chimes_replaying ? LagrangeNodal_resumable() : LagrangeNodal_quick()); }
# 1709 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1710 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t CalcElemVolumeScalar_quick( const Real_t x0, const Real_t x1,
# 1711 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t x2, const Real_t x3,
# 1712 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t x4, const Real_t x5,
# 1713 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t x6, const Real_t x7,
# 1714 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y0, const Real_t y1,
# 1715 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y2, const Real_t y3,
# 1716 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y4, const Real_t y5,
# 1717 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y6, const Real_t y7,
# 1718 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z0, const Real_t z1,
# 1719 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z2, const Real_t z3,
# 1720 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z4, const Real_t z5,
# 1721 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z6, const Real_t z7 )
# 1722 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable28 = new_stack((void *)(&CalcElemVolumeScalar), "CalcElemVolumeScalar", &____must_manage_CalcElemVolumeScalar, 24, 0, (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL)) ; ; ;
# 1723 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t twelveth; twelveth = (Real_t(1.0)/Real_t(12.0)) ;
# 1724 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1725 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx61; dx61 = (x6 - x1) ;
# 1726 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy61; dy61 = (y6 - y1) ;
# 1727 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz61; dz61 = (z6 - z1) ;
# 1728 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1729 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx70; dx70 = (x7 - x0) ;
# 1730 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy70; dy70 = (y7 - y0) ;
# 1731 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz70; dz70 = (z7 - z0) ;
# 1732 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1733 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx63; dx63 = (x6 - x3) ;
# 1734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy63; dy63 = (y6 - y3) ;
# 1735 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz63; dz63 = (z6 - z3) ;
# 1736 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx20; dx20 = (x2 - x0) ;
# 1738 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy20; dy20 = (y2 - y0) ;
# 1739 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz20; dz20 = (z2 - z0) ;
# 1740 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1741 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx50; dx50 = (x5 - x0) ;
# 1742 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy50; dy50 = (y5 - y0) ;
# 1743 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz50; dz50 = (z5 - z0) ;
# 1744 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx64; dx64 = (x6 - x4) ;
# 1746 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy64; dy64 = (y6 - y4) ;
# 1747 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz64; dz64 = (z6 - z4) ;
# 1748 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1749 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx31; dx31 = (x3 - x1) ;
# 1750 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy31; dy31 = (y3 - y1) ;
# 1751 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz31; dz31 = (z3 - z1) ;
# 1752 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1753 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx72; dx72 = (x7 - x2) ;
# 1754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy72; dy72 = (y7 - y2) ;
# 1755 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz72; dz72 = (z7 - z2) ;
# 1756 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1757 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx43; dx43 = (x4 - x3) ;
# 1758 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy43; dy43 = (y4 - y3) ;
# 1759 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz43; dz43 = (z4 - z3) ;
# 1760 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1761 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx57; dx57 = (x5 - x7) ;
# 1762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy57; dy57 = (y5 - y7) ;
# 1763 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz57; dz57 = (z5 - z7) ;
# 1764 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1765 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx14; dx14 = (x1 - x4) ;
# 1766 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy14; dy14 = (y1 - y4) ;
# 1767 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz14; dz14 = (z1 - z4) ;
# 1768 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1769 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dx25; dx25 = (x2 - x5) ;
# 1770 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dy25; dy25 = (y2 - y5) ;
# 1771 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dz25; dz25 = (z2 - z5) ;
# 1772 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1773 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1774 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1775 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1776 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t volume; volume = (((dx31 + dx72)*((dy63)*(dz20) - (dy20)*(dz63)) + (dy31 + dy72)*((dx20)*(dz63) - (dx63)*(dz20)) + (dz31 + dz72)*((dx63)*(dy20) - (dx20)*(dy63)))
# 1778 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1779 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                +
# 1780 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((dx43 + dx57)*((dy64)*(dz70) - (dy70)*(dz64)) + (dy43 + dy57)*((dx70)*(dz64) - (dx64)*(dz70)) + (dz43 + dz57)*((dx64)*(dy70) - (dx70)*(dy64)))
# 1781 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1782 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                +
# 1783 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((dx14 + dx25)*((dy61)*(dz50) - (dy50)*(dz61)) + (dy14 + dy25)*((dx50)*(dz61) - (dx61)*(dz50)) + (dz14 + dz25)*((dx61)*(dy50) - (dx50)*(dy61)))) ;
# 1786 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1787 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1788 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1789 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 volume *= twelveth;
# 1790 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1791 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ____chimes_ret_var_3; ; ____chimes_ret_var_3 = (volume); rm_stack(false, 0UL, "CalcElemVolumeScalar", &____must_manage_CalcElemVolumeScalar, ____alias_loc_id_50, ____chimes_did_disable28, false); return ____chimes_ret_var_3; ;
# 1792 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemVolumeScalar", &____must_manage_CalcElemVolumeScalar, ____alias_loc_id_50, ____chimes_did_disable28, false); }

static inline
# 1710 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t CalcElemVolumeScalar( const Real_t x0, const Real_t x1,
# 1711 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t x2, const Real_t x3,
# 1712 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t x4, const Real_t x5,
# 1713 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t x6, const Real_t x7,
# 1714 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y0, const Real_t y1,
# 1715 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y2, const Real_t y3,
# 1716 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y4, const Real_t y5,
# 1717 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y6, const Real_t y7,
# 1718 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z0, const Real_t z1,
# 1719 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z2, const Real_t z3,
# 1720 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z4, const Real_t z5,
# 1721 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z6, const Real_t z7 ) { return (____chimes_replaying ? CalcElemVolumeScalar_resumable(x0, x1, x2, x3, x4, x5, x6, x7, y0, y1, y2, y3, y4, y5, y6, y7, z0, z1, z2, z3, z4, z5, z6, z7) : CalcElemVolumeScalar_quick(x0, x1, x2, x3, x4, x5, x6, x7, y0, y1, y2, y3, y4, y5, y6, y7, z0, z1, z2, z3, z4, z5, z6, z7)); }
# 1794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1795 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t CalcElemVolume_quick( const Real_t x[8], const Real_t y[8], const Real_t z[8] )
# 1796 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable29 = new_stack((void *)(&CalcElemVolume), "CalcElemVolume", &____must_manage_CalcElemVolume, 3, 0, (size_t)(2224956529753666968UL), (size_t)(2224956529753666969UL), (size_t)(2224956529753666970UL)) ; ; ;
# 1797 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ____chimes_ret_var_4; ; call_lbl_0: ____chimes_ret_var_4 = (({ calling_npm("CalcElemVolumeScalar", 0); CalcElemVolumeScalar_npm(x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7], y[0], y[1], y[2], y[3], y[4], y[5], y[6], y[7], z[0], z[1], z[2], z[3], z[4], z[5], z[6], z[7]); })); rm_stack(false, 0UL, "CalcElemVolume", &____must_manage_CalcElemVolume, ____alias_loc_id_7, ____chimes_did_disable29, false); return ____chimes_ret_var_4; ;
# 1800 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemVolume", &____must_manage_CalcElemVolume, ____alias_loc_id_7, ____chimes_did_disable29, false); }

static inline
# 1795 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t CalcElemVolume( const Real_t x[8], const Real_t y[8], const Real_t z[8] ) { return (____chimes_replaying ? CalcElemVolume_resumable(x, y, z) : CalcElemVolume_quick(x, y, z)); }
# 1802 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1803 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t AreaFace_quick( const Real_t x0, const Real_t x1,
# 1804 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t x2, const Real_t x3,
# 1805 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t y0, const Real_t y1,
# 1806 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t y2, const Real_t y3,
# 1807 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t z0, const Real_t z1,
# 1808 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t z2, const Real_t z3)
# 1809 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable30 = new_stack((void *)(&AreaFace), "AreaFace", &____must_manage_AreaFace, 12, 0, (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL)) ; ; ;
# 1810 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t fx; fx = ((x2 - x0) - (x3 - x1)) ;
# 1811 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t fy; fy = ((y2 - y0) - (y3 - y1)) ;
# 1812 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t fz; fz = ((z2 - z0) - (z3 - z1)) ;
# 1813 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t gx; gx = ((x2 - x0) + (x3 - x1)) ;
# 1814 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t gy; gy = ((y2 - y0) + (y3 - y1)) ;
# 1815 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t gz; gz = ((z2 - z0) + (z3 - z1)) ;
# 1816 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t area; area = ((fx * fx + fy * fy + fz * fz) *
# 1818 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (gx * gx + gy * gy + gz * gz) -
# 1819 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (fx * gx + fy * gy + fz * gz) *
# 1820 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (fx * gx + fy * gy + fz * gz)) ;
# 1821 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ____chimes_ret_var_5; ; ____chimes_ret_var_5 = (area); rm_stack(false, 0UL, "AreaFace", &____must_manage_AreaFace, ____alias_loc_id_31, ____chimes_did_disable30, false); return ____chimes_ret_var_5; ;
# 1822 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "AreaFace", &____must_manage_AreaFace, ____alias_loc_id_31, ____chimes_did_disable30, false); }

static inline
# 1803 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t AreaFace( const Real_t x0, const Real_t x1,
# 1804 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t x2, const Real_t x3,
# 1805 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t y0, const Real_t y1,
# 1806 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t y2, const Real_t y3,
# 1807 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t z0, const Real_t z1,
# 1808 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t z2, const Real_t z3) { return (____chimes_replaying ? AreaFace_resumable(x0, x1, x2, x3, y0, y1, y2, y3, z0, z1, z2, z3) : AreaFace_quick(x0, x1, x2, x3, y0, y1, y2, y3, z0, z1, z2, z3)); }
# 1824 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t CalcElemCharacteristicLength_quick( const Real_t x[8],
# 1826 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t y[8],
# 1827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t z[8],
# 1828 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t volume)
# 1829 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable31 = new_stack((void *)(&CalcElemCharacteristicLength), "CalcElemCharacteristicLength", &____must_manage_CalcElemCharacteristicLength, 4, 0, (size_t)(2224956529753671707UL), (size_t)(2224956529753671708UL), (size_t)(2224956529753671709UL), (size_t)(0UL)) ; ; ;
# 1830 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t a; Real_t charLength; charLength = (Real_t(0.0)) ;
# 1831 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1832 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: a = ({ calling_npm("AreaFace", 0); AreaFace_npm(x[0], x[1], x[2], x[3], y[0], y[1], y[2], y[3], z[0], z[1], z[2], z[3]); }) ;
# 1835 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1836 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1837 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: a = ({ calling_npm("AreaFace", 0); AreaFace_npm(x[4], x[5], x[6], x[7], y[4], y[5], y[6], y[7], z[4], z[5], z[6], z[7]); }) ;
# 1840 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1841 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1842 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: a = ({ calling_npm("AreaFace", 0); AreaFace_npm(x[0], x[1], x[5], x[4], y[0], y[1], y[5], y[4], z[0], z[1], z[5], z[4]); }) ;
# 1845 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1846 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1847 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: a = ({ calling_npm("AreaFace", 0); AreaFace_npm(x[1], x[2], x[6], x[5], y[1], y[2], y[6], y[5], z[1], z[2], z[6], z[5]); }) ;
# 1850 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1851 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_4: a = ({ calling_npm("AreaFace", 0); AreaFace_npm(x[2], x[3], x[7], x[6], y[2], y[3], y[7], y[6], z[2], z[3], z[7], z[6]); }) ;
# 1855 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1856 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1857 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_5: a = ({ calling_npm("AreaFace", 0); AreaFace_npm(x[3], x[0], x[4], x[7], y[3], y[0], y[4], y[7], z[3], z[0], z[4], z[7]); }) ;
# 1860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1861 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1862 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_6: charLength = Real_t(4.0) * volume / ({ calling_npm("SQRT", 0); SQRT_npm(charLength); });
# 1863 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ____chimes_ret_var_6; ; ____chimes_ret_var_6 = (charLength); rm_stack(false, 0UL, "CalcElemCharacteristicLength", &____must_manage_CalcElemCharacteristicLength, ____alias_loc_id_28, ____chimes_did_disable31, false); return ____chimes_ret_var_6; ;
# 1865 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemCharacteristicLength", &____must_manage_CalcElemCharacteristicLength, ____alias_loc_id_28, ____chimes_did_disable31, false); }

static inline
# 1825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t CalcElemCharacteristicLength( const Real_t x[8],
# 1826 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t y[8],
# 1827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t z[8],
# 1828 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t volume) { return (____chimes_replaying ? CalcElemCharacteristicLength_resumable(x, y, z, volume) : CalcElemCharacteristicLength_quick(x, y, z, volume)); }
# 1867 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1868 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemVelocityGrandient_quick( const Real_t* const xvel,
# 1869 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t* const yvel,
# 1870 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t* const zvel,
# 1871 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t b[][8],
# 1872 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t detJ,
# 1873 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t* const d )
# 1874 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable32 = new_stack((void *)(&CalcElemVelocityGrandient), "CalcElemVelocityGrandient", &____must_manage_CalcElemVelocityGrandient, 6, 0, (size_t)(2224956529753672908UL), (size_t)(2224956529753672909UL), (size_t)(2224956529753672910UL), (size_t)(2224956529753672911UL), (size_t)(0UL), (size_t)(2224956529753672913UL)) ; ; ;
# 1875 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t inv_detJ; inv_detJ = (1.0 / detJ) ;
# 1876 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dyddx; Real_t dxddy; Real_t dzddx; Real_t dxddz; Real_t dzddy; Real_t dyddz; ;
# 1877 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  const Real_t *pfx; pfx = (b[0]) ;
# 1878 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  const Real_t *pfy; pfy = (b[1]) ;
# 1879 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  const Real_t *pfz; pfz = (b[2]) ;
# 1880 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1881 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[0] = inv_detJ * ( pfx[0] * (xvel[0]-xvel[6])
# 1882 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfx[1] * (xvel[1]-xvel[7])
# 1883 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfx[2] * (xvel[2]-xvel[4])
# 1884 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfx[3] * (xvel[3]-xvel[5]) );
# 1885 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1886 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[1] = inv_detJ * ( pfy[0] * (yvel[0]-yvel[6])
# 1887 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfy[1] * (yvel[1]-yvel[7])
# 1888 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfy[2] * (yvel[2]-yvel[4])
# 1889 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfy[3] * (yvel[3]-yvel[5]) );
# 1890 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1891 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[2] = inv_detJ * ( pfz[0] * (zvel[0]-zvel[6])
# 1892 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfz[1] * (zvel[1]-zvel[7])
# 1893 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfz[2] * (zvel[2]-zvel[4])
# 1894 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfz[3] * (zvel[3]-zvel[5]) );
# 1895 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1896 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dyddx = inv_detJ * ( pfx[0] * (yvel[0]-yvel[6])
# 1897 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[1] * (yvel[1]-yvel[7])
# 1898 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[2] * (yvel[2]-yvel[4])
# 1899 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[3] * (yvel[3]-yvel[5]) );
# 1900 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1901 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dxddy = inv_detJ * ( pfy[0] * (xvel[0]-xvel[6])
# 1902 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[1] * (xvel[1]-xvel[7])
# 1903 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[2] * (xvel[2]-xvel[4])
# 1904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[3] * (xvel[3]-xvel[5]) );
# 1905 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1906 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dzddx = inv_detJ * ( pfx[0] * (zvel[0]-zvel[6])
# 1907 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[1] * (zvel[1]-zvel[7])
# 1908 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[2] * (zvel[2]-zvel[4])
# 1909 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[3] * (zvel[3]-zvel[5]) );
# 1910 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1911 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dxddz = inv_detJ * ( pfz[0] * (xvel[0]-xvel[6])
# 1912 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[1] * (xvel[1]-xvel[7])
# 1913 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[2] * (xvel[2]-xvel[4])
# 1914 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[3] * (xvel[3]-xvel[5]) );
# 1915 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1916 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dzddy = inv_detJ * ( pfy[0] * (zvel[0]-zvel[6])
# 1917 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[1] * (zvel[1]-zvel[7])
# 1918 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[2] * (zvel[2]-zvel[4])
# 1919 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[3] * (zvel[3]-zvel[5]) );
# 1920 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1921 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dyddz = inv_detJ * ( pfz[0] * (yvel[0]-yvel[6])
# 1922 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[1] * (yvel[1]-yvel[7])
# 1923 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[2] * (yvel[2]-yvel[4])
# 1924 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[3] * (yvel[3]-yvel[5]) );
# 1925 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[5] = .5 * ( dxddy + dyddx );
# 1926 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[4] = .5 * ( dxddz + dzddx );
# 1927 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[3] = .5 * ( dzddy + dyddz );
# 1928 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcElemVelocityGrandient", &____must_manage_CalcElemVelocityGrandient, ____alias_loc_id_30, ____chimes_did_disable32, false); }

static inline
# 1868 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemVelocityGrandient( const Real_t* const xvel,
# 1869 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t* const yvel,
# 1870 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t* const zvel,
# 1871 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t b[][8],
# 1872 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t detJ,
# 1873 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t* const d ) { (____chimes_replaying ? CalcElemVelocityGrandient_resumable(xvel, yvel, zvel, b, detJ, d) : CalcElemVelocityGrandient_quick(xvel, yvel, zvel, b, detJ, d)); }
# 1930 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1931 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcKinematicsForElems_quick( Index_t numElem, Real_t dt )
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable33 = new_stack((void *)(&CalcKinematicsForElems), "CalcKinematicsForElems", &____must_manage_CalcKinematicsForElems, 2, 0, (size_t)(0UL), (size_t)(0UL)) ; Real_t zd_local[8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t yd_local[8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t xd_local[8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t z_local[8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t y_local[8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t x_local[8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t D[6];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t B[3][8];
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (____must_checkpoint_CalcKinematicsForElems_x_local_0 || ____must_checkpoint_CalcKinematicsForElems_B_0) { register_stack_vars(2, "CalcKinematicsForElems|x_local|0", &____must_checkpoint_CalcKinematicsForElems_x_local_0, "[8 x double]", (void *)(x_local), (size_t)64, 0, 0, 0, "CalcKinematicsForElems|B|0", &____must_checkpoint_CalcKinematicsForElems_B_0, "[3 x [8 x double]]", (void *)(B), (size_t)192, 0, 0, 0); } ; ;
# 1933 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_4: bool ____chimes_disable15 = disable_current_thread(); void *____chimes_parent_ctx13 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth12 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth12 = get_thread_stack_depth(); size_t ____chimes_region_id12; unsigned ____chimes_parent_thread12 = entering_omp_parallel(4, &____chimes_region_id12, 10, &B, &D, &dt, &numElem, &x_local, &xd_local, &y_local, &yd_local, &z_local, &zd_local); int ____chimes_first_iter12 = 1;
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem, dt) firstprivate(____chimes_first_iter12) firstprivate(B) firstprivate(D) firstprivate(x_local) firstprivate(y_local) firstprivate(z_local) firstprivate(xd_local) firstprivate(yd_local) firstprivate(zd_local)
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1935 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for( Index_t k=0 ; k<numElem ; ++k )
# 1936 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { { if (____chimes_first_iter12) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread12, ____chimes_parent_ctx13, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth12, ____chimes_region_id12, 10, &B, &D, &dt, &numElem, &x_local, &xd_local, &y_local, &yd_local, &z_local, &zd_local); ____chimes_first_iter12 = 0; } {
# 1937 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1938 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1939 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1940 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1941 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1942 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1943 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1944 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ;
# 1945 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t detJ; detJ = (0.0) ;
# 1946 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1947 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t volume; ;
# 1948 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t relativeVolume; ;
# 1949 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t *elemToNode; elemToNode = (domain.nodelist + (k * 8)) ;
# 1950 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1951 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1952 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t lnode; for( lnode = (0) ; lnode<8 ; ++lnode )
# 1953 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 1954 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t gnode; gnode = (elemToNode[lnode]) ;
# 1955 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x_local[lnode] = domain.x[gnode];
# 1956 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y_local[lnode] = domain.y[gnode];
# 1957 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z_local[lnode] = domain.z[gnode];
# 1958 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 1959 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1960 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1961 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: volume = ({ calling_npm("CalcElemVolume", 0); CalcElemVolume_npm(x_local, y_local, z_local); });
# 1962 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  relativeVolume = volume / domain.volo[k] ;
# 1963 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.vnew[k] = relativeVolume ;
# 1964 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delv[k] = relativeVolume - domain.v[k] ;
# 1965 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1966 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1967 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: domain.arealg[k] = ({ calling_npm("CalcElemCharacteristicLength", 0); CalcElemCharacteristicLength_npm(x_local, y_local, z_local, volume); });
# 1971 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1972 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1973 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t lnode; for( lnode = (0) ; lnode<8 ; ++lnode )
# 1974 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 1975 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t gnode; gnode = (elemToNode[lnode]) ;
# 1976 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   xd_local[lnode] = domain.xd[gnode];
# 1977 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   yd_local[lnode] = domain.yd[gnode];
# 1978 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   zd_local[lnode] = domain.zd[gnode];
# 1979 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 1980 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1981 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dt2; dt2 = (0.5 * dt) ;
# 1982 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t j; for ( j = (0) ; j<8 ; ++j )
# 1983 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 1984 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x_local[j] -= dt2 * xd_local[j];
# 1985 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y_local[j] -= dt2 * yd_local[j];
# 1986 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z_local[j] -= dt2 * zd_local[j];
# 1987 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 1988 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1989 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: ({ calling_npm("CalcElemShapeFunctionDerivatives", 0); CalcElemShapeFunctionDerivatives_npm(x_local, y_local, z_local, B, &detJ); });
# 1993 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1994 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_3: ({ calling_npm("CalcElemVelocityGrandient", 0); CalcElemVelocityGrandient_npm(xd_local, yd_local, zd_local, B, detJ, D); });
# 1998 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1999 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2000 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dxx[k] = D[0];
# 2001 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dyy[k] = D[1];
# 2002 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dzz[k] = D[2];
# 2003 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth12, ____chimes_region_id12, 1); reenable_current_thread(____chimes_disable15); }
# 2004 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcKinematicsForElems", &____must_manage_CalcKinematicsForElems, ____alias_loc_id_27, ____chimes_did_disable33, false); }

static inline
# 1931 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcKinematicsForElems( Index_t numElem, Real_t dt ) { (____chimes_replaying ? CalcKinematicsForElems_resumable(numElem, dt) : CalcKinematicsForElems_quick(numElem, dt)); }
# 2006 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2007 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcLagrangeElements_quick(Real_t deltatime)
# 2008 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable34 = new_stack((void *)(&CalcLagrangeElements), "CalcLagrangeElements", &____must_manage_CalcLagrangeElements, 1, 0, (size_t)(0UL)) ; ; ;
# 2009 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 2010 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (numElem > 0) {
# 2011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: ({ calling_npm("CalcKinematicsForElems", 0); CalcKinematicsForElems_npm(numElem, deltatime); }) ;
# 2012 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2013 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2014 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_1: bool ____chimes_disable16 = disable_current_thread(); void *____chimes_parent_ctx14 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth13 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth13 = get_thread_stack_depth(); size_t ____chimes_region_id13; unsigned ____chimes_parent_thread13 = entering_omp_parallel(1, &____chimes_region_id13, 1, &numElem); int ____chimes_first_iter13 = 1;
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem) firstprivate(____chimes_first_iter13)
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2016 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for ( Index_t k=0 ; k<numElem ; ++k )
# 2017 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { { if (____chimes_first_iter13) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread13, ____chimes_parent_ctx14, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth13, ____chimes_region_id13, 1, &numElem); ____chimes_first_iter13 = 0; } {
# 2018 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2019 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t vdov; vdov = (domain.dxx[k] + domain.dyy[k] + domain.dzz[k]) ;
# 2020 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t vdovthird; vdovthird = (vdov/3.0) ;
# 2021 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2022 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2023 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.vdov[k] = vdov ;
# 2024 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.dxx[k] -= vdovthird ;
# 2025 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.dyy[k] -= vdovthird ;
# 2026 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.dzz[k] -= vdovthird ;
# 2027 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2028 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2029 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (domain.vnew[k] <= 0.0)
# 2030 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   {
# 2031 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    exit(VolumeError) ;
# 2032 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2033 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } } leaving_omp_parallel(____chimes_call_stack_depth13, ____chimes_region_id13, 1); reenable_current_thread(____chimes_disable16); }
# 2034 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2035 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcLagrangeElements", &____must_manage_CalcLagrangeElements, ____alias_loc_id_16, ____chimes_did_disable34, false); }

static inline
# 2007 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcLagrangeElements(Real_t deltatime) { (____chimes_replaying ? CalcLagrangeElements_resumable(deltatime) : CalcLagrangeElements_quick(deltatime)); }
# 2037 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2038 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcMonotonicQGradientsForElems_quick()
# 2039 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable35 = new_stack((void *)(&CalcMonotonicQGradientsForElems), "CalcMonotonicQGradientsForElems", &____must_manage_CalcMonotonicQGradientsForElems, 0, 0) ; ; ;
# 2040 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2041 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 2042 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_3: bool ____chimes_disable17 = disable_current_thread(); void *____chimes_parent_ctx15 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth14 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth14 = get_thread_stack_depth(); size_t ____chimes_region_id14; unsigned ____chimes_parent_thread14 = entering_omp_parallel(3, &____chimes_region_id14, 1, &numElem); int ____chimes_first_iter14 = 1;
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem) firstprivate(____chimes_first_iter14)
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2044 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < numElem ; ++i ) { { if (____chimes_first_iter14) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread14, ____chimes_parent_ctx15, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth14, ____chimes_region_id14, 1, &numElem); ____chimes_first_iter14 = 0; } {
# 2045 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t ptiny; ptiny = (1.e-36) ;
# 2046 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ax; Real_t ay; Real_t az; ;
# 2047 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dxv; Real_t dyv; Real_t dzv; ;
# 2048 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2049 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t *elemToNode; elemToNode = (domain.nodelist + (8 * i)) ;
# 2050 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n0; n0 = (elemToNode[0]) ;
# 2051 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n1; n1 = (elemToNode[1]) ;
# 2052 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n2; n2 = (elemToNode[2]) ;
# 2053 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n3; n3 = (elemToNode[3]) ;
# 2054 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n4; n4 = (elemToNode[4]) ;
# 2055 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n5; n5 = (elemToNode[5]) ;
# 2056 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n6; n6 = (elemToNode[6]) ;
# 2057 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t n7; n7 = (elemToNode[7]) ;
# 2058 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2059 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x0; x0 = (domain.x[n0]) ;
# 2060 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x1; x1 = (domain.x[n1]) ;
# 2061 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x2; x2 = (domain.x[n2]) ;
# 2062 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x3; x3 = (domain.x[n3]) ;
# 2063 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x4; x4 = (domain.x[n4]) ;
# 2064 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x5; x5 = (domain.x[n5]) ;
# 2065 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x6; x6 = (domain.x[n6]) ;
# 2066 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t x7; x7 = (domain.x[n7]) ;
# 2067 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2068 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y0; y0 = (domain.y[n0]) ;
# 2069 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y1; y1 = (domain.y[n1]) ;
# 2070 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y2; y2 = (domain.y[n2]) ;
# 2071 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y3; y3 = (domain.y[n3]) ;
# 2072 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y4; y4 = (domain.y[n4]) ;
# 2073 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y5; y5 = (domain.y[n5]) ;
# 2074 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y6; y6 = (domain.y[n6]) ;
# 2075 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t y7; y7 = (domain.y[n7]) ;
# 2076 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2077 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z0; z0 = (domain.z[n0]) ;
# 2078 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z1; z1 = (domain.z[n1]) ;
# 2079 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z2; z2 = (domain.z[n2]) ;
# 2080 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z3; z3 = (domain.z[n3]) ;
# 2081 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z4; z4 = (domain.z[n4]) ;
# 2082 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z5; z5 = (domain.z[n5]) ;
# 2083 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z6; z6 = (domain.z[n6]) ;
# 2084 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t z7; z7 = (domain.z[n7]) ;
# 2085 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2086 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv0; xv0 = (domain.xd[n0]) ;
# 2087 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv1; xv1 = (domain.xd[n1]) ;
# 2088 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv2; xv2 = (domain.xd[n2]) ;
# 2089 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv3; xv3 = (domain.xd[n3]) ;
# 2090 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv4; xv4 = (domain.xd[n4]) ;
# 2091 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv5; xv5 = (domain.xd[n5]) ;
# 2092 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv6; xv6 = (domain.xd[n6]) ;
# 2093 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t xv7; xv7 = (domain.xd[n7]) ;
# 2094 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2095 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv0; yv0 = (domain.yd[n0]) ;
# 2096 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv1; yv1 = (domain.yd[n1]) ;
# 2097 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv2; yv2 = (domain.yd[n2]) ;
# 2098 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv3; yv3 = (domain.yd[n3]) ;
# 2099 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv4; yv4 = (domain.yd[n4]) ;
# 2100 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv5; yv5 = (domain.yd[n5]) ;
# 2101 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv6; yv6 = (domain.yd[n6]) ;
# 2102 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t yv7; yv7 = (domain.yd[n7]) ;
# 2103 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2104 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv0; zv0 = (domain.zd[n0]) ;
# 2105 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv1; zv1 = (domain.zd[n1]) ;
# 2106 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv2; zv2 = (domain.zd[n2]) ;
# 2107 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv3; zv3 = (domain.zd[n3]) ;
# 2108 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv4; zv4 = (domain.zd[n4]) ;
# 2109 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv5; zv5 = (domain.zd[n5]) ;
# 2110 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv6; zv6 = (domain.zd[n6]) ;
# 2111 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t zv7; zv7 = (domain.zd[n7]) ;
# 2112 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2113 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t vol; vol = (domain.volo[i]*domain.vnew[i]) ;
# 2114 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t norm; norm = (1.0 / ( vol + ptiny )) ;
# 2115 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2116 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dxj; dxj = (-0.25*((x0 + x1 + x5 + x4) - (x3 + x2 + x6 + x7))) ;
# 2117 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dyj; dyj = (-0.25*((y0 + y1 + y5 + y4) - (y3 + y2 + y6 + y7))) ;
# 2118 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dzj; dzj = (-0.25*((z0 + z1 + z5 + z4) - (z3 + z2 + z6 + z7))) ;
# 2119 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2120 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dxi; dxi = (0.25*((x1 + x2 + x6 + x5) - (x0 + x3 + x7 + x4))) ;
# 2121 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dyi; dyi = (0.25*((y1 + y2 + y6 + y5) - (y0 + y3 + y7 + y4))) ;
# 2122 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dzi; dzi = (0.25*((z1 + z2 + z6 + z5) - (z0 + z3 + z7 + z4))) ;
# 2123 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2124 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dxk; dxk = (0.25*((x4 + x5 + x6 + x7) - (x0 + x1 + x2 + x3))) ;
# 2125 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dyk; dyk = (0.25*((y4 + y5 + y6 + y7) - (y0 + y1 + y2 + y3))) ;
# 2126 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dzk; dzk = (0.25*((z4 + z5 + z6 + z7) - (z0 + z1 + z2 + z3))) ;
# 2127 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2128 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2129 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2130 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax = dyi*dzj - dzi*dyj ;
# 2131 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay = dzi*dxj - dxi*dzj ;
# 2132 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az = dxi*dyj - dyi*dxj ;
# 2133 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2134 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: domain.delx_zeta[i] = vol / ({ calling_npm("SQRT", 0); SQRT_npm(ax*ax + ay*ay + az*az + ptiny); }) ;
# 2135 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2136 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax *= norm ;
# 2137 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay *= norm ;
# 2138 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az *= norm ;
# 2139 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2140 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dxv = 0.25*((xv4 + xv5 + xv6 + xv7) - (xv0 + xv1 + xv2 + xv3)) ;
# 2141 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dyv = 0.25*((yv4 + yv5 + yv6 + yv7) - (yv0 + yv1 + yv2 + yv3)) ;
# 2142 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dzv = 0.25*((zv4 + zv5 + zv6 + zv7) - (zv0 + zv1 + zv2 + zv3)) ;
# 2143 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2144 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delv_zeta[i] = ax*dxv + ay*dyv + az*dzv ;
# 2145 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2146 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2147 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2148 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax = dyj*dzk - dzj*dyk ;
# 2149 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay = dzj*dxk - dxj*dzk ;
# 2150 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az = dxj*dyk - dyj*dxk ;
# 2151 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2152 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: domain.delx_xi[i] = vol / ({ calling_npm("SQRT", 0); SQRT_npm(ax*ax + ay*ay + az*az + ptiny); }) ;
# 2153 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2154 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax *= norm ;
# 2155 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay *= norm ;
# 2156 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az *= norm ;
# 2157 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2158 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dxv = 0.25*((xv1 + xv2 + xv6 + xv5) - (xv0 + xv3 + xv7 + xv4)) ;
# 2159 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dyv = 0.25*((yv1 + yv2 + yv6 + yv5) - (yv0 + yv3 + yv7 + yv4)) ;
# 2160 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dzv = 0.25*((zv1 + zv2 + zv6 + zv5) - (zv0 + zv3 + zv7 + zv4)) ;
# 2161 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2162 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delv_xi[i] = ax*dxv + ay*dyv + az*dzv ;
# 2163 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2164 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2165 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2166 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax = dyk*dzi - dzk*dyi ;
# 2167 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay = dzk*dxi - dxk*dzi ;
# 2168 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az = dxk*dyi - dyk*dxi ;
# 2169 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2170 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: domain.delx_eta[i] = vol / ({ calling_npm("SQRT", 0); SQRT_npm(ax*ax + ay*ay + az*az + ptiny); }) ;
# 2171 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2172 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax *= norm ;
# 2173 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay *= norm ;
# 2174 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az *= norm ;
# 2175 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2176 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dxv = -0.25*((xv0 + xv1 + xv5 + xv4) - (xv3 + xv2 + xv6 + xv7)) ;
# 2177 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dyv = -0.25*((yv0 + yv1 + yv5 + yv4) - (yv3 + yv2 + yv6 + yv7)) ;
# 2178 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dzv = -0.25*((zv0 + zv1 + zv5 + zv4) - (zv3 + zv2 + zv6 + zv7)) ;
# 2179 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2180 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delv_eta[i] = ax*dxv + ay*dyv + az*dzv ;
# 2181 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth14, ____chimes_region_id14, 1); reenable_current_thread(____chimes_disable17); }
# 2182 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2183 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcMonotonicQGradientsForElems", &____must_manage_CalcMonotonicQGradientsForElems, ____alias_loc_id_24, ____chimes_did_disable35, false); }

static inline
# 2038 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcMonotonicQGradientsForElems() { (____chimes_replaying ? CalcMonotonicQGradientsForElems_resumable() : CalcMonotonicQGradientsForElems_quick()); }
# 2185 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2186 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcMonotonicQRegionForElems_quick(
# 2187 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t qlc_monoq,
# 2188 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t qqc_monoq,
# 2189 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t monoq_limiter_mult,
# 2190 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t monoq_max_slope,
# 2191 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t ptiny,
# 2192 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2193 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2194 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Index_t elength )
# 2195 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable36 = new_stack((void *)(&CalcMonotonicQRegionForElems), "CalcMonotonicQRegionForElems", &____must_manage_CalcMonotonicQRegionForElems, 6, 0, (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL)) ; ; ;
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_0: bool ____chimes_disable18 = disable_current_thread(); void *____chimes_parent_ctx16 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth15 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth15 = get_thread_stack_depth(); size_t ____chimes_region_id15; unsigned ____chimes_parent_thread15 = entering_omp_parallel(0, &____chimes_region_id15, 6, &elength, &monoq_limiter_mult, &monoq_max_slope, &ptiny, &qlc_monoq, &qqc_monoq); int ____chimes_first_iter15 = 1;
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(elength, qlc_monoq, qqc_monoq, monoq_limiter_mult, monoq_max_slope, ptiny) firstprivate(____chimes_first_iter15)
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2197 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for ( Index_t ielem = 0 ; ielem < elength; ++ielem ) { { if (____chimes_first_iter15) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread15, ____chimes_parent_ctx16, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth15, ____chimes_region_id15, 6, &elength, &monoq_limiter_mult, &monoq_max_slope, &ptiny, &qlc_monoq, &qqc_monoq); ____chimes_first_iter15 = 0; } {
# 2198 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t qlin; Real_t qquad; ;
# 2199 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t phixi; Real_t phieta; Real_t phizeta; ;
# 2200 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t i; i = (domain.matElemlist[ielem]) ;
# 2201 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Int_t bcMask; bcMask = (domain.elemBC[i]) ;
# 2202 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t delvm; Real_t delvp; ;
# 2203 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2204 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2205 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t norm; norm = (1. / ( domain.delv_xi[i] + ptiny )) ;
# 2206 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2207 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x003) {
# 2208 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvm = domain.delv_xi[domain.lxim[i]] ; break ;
# 2209 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x001: delvm = domain.delv_xi[i] ; break ;
# 2210 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x002: delvm = 0.0 ; break ;
# 2211 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2212 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2213 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x00c) {
# 2214 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvp = domain.delv_xi[domain.lxip[i]] ; break ;
# 2215 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x004: delvp = domain.delv_xi[i] ; break ;
# 2216 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x008: delvp = 0.0 ; break ;
# 2217 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2218 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2219 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2220 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm = delvm * norm ;
# 2221 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp = delvp * norm ;
# 2222 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2223 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  phixi = .5 * ( delvm + delvp ) ;
# 2224 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2225 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm *= monoq_limiter_mult ;
# 2226 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp *= monoq_limiter_mult ;
# 2227 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2228 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvm < phixi) {phixi = delvm; } ;
# 2229 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvp < phixi) {phixi = delvp; } ;
# 2230 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phixi < 0.) {phixi = 0.; } ;
# 2231 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phixi > monoq_max_slope) {phixi = monoq_max_slope; };
# 2232 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2233 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2235 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  norm = 1. / ( domain.delv_eta[i] + ptiny ) ;
# 2236 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2237 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x030) {
# 2238 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvm = domain.delv_eta[domain.letam[i]] ; break ;
# 2239 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x010: delvm = domain.delv_eta[i] ; break ;
# 2240 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x020: delvm = Real_t(0.0) ; break ;
# 2241 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2242 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2243 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x0c0) {
# 2244 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvp = domain.delv_eta[domain.letap[i]] ; break ;
# 2245 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x040: delvp = domain.delv_eta[i] ; break ;
# 2246 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x080: delvp = Real_t(0.0) ; break ;
# 2247 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2248 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2249 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2250 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm = delvm * norm ;
# 2251 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp = delvp * norm ;
# 2252 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2253 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  phieta = Real_t(.5) * ( delvm + delvp ) ;
# 2254 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2255 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm *= monoq_limiter_mult ;
# 2256 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp *= monoq_limiter_mult ;
# 2257 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2258 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvm < phieta) {phieta = delvm; } ;
# 2259 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvp < phieta) {phieta = delvp; } ;
# 2260 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phieta < Real_t(0.)) {phieta = Real_t(0.); } ;
# 2261 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phieta > monoq_max_slope) {phieta = monoq_max_slope; };
# 2262 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2263 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2264 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  norm = Real_t(1.) / ( domain.delv_zeta[i] + ptiny ) ;
# 2265 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2266 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x300) {
# 2267 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvm = domain.delv_zeta[domain.lzetam[i]] ; break ;
# 2268 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x100: delvm = domain.delv_zeta[i] ; break ;
# 2269 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x200: delvm = Real_t(0.0) ; break ;
# 2270 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2271 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2272 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0xc00) {
# 2273 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvp = domain.delv_zeta[domain.lzetap[i]] ; break ;
# 2274 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x400: delvp = domain.delv_zeta[i] ; break ;
# 2275 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x800: delvp = Real_t(0.0) ; break ;
# 2276 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2277 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2278 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2279 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm = delvm * norm ;
# 2280 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp = delvp * norm ;
# 2281 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2282 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  phizeta = Real_t(.5) * ( delvm + delvp ) ;
# 2283 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2284 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm *= monoq_limiter_mult ;
# 2285 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp *= monoq_limiter_mult ;
# 2286 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2287 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvm < phizeta) {phizeta = delvm; } ;
# 2288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvp < phizeta) {phizeta = delvp; } ;
# 2289 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phizeta < Real_t(0.)) {phizeta = Real_t(0.); };
# 2290 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phizeta > monoq_max_slope) {phizeta = monoq_max_slope; };
# 2291 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2292 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2293 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2294 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( domain.vdov[i] > Real_t(0.) ) {
# 2295 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qlin = Real_t(0.) ;
# 2296 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qquad = Real_t(0.) ;
# 2297 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2298 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  else {
# 2299 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t delvxxi; delvxxi = (domain.delv_xi[i] * domain.delx_xi[i]) ;
# 2300 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t delvxeta; delvxeta = (domain.delv_eta[i] * domain.delx_eta[i]) ;
# 2301 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t delvxzeta; delvxzeta = (domain.delv_zeta[i] * domain.delx_zeta[i]) ;
# 2302 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2303 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (delvxxi > Real_t(0.)) {delvxxi = Real_t(0.); } ;
# 2304 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (delvxeta > Real_t(0.)) {delvxeta = Real_t(0.); } ;
# 2305 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (delvxzeta > Real_t(0.)) {delvxzeta = Real_t(0.); } ;
# 2306 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2307 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t rho; rho = (domain.elemMass[i] / (domain.volo[i] * domain.vnew[i])) ;
# 2308 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2309 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qlin = -qlc_monoq * rho *
# 2310 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            ( delvxxi * (Real_t(1.) - phixi) +
# 2311 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    delvxeta * (Real_t(1.) - phieta) +
# 2312 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    delvxzeta * (Real_t(1.) - phizeta) ) ;
# 2313 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2314 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qquad = qqc_monoq * rho *
# 2315 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            ( delvxxi*delvxxi * (Real_t(1.) - phixi*phixi) +
# 2316 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    delvxeta*delvxeta * (Real_t(1.) - phieta*phieta) +
# 2317 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    delvxzeta*delvxzeta * (Real_t(1.) - phizeta*phizeta) ) ;
# 2318 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2319 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2320 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.qq[i] = qquad ;
# 2321 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.ql[i] = qlin ;
# 2322 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth15, ____chimes_region_id15, 1); reenable_current_thread(____chimes_disable18); }
# 2323 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcMonotonicQRegionForElems", &____must_manage_CalcMonotonicQRegionForElems, ____alias_loc_id_26, ____chimes_did_disable36, false); }

static inline
# 2186 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcMonotonicQRegionForElems(
# 2187 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t qlc_monoq,
# 2188 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t qqc_monoq,
# 2189 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t monoq_limiter_mult,
# 2190 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t monoq_max_slope,
# 2191 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t ptiny,
# 2192 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2193 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2194 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Index_t elength ) { (____chimes_replaying ? CalcMonotonicQRegionForElems_resumable(qlc_monoq, qqc_monoq, monoq_limiter_mult, monoq_max_slope, ptiny, elength) : CalcMonotonicQRegionForElems_quick(qlc_monoq, qqc_monoq, monoq_limiter_mult, monoq_max_slope, ptiny, elength)); }
# 2325 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2326 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcMonotonicQForElems_quick()
# 2327 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable37 = new_stack((void *)(&CalcMonotonicQForElems), "CalcMonotonicQForElems", &____must_manage_CalcMonotonicQForElems, 0, 0) ; ; ;
# 2328 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2329 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2330 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2331 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ptiny; ptiny = (Real_t(1.e-36)) ;
# 2332 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t monoq_max_slope; monoq_max_slope = (domain.monoq_max_slope) ;
# 2333 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t monoq_limiter_mult; monoq_limiter_mult = (domain.monoq_limiter_mult) ;
# 2334 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2335 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2336 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2337 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2338 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t elength; elength = (domain.numElem) ;
# 2339 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (elength > 0) {
# 2340 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t qlc_monoq; qlc_monoq = (domain.qlc_monoq) ;
# 2341 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t qqc_monoq; qqc_monoq = (domain.qqc_monoq) ;
# 2342 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: ({ calling_npm("CalcMonotonicQRegionForElems", 0); CalcMonotonicQRegionForElems_npm(qlc_monoq, qqc_monoq, monoq_limiter_mult, monoq_max_slope, ptiny, elength); });
# 2351 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2352 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcMonotonicQForElems", &____must_manage_CalcMonotonicQForElems, ____alias_loc_id_25, ____chimes_did_disable37, false); }

static inline
# 2326 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcMonotonicQForElems() { (____chimes_replaying ? CalcMonotonicQForElems_resumable() : CalcMonotonicQForElems_quick()); }
# 2354 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2355 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcQForElems_quick()
# 2356 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable38 = new_stack((void *)(&CalcQForElems), "CalcQForElems", &____must_manage_CalcQForElems, 0, 0) ; ; ;
# 2357 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t qstop; qstop = (domain.qstop) ;
# 2358 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 2359 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2360 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2361 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2362 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2363 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2364 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2365 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcMonotonicQGradientsForElems", 0); CalcMonotonicQGradientsForElems_npm(); }) ;
# 2366 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2367 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2368 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2369 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("CalcMonotonicQForElems", 0); CalcMonotonicQForElems_npm(); }) ;
# 2370 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2371 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2372 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (numElem != 0) {
# 2373 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t idx; idx = (-1) ;
# 2374 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t i; for ( i = (0) ; i<numElem; ++i) {
# 2375 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if ( domain.q[i] > qstop ) {
# 2376 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    idx = i ;
# 2377 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    break ;
# 2378 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2379 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 2380 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2381 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if(idx >= 0) {
# 2382 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   exit(QStopError) ;
# 2383 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2384 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2385 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcQForElems", &____must_manage_CalcQForElems, ____alias_loc_id_17, ____chimes_did_disable38, false); }

static inline
# 2355 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcQForElems() { (____chimes_replaying ? CalcQForElems_resumable() : CalcQForElems_quick()); }
# 2387 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2388 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcPressureForElems_quick(Real_t* p_new, Real_t* bvc,
# 2389 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t* pbvc, Real_t* e_old,
# 2390 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t* compression, Real_t *vnewc,
# 2391 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t pmin,
# 2392 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t p_cut, Real_t eosvmax,
# 2393 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Index_t length)
# 2394 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable39 = new_stack((void *)(&CalcPressureForElems), "CalcPressureForElems", &____must_manage_CalcPressureForElems, 10, 0, (size_t)(2224956529753669537UL), (size_t)(2224956529753669538UL), (size_t)(2224956529753669539UL), (size_t)(2224956529753669540UL), (size_t)(2224956529753669541UL), (size_t)(2224956529753669542UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL)) ; ; ;
# 2395 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_1: bool ____chimes_disable19 = disable_current_thread(); void *____chimes_parent_ctx17 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth16 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth16 = get_thread_stack_depth(); size_t ____chimes_region_id16; unsigned ____chimes_parent_thread16 = entering_omp_parallel(1, &____chimes_region_id16, 1, &length); int ____chimes_first_iter16 = 1;
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length) firstprivate(____chimes_first_iter16)
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2397 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0; i < length ; ++i) { { if (____chimes_first_iter16) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread16, ____chimes_parent_ctx17, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth16, ____chimes_region_id16, 1, &length); ____chimes_first_iter16 = 0; } {
# 2398 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t c1s; c1s = (Real_t(2.0)/Real_t(3.0)) ;
# 2399 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  bvc[i] = c1s * (compression[i] + Real_t(1.));
# 2400 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  pbvc[i] = c1s;
# 2401 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth16, ____chimes_region_id16, 1); reenable_current_thread(____chimes_disable19); }
# 2402 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_2: bool ____chimes_disable20 = disable_current_thread(); void *____chimes_parent_ctx18 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth17 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth17 = get_thread_stack_depth(); size_t ____chimes_region_id17; unsigned ____chimes_parent_thread17 = entering_omp_parallel(2, &____chimes_region_id17, 4, &eosvmax, &length, &p_cut, &pmin); int ____chimes_first_iter17 = 1;
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, pmin, p_cut, eosvmax) firstprivate(____chimes_first_iter17)
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2404 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i){ { if (____chimes_first_iter17) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread17, ____chimes_parent_ctx18, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth17, ____chimes_region_id17, 4, &eosvmax, &length, &p_cut, &pmin); ____chimes_first_iter17 = 0; } {
# 2405 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  p_new[i] = bvc[i] * e_old[i] ;
# 2406 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2407 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: if (({ calling_npm("FABS", 0); FABS_npm(p_new[i]); }) < p_cut) {p_new[i] = Real_t(0.0); } ;
# 2409 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2410 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (vnewc[i] >= eosvmax) {p_new[i] = Real_t(0.0); } ;
# 2412 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2413 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (p_new[i] < pmin) {p_new[i] = pmin; } ;
# 2415 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth17, ____chimes_region_id17, 1); reenable_current_thread(____chimes_disable20); }
# 2416 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcPressureForElems", &____must_manage_CalcPressureForElems, ____alias_loc_id_23, ____chimes_did_disable39, false); }

static inline
# 2388 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcPressureForElems(Real_t* p_new, Real_t* bvc,
# 2389 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t* pbvc, Real_t* e_old,
# 2390 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t* compression, Real_t *vnewc,
# 2391 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t pmin,
# 2392 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t p_cut, Real_t eosvmax,
# 2393 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Index_t length) { (____chimes_replaying ? CalcPressureForElems_resumable(p_new, bvc, pbvc, e_old, compression, vnewc, pmin, p_cut, eosvmax, length) : CalcPressureForElems_quick(p_new, bvc, pbvc, e_old, compression, vnewc, pmin, p_cut, eosvmax, length)); }
# 2418 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2419 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcEnergyForElems_quick(Real_t* p_new, Real_t* e_new, Real_t* q_new,
# 2420 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* bvc, Real_t* pbvc,
# 2421 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* p_old, Real_t* e_old, Real_t* q_old,
# 2422 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* compression, Real_t* compHalfStep,
# 2423 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* vnewc, Real_t* work, Real_t* delvc, Real_t pmin,
# 2424 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t p_cut, Real_t e_cut, Real_t q_cut, Real_t emin,
# 2425 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* qq, Real_t* ql,
# 2426 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t rho0,
# 2427 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t eosvmax,
# 2428 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Index_t length)
# 2429 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable40 = new_stack((void *)(&CalcEnergyForElems), "CalcEnergyForElems", &____must_manage_CalcEnergyForElems, 23, 0, (size_t)(2224956529753669266UL), (size_t)(2224956529753669267UL), (size_t)(2224956529753669268UL), (size_t)(2224956529753669269UL), (size_t)(2224956529753669270UL), (size_t)(2224956529753669271UL), (size_t)(2224956529753669272UL), (size_t)(2224956529753669273UL), (size_t)(2224956529753669274UL), (size_t)(2224956529753669275UL), (size_t)(2224956529753669276UL), (size_t)(2224956529753669277UL), (size_t)(2224956529753669278UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL), (size_t)(2224956529753669284UL), (size_t)(2224956529753669285UL), (size_t)(0UL), (size_t)(0UL), (size_t)(0UL)) ; ; ;
# 2430 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *pHalfStep; pHalfStep = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668695UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2431 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((pHalfStep) ? static_cast<void> (0) : __assert_fail ("pHalfStep", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2431, __PRETTY_FUNCTION__));
# 2432 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_9: bool ____chimes_disable21 = disable_current_thread(); void *____chimes_parent_ctx19 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth18 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth18 = get_thread_stack_depth(); size_t ____chimes_region_id18; unsigned ____chimes_parent_thread18 = entering_omp_parallel(9, &____chimes_region_id18, 2, &emin, &length); int ____chimes_first_iter18 = 1;
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, emin) firstprivate(____chimes_first_iter18)
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2434 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i) { { if (____chimes_first_iter18) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread18, ____chimes_parent_ctx19, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth18, ____chimes_region_id18, 2, &emin, &length); ____chimes_first_iter18 = 0; } {
# 2435 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  e_new[i] = e_old[i] - Real_t(0.5) * delvc[i] * (p_old[i] + q_old[i])
# 2436 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  + Real_t(0.5) * work[i];
# 2437 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2438 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (e_new[i] < emin ) {
# 2439 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = emin ;
# 2440 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2441 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth18, ____chimes_region_id18, 1); reenable_current_thread(____chimes_disable21); }
# 2442 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2443 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcPressureForElems", 0); CalcPressureForElems_npm(pHalfStep, bvc, pbvc, e_new, compHalfStep, vnewc, pmin, p_cut, eosvmax, length); });
# 2445 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_10: bool ____chimes_disable22 = disable_current_thread(); void *____chimes_parent_ctx20 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth19 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth19 = get_thread_stack_depth(); size_t ____chimes_region_id19; unsigned ____chimes_parent_thread19 = entering_omp_parallel(10, &____chimes_region_id19, 2, &length, &rho0); int ____chimes_first_iter19 = 1;
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, rho0) firstprivate(____chimes_first_iter19)
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2447 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i) { { if (____chimes_first_iter19) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread19, ____chimes_parent_ctx20, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth19, ____chimes_region_id19, 2, &length, &rho0); ____chimes_first_iter19 = 0; } {
# 2448 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t vhalf; vhalf = (Real_t(1.) / (Real_t(1.) + compHalfStep[i])) ;
# 2449 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2450 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( delvc[i] > Real_t(0.) ) {
# 2451 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_new[i] = Real_t(0.) ;
# 2452 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2453 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  else {
# 2454 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t ssc; ssc = (( pbvc[i] * e_new[i]
# 2455 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + vhalf * vhalf * bvc[i] * pHalfStep[i] ) / rho0) ;
# 2456 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2457 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if ( ssc <= Real_t(.111111e-36) ) {
# 2458 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ssc =Real_t(.333333e-18) ;
# 2459 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } else {
# 2460 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     call_lbl_1: ssc = ({ calling_npm("SQRT", 0); SQRT_npm(ssc); }) ;
# 2461 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2462 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2463 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_new[i] = (ssc*ql[i] + qq[i]) ;
# 2464 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2465 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2466 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  e_new[i] = e_new[i] + Real_t(0.5) * delvc[i]
# 2467 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  * ( Real_t(3.0)*(p_old[i] + q_old[i])
# 2468 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     - Real_t(4.0)*(pHalfStep[i] + q_new[i])) ;
# 2469 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth19, ____chimes_region_id19, 1); reenable_current_thread(____chimes_disable22); }
# 2470 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_11: bool ____chimes_disable23 = disable_current_thread(); void *____chimes_parent_ctx21 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth20 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth20 = get_thread_stack_depth(); size_t ____chimes_region_id20; unsigned ____chimes_parent_thread20 = entering_omp_parallel(11, &____chimes_region_id20, 3, &e_cut, &emin, &length); int ____chimes_first_iter20 = 1;
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, emin, e_cut) firstprivate(____chimes_first_iter20)
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2472 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i) { { if (____chimes_first_iter20) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread20, ____chimes_parent_ctx21, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth20, ____chimes_region_id20, 3, &e_cut, &emin, &length); ____chimes_first_iter20 = 0; } {
# 2473 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2474 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  e_new[i] += Real_t(0.5) * work[i];
# 2475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2476 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_2: if (({ calling_npm("FABS", 0); FABS_npm(e_new[i]); }) < e_cut) {
# 2477 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = Real_t(0.) ;
# 2478 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2479 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( e_new[i] < emin ) {
# 2480 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = emin ;
# 2481 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2482 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth20, ____chimes_region_id20, 1); reenable_current_thread(____chimes_disable23); }
# 2483 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2484 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: ({ calling_npm("CalcPressureForElems", 0); CalcPressureForElems_npm(p_new, bvc, pbvc, e_new, compression, vnewc, pmin, p_cut, eosvmax, length); });
# 2486 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_12: bool ____chimes_disable24 = disable_current_thread(); void *____chimes_parent_ctx22 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth21 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth21 = get_thread_stack_depth(); size_t ____chimes_region_id21; unsigned ____chimes_parent_thread21 = entering_omp_parallel(12, &____chimes_region_id21, 4, &e_cut, &emin, &length, &rho0); int ____chimes_first_iter21 = 1;
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, rho0, emin, e_cut) firstprivate(____chimes_first_iter21)
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2488 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i){ { if (____chimes_first_iter21) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread21, ____chimes_parent_ctx22, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth21, ____chimes_region_id21, 4, &e_cut, &emin, &length, &rho0); ____chimes_first_iter21 = 0; } {
# 2489 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t sixth; sixth = (Real_t(1.0) / Real_t(6.0)) ;
# 2490 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t q_tilde; ;
# 2491 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2492 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvc[i] > Real_t(0.)) {
# 2493 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_tilde = Real_t(0.) ;
# 2494 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2495 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  else {
# 2496 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t ssc; ssc = (( pbvc[i] * e_new[i]
# 2497 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + vnewc[i] * vnewc[i] * bvc[i] * p_new[i] ) / rho0) ;
# 2498 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2499 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if ( ssc <= Real_t(.111111e-36) ) {
# 2500 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ssc = Real_t(.333333e-18) ;
# 2501 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } else {
# 2502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     call_lbl_4: ssc = ({ calling_npm("SQRT", 0); SQRT_npm(ssc); }) ;
# 2503 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2504 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2505 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_tilde = (ssc*ql[i] + qq[i]) ;
# 2506 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2507 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2508 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  e_new[i] = e_new[i] - ( Real_t(7.0)*(p_old[i] + q_old[i])
# 2509 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                               - Real_t(8.0)*(pHalfStep[i] + q_new[i])
# 2510 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                               + (p_new[i] + q_tilde)) * delvc[i]*sixth ;
# 2511 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2512 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_5: if (({ calling_npm("FABS", 0); FABS_npm(e_new[i]); }) < e_cut) {
# 2513 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = Real_t(0.) ;
# 2514 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( e_new[i] < emin ) {
# 2516 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = emin ;
# 2517 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2518 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth21, ____chimes_region_id21, 1); reenable_current_thread(____chimes_disable24); }
# 2519 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2520 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_6: ({ calling_npm("CalcPressureForElems", 0); CalcPressureForElems_npm(p_new, bvc, pbvc, e_new, compression, vnewc, pmin, p_cut, eosvmax, length); });
# 2522 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_13: bool ____chimes_disable25 = disable_current_thread(); void *____chimes_parent_ctx23 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth22 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth22 = get_thread_stack_depth(); size_t ____chimes_region_id22; unsigned ____chimes_parent_thread22 = entering_omp_parallel(13, &____chimes_region_id22, 3, &length, &q_cut, &rho0); int ____chimes_first_iter22 = 1;
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, rho0, q_cut) firstprivate(____chimes_first_iter22)
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2524 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i){ { if (____chimes_first_iter22) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread22, ____chimes_parent_ctx23, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth22, ____chimes_region_id22, 3, &length, &q_cut, &rho0); ____chimes_first_iter22 = 0; } {
# 2525 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2526 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( delvc[i] <= Real_t(0.) ) {
# 2527 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t ssc; ssc = (( pbvc[i] * e_new[i]
# 2528 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + vnewc[i] * vnewc[i] * bvc[i] * p_new[i] ) / rho0) ;
# 2529 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2530 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if ( ssc <= Real_t(.111111e-36) ) {
# 2531 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ssc = Real_t(.333333e-18) ;
# 2532 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } else {
# 2533 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     call_lbl_7: ssc = ({ calling_npm("SQRT", 0); SQRT_npm(ssc); }) ;
# 2534 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2535 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2536 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_new[i] = (ssc*ql[i] + qq[i]) ;
# 2537 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2538 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    call_lbl_8: if (({ calling_npm("FABS", 0); FABS_npm(q_new[i]); }) < q_cut) {q_new[i] = Real_t(0.); } ;
# 2539 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2540 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth22, ____chimes_region_id22, 1); reenable_current_thread(____chimes_disable25); }
# 2541 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2542 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)pHalfStep) - sizeof(void *)), 2224956529753668695UL);free((((unsigned char *)pHalfStep) - sizeof(void *))); }) ;
# 2543 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2544 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 rm_stack(false, 0UL, "CalcEnergyForElems", &____must_manage_CalcEnergyForElems, ____alias_loc_id_21, ____chimes_did_disable40, false); return ;
# 2545 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}

static inline
# 2419 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcEnergyForElems(Real_t* p_new, Real_t* e_new, Real_t* q_new,
# 2420 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* bvc, Real_t* pbvc,
# 2421 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* p_old, Real_t* e_old, Real_t* q_old,
# 2422 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* compression, Real_t* compHalfStep,
# 2423 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* vnewc, Real_t* work, Real_t* delvc, Real_t pmin,
# 2424 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t p_cut, Real_t e_cut, Real_t q_cut, Real_t emin,
# 2425 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* qq, Real_t* ql,
# 2426 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t rho0,
# 2427 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t eosvmax,
# 2428 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Index_t length) { (____chimes_replaying ? CalcEnergyForElems_resumable(p_new, e_new, q_new, bvc, pbvc, p_old, e_old, q_old, compression, compHalfStep, vnewc, work, delvc, pmin, p_cut, e_cut, q_cut, emin, qq, ql, rho0, eosvmax, length) : CalcEnergyForElems_quick(p_new, e_new, q_new, bvc, pbvc, p_old, e_old, q_old, compression, compHalfStep, vnewc, work, delvc, pmin, p_cut, e_cut, q_cut, emin, qq, ql, rho0, eosvmax, length)); }
# 2547 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2548 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcSoundSpeedForElems_quick(Real_t *vnewc, Real_t rho0, Real_t *enewc,
# 2549 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                            Real_t *pnewc, Real_t *pbvc,
# 2550 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                            Real_t *bvc, Real_t ss4o3, Index_t nz)
# 2551 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable41 = new_stack((void *)(&CalcSoundSpeedForElems), "CalcSoundSpeedForElems", &____must_manage_CalcSoundSpeedForElems, 8, 0, (size_t)(2224956529753669390UL), (size_t)(0UL), (size_t)(2224956529753669392UL), (size_t)(2224956529753669393UL), (size_t)(2224956529753669394UL), (size_t)(2224956529753669395UL), (size_t)(0UL), (size_t)(0UL)) ; ; ;
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_1: bool ____chimes_disable26 = disable_current_thread(); void *____chimes_parent_ctx24 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth23 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth23 = get_thread_stack_depth(); size_t ____chimes_region_id23; unsigned ____chimes_parent_thread23 = entering_omp_parallel(1, &____chimes_region_id23, 3, &nz, &rho0, &ss4o3); int ____chimes_first_iter23 = 1;
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(nz, rho0, ss4o3) firstprivate(____chimes_first_iter23)
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2553 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0; i < nz ; ++i) { { if (____chimes_first_iter23) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread23, ____chimes_parent_ctx24, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth23, ____chimes_region_id23, 3, &nz, &rho0, &ss4o3); ____chimes_first_iter23 = 0; } {
# 2554 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t iz; iz = (domain.matElemlist[i]) ;
# 2555 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t ssTmp; ssTmp = ((pbvc[i] * enewc[i] + vnewc[i] * vnewc[i] *
# 2556 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
      bvc[i] * pnewc[i]) / rho0) ;
# 2557 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (ssTmp <= Real_t(.111111e-36)) {
# 2558 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ssTmp = Real_t(.333333e-18);
# 2559 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2560 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  else {
# 2561 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    call_lbl_0: ssTmp = ({ calling_npm("SQRT", 0); SQRT_npm(ssTmp); });
# 2562 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2563 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.ss[iz] = ssTmp;
# 2564 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth23, ____chimes_region_id23, 1); reenable_current_thread(____chimes_disable26); }
# 2565 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcSoundSpeedForElems", &____must_manage_CalcSoundSpeedForElems, ____alias_loc_id_22, ____chimes_did_disable41, false); }

static inline
# 2548 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcSoundSpeedForElems(Real_t *vnewc, Real_t rho0, Real_t *enewc,
# 2549 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                            Real_t *pnewc, Real_t *pbvc,
# 2550 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                            Real_t *bvc, Real_t ss4o3, Index_t nz) { (____chimes_replaying ? CalcSoundSpeedForElems_resumable(vnewc, rho0, enewc, pnewc, pbvc, bvc, ss4o3, nz) : CalcSoundSpeedForElems_quick(vnewc, rho0, enewc, pnewc, pbvc, bvc, ss4o3, nz)); }
# 2567 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2568 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void EvalEOSForElems_quick(Real_t *vnewc, Index_t length)
# 2569 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable42 = new_stack((void *)(&EvalEOSForElems), "EvalEOSForElems", &____must_manage_EvalEOSForElems, 2, 0, (size_t)(2224956529753668607UL), (size_t)(0UL)) ; ; ;
# 2570 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t e_cut; e_cut = (domain.e_cut) ;
# 2571 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t p_cut; p_cut = (domain.p_cut) ;
# 2572 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ss4o3; ss4o3 = (domain.ss4o3) ;
# 2573 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t q_cut; q_cut = (domain.q_cut) ;
# 2574 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2575 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t eosvmax; eosvmax = (domain.eosvmax) ;
# 2576 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t eosvmin; eosvmin = (domain.eosvmin) ;
# 2577 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pmin; pmin = (domain.pmin) ;
# 2578 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t emin; emin = (domain.emin) ;
# 2579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t rho0; rho0 = (domain.refdens) ;
# 2580 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2581 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *e_old; e_old = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753667971UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2582 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *delvc; delvc = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668072UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2583 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *p_old; p_old = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668079UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2584 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *q_old; q_old = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668086UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2585 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *compression; compression = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668093UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2586 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *compHalfStep; compHalfStep = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668100UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2587 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *qq; qq = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668107UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2588 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *ql; ql = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668114UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2589 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *work; work = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668121UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2590 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *p_new; p_new = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668128UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2591 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *e_new; e_new = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668135UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2592 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *q_new; q_new = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668142UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2593 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *bvc; bvc = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668149UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2594 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *pbvc; pbvc = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668156UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2595 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((e_old) ? static_cast<void> (0) : __assert_fail ("e_old", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2595, __PRETTY_FUNCTION__)); ((delvc) ? static_cast<void> (0) : __assert_fail ("delvc", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2595, __PRETTY_FUNCTION__)); ((p_old) ? static_cast<void> (0) : __assert_fail ("p_old", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2595, __PRETTY_FUNCTION__)); ((q_old) ? static_cast<void> (0) : __assert_fail ("q_old", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2595, __PRETTY_FUNCTION__));
# 2596 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((compression) ? static_cast<void> (0) : __assert_fail ("compression", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2596, __PRETTY_FUNCTION__)); ((compHalfStep) ? static_cast<void> (0) : __assert_fail ("compHalfStep", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2596, __PRETTY_FUNCTION__)); ((qq) ? static_cast<void> (0) : __assert_fail ("qq", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2596, __PRETTY_FUNCTION__));
# 2597 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((ql) ? static_cast<void> (0) : __assert_fail ("ql", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2597, __PRETTY_FUNCTION__)); ((work) ? static_cast<void> (0) : __assert_fail ("work", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2597, __PRETTY_FUNCTION__)); ((p_new) ? static_cast<void> (0) : __assert_fail ("p_new", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2597, __PRETTY_FUNCTION__)); ((e_new) ? static_cast<void> (0) : __assert_fail ("e_new", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2597, __PRETTY_FUNCTION__));
# 2598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((q_new) ? static_cast<void> (0) : __assert_fail ("q_new", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2598, __PRETTY_FUNCTION__)); ((bvc) ? static_cast<void> (0) : __assert_fail ("bvc", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2598, __PRETTY_FUNCTION__)); ((pbvc) ? static_cast<void> (0) : __assert_fail ("pbvc", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2598, __PRETTY_FUNCTION__));
# 2599 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2600 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_2: void *____chimes_parent_ctx25 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth24 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth24 = get_thread_stack_depth(); size_t ____chimes_region_id24; unsigned ____chimes_parent_thread24 = entering_omp_parallel(2, &____chimes_region_id24, 0);
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2602 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread24, ____chimes_parent_ctx25, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth24, ____chimes_region_id24, 0); if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } {
# 2603 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t i; ;
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable28; ____chimes_disable28 = disable_current_thread();
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2605 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (i=0; i<length; ++i) { {
# 2606 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[i]) ;
# 2607 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_old[i] = domain.e[zidx] ;
# 2608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable28);
# 2609 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2610 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t j; ;
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable29; ____chimes_disable29 = disable_current_thread();
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2612 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (j=0; j<length; ++j) { {
# 2613 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[j]) ;
# 2614 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   delvc[j] = domain.delv[zidx] ;
# 2615 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable29);
# 2616 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t k; ;
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable30; ____chimes_disable30 = disable_current_thread();
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2619 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (k=0; k<length; ++k) { {
# 2620 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[k]) ;
# 2621 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   p_old[k] = domain.p[zidx] ;
# 2622 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable30);
# 2623 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2624 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t l; ;
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable31; ____chimes_disable31 = disable_current_thread();
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2626 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (l=0; l<length; ++l) { {
# 2627 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[l]) ;
# 2628 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_old[l] = domain.q[zidx] ;
# 2629 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable31);
# 2630 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t m; ;
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable32; ____chimes_disable32 = disable_current_thread();
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2633 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (m = 0; m < length ; ++m) { {
# 2634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t vchalf; ;
# 2635 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   compression[m] = Real_t(1.) / vnewc[m] - Real_t(1.);
# 2636 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   vchalf = vnewc[m] - delvc[m] * Real_t(.5);
# 2637 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   compHalfStep[m] = Real_t(1.) / vchalf - Real_t(1.);
# 2638 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable32);
# 2639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2640 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2641 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( eosvmin != Real_t(0.) ) {
# 2642 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t n; ;
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable33; ____chimes_disable33 = disable_current_thread();
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmin)
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for(n=0 ; n<length ; ++n) { {
# 2645 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (vnewc[n] <= eosvmin) {
# 2646 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     compHalfStep[n] = compression[n] ;
# 2647 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2648 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } } reenable_current_thread(____chimes_disable33);
# 2649 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2650 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( eosvmax != Real_t(0.) ) {
# 2651 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t p; ;
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable34; ____chimes_disable34 = disable_current_thread();
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmax)
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2653 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for(p=0 ; p<length ; ++p) { {
# 2654 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (vnewc[p] >= eosvmax) {
# 2655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     p_old[p] = Real_t(0.) ;
# 2656 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     compression[p] = Real_t(0.) ;
# 2657 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     compHalfStep[p] = Real_t(0.) ;
# 2658 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2659 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } } reenable_current_thread(____chimes_disable34);
# 2660 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2661 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2662 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t q; ;
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable35; ____chimes_disable35 = disable_current_thread();
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2664 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (q = 0 ; q < length ; ++q) { {
# 2665 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[q]) ;
# 2666 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qq[q] = domain.qq[zidx] ;
# 2667 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ql[q] = domain.ql[zidx] ;
# 2668 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   work[q] = Real_t(0.) ;
# 2669 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable35);
# 2670 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } thread_leaving(); } } leaving_omp_parallel(____chimes_call_stack_depth24, ____chimes_region_id24, 0); }
# 2671 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2672 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcEnergyForElems", 0); CalcEnergyForElems_npm(p_new, e_new, q_new, bvc, pbvc, p_old, e_old, q_old, compression, compHalfStep, vnewc, work, delvc, pmin, p_cut, e_cut, q_cut, emin, qq, ql, rho0, eosvmax, length); });
# 2677 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2678 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_11: void *____chimes_parent_ctx26 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth25 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth25 = get_thread_stack_depth(); size_t ____chimes_region_id25; unsigned ____chimes_parent_thread25 = entering_omp_parallel(11, &____chimes_region_id25, 0);
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2680 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread25, ____chimes_parent_ctx26, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth25, ____chimes_region_id25, 0); if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } {
# 2681 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t i; ;
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable37; ____chimes_disable37 = disable_current_thread();
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2683 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (i=0; i<length; ++i) { {
# 2684 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[i]) ;
# 2685 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.p[zidx] = p_new[i] ;
# 2686 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable37);
# 2687 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2688 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t j; ;
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable38; ____chimes_disable38 = disable_current_thread();
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2690 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (j=0; j<length; ++j) { {
# 2691 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[j]) ;
# 2692 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.e[zidx] = e_new[j] ;
# 2693 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable38);
# 2694 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2695 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t k; ;
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable39; ____chimes_disable39 = disable_current_thread();
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2697 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (k=0; k<length; ++k) { {
# 2698 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zidx; zidx = (domain.matElemlist[k]) ;
# 2699 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.q[zidx] = q_new[k] ;
# 2700 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } reenable_current_thread(____chimes_disable39);
# 2701 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } thread_leaving(); } } leaving_omp_parallel(____chimes_call_stack_depth25, ____chimes_region_id25, 0); }
# 2702 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2703 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("CalcSoundSpeedForElems", 0); CalcSoundSpeedForElems_npm(vnewc, rho0, e_new, p_new, pbvc, bvc, ss4o3, length); }) ;
# 2705 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2706 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)pbvc) - sizeof(void *)), 2224956529753668156UL);free((((unsigned char *)pbvc) - sizeof(void *))); }) ;
# 2707 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)bvc) - sizeof(void *)), 2224956529753668149UL);free((((unsigned char *)bvc) - sizeof(void *))); }) ;
# 2708 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)q_new) - sizeof(void *)), 2224956529753668142UL);free((((unsigned char *)q_new) - sizeof(void *))); }) ;
# 2709 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)e_new) - sizeof(void *)), 2224956529753668135UL);free((((unsigned char *)e_new) - sizeof(void *))); }) ;
# 2710 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)p_new) - sizeof(void *)), 2224956529753668128UL);free((((unsigned char *)p_new) - sizeof(void *))); }) ;
# 2711 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)work) - sizeof(void *)), 2224956529753668121UL);free((((unsigned char *)work) - sizeof(void *))); }) ;
# 2712 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)ql) - sizeof(void *)), 2224956529753668114UL);free((((unsigned char *)ql) - sizeof(void *))); }) ;
# 2713 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)qq) - sizeof(void *)), 2224956529753668107UL);free((((unsigned char *)qq) - sizeof(void *))); }) ;
# 2714 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)compHalfStep) - sizeof(void *)), 2224956529753668100UL);free((((unsigned char *)compHalfStep) - sizeof(void *))); }) ;
# 2715 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)compression) - sizeof(void *)), 2224956529753668093UL);free((((unsigned char *)compression) - sizeof(void *))); }) ;
# 2716 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)q_old) - sizeof(void *)), 2224956529753668086UL);free((((unsigned char *)q_old) - sizeof(void *))); }) ;
# 2717 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)p_old) - sizeof(void *)), 2224956529753668079UL);free((((unsigned char *)p_old) - sizeof(void *))); }) ;
# 2718 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)delvc) - sizeof(void *)), 2224956529753668072UL);free((((unsigned char *)delvc) - sizeof(void *))); }) ;
# 2719 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)e_old) - sizeof(void *)), 2224956529753667971UL);free((((unsigned char *)e_old) - sizeof(void *))); }) ;
# 2720 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "EvalEOSForElems", &____must_manage_EvalEOSForElems, ____alias_loc_id_20, ____chimes_did_disable42, false); }

static inline
# 2568 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void EvalEOSForElems(Real_t *vnewc, Index_t length) { (____chimes_replaying ? EvalEOSForElems_resumable(vnewc, length) : EvalEOSForElems_quick(vnewc, length)); }
# 2722 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2723 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void ApplyMaterialPropertiesForElems_quick()
# 2724 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable43 = new_stack((void *)(&ApplyMaterialPropertiesForElems), "ApplyMaterialPropertiesForElems", &____must_manage_ApplyMaterialPropertiesForElems, 0, 0) ; ; ;
# 2725 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t length; length = (domain.numElem) ;
# 2726 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2727 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (length != 0) {
# 2728 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2729 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t eosvmin; eosvmin = (domain.eosvmin) ;
# 2730 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t eosvmax; eosvmax = (domain.eosvmax) ;
# 2731 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t *vnewc; vnewc = ((Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753667708UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); })) ;
# 2732 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        ((vnewc) ? static_cast<void> (0) : __assert_fail ("vnewc", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2732, __PRETTY_FUNCTION__));
# 2733 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_1: void *____chimes_parent_ctx27 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth26 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth26 = get_thread_stack_depth(); size_t ____chimes_region_id26; unsigned ____chimes_parent_thread26 = entering_omp_parallel(1, &____chimes_region_id26, 0);
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2735 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread26, ____chimes_parent_ctx27, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth26, ____chimes_region_id26, 0); if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } {
# 2736 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t i; ;
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable41; ____chimes_disable41 = disable_current_thread();
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2738 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for (i=0 ; i<length ; ++i) { {
# 2739 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t zn; zn = (domain.matElemlist[i]) ;
# 2740 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    vnewc[i] = domain.vnew[zn] ;
# 2741 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } } reenable_current_thread(____chimes_disable41);
# 2742 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2743 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (eosvmin != Real_t(0.)) {
# 2744 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                Index_t j; ;
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable42; ____chimes_disable42 = disable_current_thread();
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmin)
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2746 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    for(j=0 ; j<length ; ++j) { {
# 2747 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     if (vnewc[j] < eosvmin) {vnewc[j] = eosvmin; } ;
# 2749 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     } } reenable_current_thread(____chimes_disable42);
# 2750 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2751 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2752 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (eosvmax != Real_t(0.)) {
# 2753 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                Index_t k; ;
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable43; ____chimes_disable43 = disable_current_thread();
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmax)
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2755 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    for(k=0 ; k<length ; ++k) { {
# 2756 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     if (vnewc[k] > eosvmax) {vnewc[k] = eosvmax; } ;
# 2758 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     } } reenable_current_thread(____chimes_disable43);
# 2759 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2760 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2761 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t l; ;
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
bool ____chimes_disable44; ____chimes_disable44 = disable_current_thread();
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmin,eosvmax)
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2763 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for (l=0; l<length; ++l) { {
# 2764 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t zn; zn = (domain.matElemlist[l]) ;
# 2765 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Real_t vc; vc = (domain.v[zn]) ;
# 2766 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (eosvmin != Real_t(0.)) {
# 2767 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     if (vc < eosvmin) {vc = eosvmin; } ;
# 2769 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2770 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (eosvmax != Real_t(0.)) {
# 2771 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     if (vc > eosvmax) {vc = eosvmax; } ;
# 2773 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2774 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (vc <= 0.) {
# 2775 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     exit(VolumeError) ;
# 2776 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2777 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    } } reenable_current_thread(____chimes_disable44);
# 2778 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } thread_leaving(); } } leaving_omp_parallel(____chimes_call_stack_depth26, ____chimes_region_id26, 0); }
# 2779 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2780 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_0: ({ calling_npm("EvalEOSForElems", 0); EvalEOSForElems_npm(vnewc, length); });
# 2781 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2782 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)vnewc) - sizeof(void *)), 2224956529753667708UL);free((((unsigned char *)vnewc) - sizeof(void *))); }) ;
# 2783 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2784 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2785 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "ApplyMaterialPropertiesForElems", &____must_manage_ApplyMaterialPropertiesForElems, ____alias_loc_id_18, ____chimes_did_disable43, false); }

static inline
# 2723 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void ApplyMaterialPropertiesForElems() { (____chimes_replaying ? ApplyMaterialPropertiesForElems_resumable() : ApplyMaterialPropertiesForElems_quick()); }
# 2787 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2788 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void UpdateVolumesForElems_quick()
# 2789 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable44 = new_stack((void *)(&UpdateVolumesForElems), "UpdateVolumesForElems", &____must_manage_UpdateVolumesForElems, 0, 0) ; ; ;
# 2790 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numElem; numElem = (domain.numElem) ;
# 2791 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (numElem != 0) {
# 2792 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t v_cut; v_cut = (domain.v_cut) ;
# 2793 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_1: bool ____chimes_disable45 = disable_current_thread(); void *____chimes_parent_ctx28 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth27 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth27 = get_thread_stack_depth(); size_t ____chimes_region_id27; unsigned ____chimes_parent_thread27 = entering_omp_parallel(1, &____chimes_region_id27, 2, &numElem, &v_cut); int ____chimes_first_iter27 = 1;
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem,v_cut) firstprivate(____chimes_first_iter27)
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2795 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for(Index_t i=0 ; i<numElem ; ++i) { { if (____chimes_first_iter27) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread27, ____chimes_parent_ctx28, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth27, ____chimes_region_id27, 2, &numElem, &v_cut); ____chimes_first_iter27 = 0; } {
# 2796 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t tmpV; ;
# 2797 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   tmpV = domain.vnew[i] ;
# 2798 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2799 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    call_lbl_0: if (({ calling_npm("FABS", 0); FABS_npm(tmpV - Real_t(1.0)); }) < v_cut) {tmpV = Real_t(1.0); } ;
# 2801 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.v[i] = tmpV ;
# 2802 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } } } leaving_omp_parallel(____chimes_call_stack_depth27, ____chimes_region_id27, 1); reenable_current_thread(____chimes_disable45); }
# 2803 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2804 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2805 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 rm_stack(false, 0UL, "UpdateVolumesForElems", &____must_manage_UpdateVolumesForElems, ____alias_loc_id_19, ____chimes_did_disable44, false); return ;
# 2806 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}

static inline
# 2788 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void UpdateVolumesForElems() { (____chimes_replaying ? UpdateVolumesForElems_resumable() : UpdateVolumesForElems_quick()); }
# 2808 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2809 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void LagrangeElements_quick()
# 2810 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable45 = new_stack((void *)(&LagrangeElements), "LagrangeElements", &____must_manage_LagrangeElements, 0, 0) ; ; ;
# 2811 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t deltatime; deltatime = (domain.deltatime) ;
# 2812 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2813 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcLagrangeElements", 0); CalcLagrangeElements_npm(deltatime); }) ;
# 2814 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2815 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2816 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("CalcQForElems", 0); CalcQForElems_npm(); }) ;
# 2817 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2818 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: ({ calling_npm("ApplyMaterialPropertiesForElems", 0); ApplyMaterialPropertiesForElems_npm(); }) ;
# 2819 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2820 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: ({ calling_npm("UpdateVolumesForElems", 0); UpdateVolumesForElems_npm(); }) ;
# 2821 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "LagrangeElements", &____must_manage_LagrangeElements, ____alias_loc_id_11, ____chimes_did_disable45, false); }

static inline
# 2809 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void LagrangeElements() { (____chimes_replaying ? LagrangeElements_resumable() : LagrangeElements_quick()); }
# 2823 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static int get_num_threads_quick() {const int ____chimes_did_disable46 = new_stack((void *)(&get_num_threads), "get_num_threads", &____must_manage_get_num_threads, 0, 0) ; ; ;
# 2824 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    int nthreads; ;
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_0: void *____chimes_parent_ctx29 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth28 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth28 = get_thread_stack_depth(); size_t ____chimes_region_id28; unsigned ____chimes_parent_thread28 = entering_omp_parallel(0, &____chimes_region_id28, 0);
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2826 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    { { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread28, ____chimes_parent_ctx29, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth28, ____chimes_region_id28, 0); if (____chimes_replaying) { switch(get_next_call()) { default: { chimes_error(); } } } {
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp single
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2828 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { bool ____chimes_disable47; ____chimes_disable47 = disable_current_thread(); {
# 2829 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            nthreads = omp_get_num_threads();
# 2830 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         } reenable_current_thread(____chimes_disable47); }
# 2831 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     } thread_leaving(); } } leaving_omp_parallel(____chimes_call_stack_depth28, ____chimes_region_id28, 0); }
# 2832 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     int ____chimes_ret_var_7; ; ____chimes_ret_var_7 = (nthreads); rm_stack(false, 0UL, "get_num_threads", &____must_manage_get_num_threads, ____alias_loc_id_14, ____chimes_did_disable46, false); return ____chimes_ret_var_7; ;
# 2833 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "get_num_threads", &____must_manage_get_num_threads, ____alias_loc_id_14, ____chimes_did_disable46, false); }

static int get_num_threads() { return (____chimes_replaying ? get_num_threads_resumable() : get_num_threads_quick()); }
# 2835 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2836 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcCourantConstraintForElems_quick()
# 2837 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable47 = new_stack((void *)(&CalcCourantConstraintForElems), "CalcCourantConstraintForElems", &____must_manage_CalcCourantConstraintForElems, 0, 0) ; ; ;
# 2838 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dtcourant; dtcourant = (Real_t(1.0e+20)) ;
# 2839 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t courant_elem; courant_elem = (-1) ;
# 2840 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t qqc; qqc = (domain.qqc) ;
# 2841 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t length; length = (domain.numElem) ;
# 2842 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2843 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t qqc2; qqc2 = (Real_t(64.0) * qqc * qqc) ;
# 2844 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2845 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2846 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Index_t threads; call_lbl_0: threads = (({ calling_npm("get_num_threads", 0); get_num_threads_npm(); })) ;
# 2855 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2855 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         lbl_0: Index_t courant_elem_per_thread[threads]; ;
# 2856 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         lbl_1: Real_t dtcourant_per_thread[threads]; ;
# 2857 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2858 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { Index_t i; for ( i = (0) ; i < threads; i++) {
# 2859 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                courant_elem_per_thread[i] = -1;
# 2860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                dtcourant_per_thread[i] = Real_t(1.0e+20);
# 2861 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 2862 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2863 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{ call_lbl_2: bool ____chimes_disable48 = disable_current_thread(); void *____chimes_parent_ctx30 = get_thread_ctx(); unsigned ____chimes_parent_stack_depth29 = get_parent_vars_stack_depth(); unsigned ____chimes_call_stack_depth29 = get_thread_stack_depth(); size_t ____chimes_region_id29; unsigned ____chimes_parent_thread29 = entering_omp_parallel(2, &____chimes_region_id29, 2, &length, &qqc2); int ____chimes_first_iter29 = 1;
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length,qqc2), shared(dtcourant,courant_elem) firstprivate(____chimes_first_iter29)
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2865 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i) { { if (____chimes_first_iter29) { register_thread_local_stack_vars(LIBCHIMES_THREAD_NUM(), ____chimes_parent_thread29, ____chimes_parent_ctx30, LIBCHIMES_NUM_THREADS(), ____chimes_parent_stack_depth29, ____chimes_region_id29, 2, &length, &qqc2); ____chimes_first_iter29 = 0; } {
# 2866 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t indx; indx = (domain.matElemlist[i]) ;
# 2867 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2868 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t dtf; dtf = (domain.ss[indx] * domain.ss[indx]) ;
# 2869 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2870 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( domain.vdov[indx] < Real_t(0.) ) {
# 2871 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2872 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   dtf = dtf
# 2873 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            + qqc2 * domain.arealg[indx] * domain.arealg[indx]
# 2874 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            * domain.vdov[indx] * domain.vdov[indx] ;
# 2875 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2876 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2877 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_1: dtf = ({ calling_npm("SQRT", 0); SQRT_npm(dtf); }) ;
# 2878 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2879 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dtf = domain.arealg[indx] / dtf ;
# 2880 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2881 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2882 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (domain.vdov[indx] != Real_t(0.)) {
# 2883 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   {
# 2884 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2885 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t thread_num; thread_num = (omp_get_thread_num()) ;
# 2894 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2894 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         if ( dtf < dtcourant_per_thread[thread_num] ) {
# 2895 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         {
# 2896 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                 dtcourant_per_thread[thread_num] = dtf ;
# 2897 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                        courant_elem_per_thread[thread_num] = indx ;
# 2898 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                }
# 2899 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        }
# 2900 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2901 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2902 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2903 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } } } leaving_omp_parallel(____chimes_call_stack_depth29, ____chimes_region_id29, 1); reenable_current_thread(____chimes_disable48); }
# 2904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i < threads; i++) {
# 2905 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                if(dtcourant_per_thread[i] < dtcourant) {
# 2906 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        dtcourant = dtcourant_per_thread[i];
# 2907 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        courant_elem = courant_elem_per_thread[i];
# 2908 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                }
# 2909 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 2910 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2911 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2912 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2913 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2914 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (courant_elem != -1) {
# 2915 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dtcourant = dtcourant ;
# 2916 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2917 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2918 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 rm_stack(false, 0UL, "CalcCourantConstraintForElems", &____must_manage_CalcCourantConstraintForElems, ____alias_loc_id_12, ____chimes_did_disable47, false); return ;
# 2919 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}

static inline
# 2836 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcCourantConstraintForElems() { (____chimes_replaying ? CalcCourantConstraintForElems_resumable() : CalcCourantConstraintForElems_quick()); }
# 2921 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2922 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcHydroConstraintForElems_quick()
# 2923 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable48 = new_stack((void *)(&CalcHydroConstraintForElems), "CalcHydroConstraintForElems", &____must_manage_CalcHydroConstraintForElems, 0, 0) ; ; ;
# 2924 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dthydro; dthydro = (Real_t(1.0e+20)) ;
# 2925 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t hydro_elem; hydro_elem = (-1) ;
# 2926 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dvovmax; dvovmax = (domain.dvovmax) ;
# 2927 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t length; length = (domain.numElem) ;
# 2928 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2929 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2930 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t threads; call_lbl_0: threads = (({ calling_npm("get_num_threads", 0); get_num_threads_npm(); })) ;
# 2931 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2933 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2935 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2936 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2937 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2938 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         lbl_0: Real_t dthydro_per_thread[threads]; ;
# 2939 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         lbl_1: Index_t hydro_elem_per_thread[threads]; ;
# 2940 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2941 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { Index_t i; for ( i = (0) ; i < threads; i++) {
# 2942 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                hydro_elem_per_thread[i] = -1;
# 2943 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                dthydro_per_thread[i] = Real_t(1.0e+20);
# 2944 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 2945 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2946 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2947 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { Index_t i; for ( i = (0) ; i < length ; ++i) {
# 2948 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                 Index_t indx; indx = (domain.matElemlist[i]) ;
# 2949 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2950 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                if (domain.vdov[indx] != Real_t(0.)) {
# 2951 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         Real_t dtdvov; call_lbl_1: dtdvov = (dvovmax / (({ calling_npm("FABS", 0); FABS_npm(domain.vdov[indx]); })+Real_t(1.e-20))) ;
# 2952 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2953 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2954 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         Index_t thread_num; thread_num = (omp_get_thread_num()) ;
# 2955 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2956 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2957 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2958 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2959 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2960 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2961 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2962 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        if ( dthydro_per_thread[thread_num] > dtdvov ) {
# 2963 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                {
# 2964 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                        dthydro_per_thread[thread_num] = dtdvov ;
# 2965 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                        hydro_elem_per_thread[thread_num] = indx ;
# 2966 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                }
# 2967 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        }
# 2968 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                }
# 2969 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 2970 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2971 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        { Index_t i; for ( i = (0) ; i < threads; i++) {
# 2972 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                if(dthydro_per_thread[i] < dthydro) {
# 2973 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        dthydro = dthydro_per_thread[i];
# 2974 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        hydro_elem = hydro_elem_per_thread[i];
# 2975 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                }
# 2976 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        } }
# 2977 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2978 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (hydro_elem != -1) {
# 2979 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dthydro = dthydro ;
# 2980 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2981 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2982 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 rm_stack(false, 0UL, "CalcHydroConstraintForElems", &____must_manage_CalcHydroConstraintForElems, ____alias_loc_id_13, ____chimes_did_disable48, false); return ;
# 2983 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}

static inline
# 2922 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcHydroConstraintForElems() { (____chimes_replaying ? CalcHydroConstraintForElems_resumable() : CalcHydroConstraintForElems_quick()); }
# 2985 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2986 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcTimeConstraintsForElems_quick() {const int ____chimes_did_disable49 = new_stack((void *)(&CalcTimeConstraintsForElems), "CalcTimeConstraintsForElems", &____must_manage_CalcTimeConstraintsForElems, 0, 0) ; ; ;
# 2987 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2988 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("CalcCourantConstraintForElems", 0); CalcCourantConstraintForElems_npm(); }) ;
# 2989 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2990 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2991 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("CalcHydroConstraintForElems", 0); CalcHydroConstraintForElems_npm(); }) ;
# 2992 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "CalcTimeConstraintsForElems", &____must_manage_CalcTimeConstraintsForElems, 0, ____chimes_did_disable49, false); }

static inline
# 2986 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcTimeConstraintsForElems() { (____chimes_replaying ? CalcTimeConstraintsForElems_resumable() : CalcTimeConstraintsForElems_quick()); }
# 2994 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2995 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void LagrangeLeapFrog_quick()
# 2996 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable50 = new_stack((void *)(&LagrangeLeapFrog), "LagrangeLeapFrog", &____must_manage_LagrangeLeapFrog, 0, 0) ; ; ;
# 2997 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2998 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2999 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("LagrangeNodal", 0); LagrangeNodal_npm(); });
# 3000 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3001 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3002 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3003 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("LagrangeElements", 0); LagrangeElements_npm(); });
# 3004 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3005 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: ({ calling_npm("CalcTimeConstraintsForElems", 0); CalcTimeConstraintsForElems_npm(); });
# 3006 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3007 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3008 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "LagrangeLeapFrog", &____must_manage_LagrangeLeapFrog, 0, ____chimes_did_disable50, false); }

static inline
# 2995 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void LagrangeLeapFrog() { (____chimes_replaying ? LagrangeLeapFrog_resumable() : LagrangeLeapFrog_quick()); }
# 3010 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
int main_quick(int argc, char *argv[])
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{const int ____chimes_did_disable51 = new_stack((void *)(&main), "main", (int *)0, 2, 0, (size_t)(0UL), (size_t)(2224956529753666877UL)) ; Real_t z_local[8];
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t y_local[8];
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t x_local[8];
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Index_t edgeElems;
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
timeval end;
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
timeval start;
# 3011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 register_stack_vars(4, "main|x_local|0", (int *)0x0, "[8 x double]", (void *)(x_local), (size_t)64, 0, 0, 0, "main|edgeElems|0", (int *)0x0, "i32", (void *)(&edgeElems), (size_t)4, 0, 0, 0, "main|end|0", (int *)0x0, "%struct.timeval = type { i64, i64 }", (void *)(&end), (size_t)16, 0, 1, 0, "main|start|0", (int *)0x0, "%struct.timeval = type { i64, i64 }", (void *)(&start), (size_t)16, 0, 1, 0); ; ;
# 3012 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     ;
# 3013 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gettimeofday(&start, __null);
# 3014 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     edgeElems = (atoi(argv[1])) ;
# 3016 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t edgeNodes; edgeNodes = (edgeElems+1) ;
# 3017 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3018 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t tx; Real_t ty; Real_t tz; ;
# 3019 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t nidx; Index_t zidx; ;
# 3020 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t domElems; ;
# 3032 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3032 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.sizeX = edgeElems ;
# 3033 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.sizeY = edgeElems ;
# 3034 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.sizeZ = edgeElems ;
# 3035 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.numElem = edgeElems*edgeElems*edgeElems ;
# 3036 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.numNode = edgeNodes*edgeNodes*edgeNodes ;
# 3037 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3038 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domElems = domain.numElem ;
# 3039 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3040 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3041 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3042 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_0: ({ calling_npm("AllocateElemPersistent", 0); AllocateElemPersistent_npm(&domain, domain.numElem); }) ;
# 3044 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_1: ({ calling_npm("AllocateElemTemporary", 0); AllocateElemTemporary_npm(&domain, domain.numElem); }) ;
# 3045 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3046 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_2: ({ calling_npm("AllocateNodalPersistent", 0); AllocateNodalPersistent_npm(&domain, domain.numNode); }) ;
# 3047 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_3: ({ calling_npm("AllocateNodesets", 0); AllocateNodesets_npm(&domain, edgeNodes*edgeNodes); }) ;
# 3048 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3049 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3050 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3051 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 nidx = 0 ;
# 3052 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 tz = Real_t(0.) ;
# 3053 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t plane; for ( plane = (0) ; plane<edgeNodes; ++plane) {
# 3054 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ty = Real_t(0.) ;
# 3055 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t row; for ( row = (0) ; row<edgeNodes; ++row) {
# 3056 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   tx = Real_t(0.) ;
# 3057 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   { Index_t col; for ( col = (0) ; col<edgeNodes; ++col) {
# 3058 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    domain.x[nidx] = tx ;
# 3059 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    domain.y[nidx] = ty ;
# 3060 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    domain.z[nidx] = tz ;
# 3061 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ++nidx ;
# 3062 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3063 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    tx = Real_t(1.125)*Real_t(col+1)/Real_t(edgeElems) ;
# 3064 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } }
# 3065 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3066 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ty = Real_t(1.125)*Real_t(row+1)/Real_t(edgeElems) ;
# 3067 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3068 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3069 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  tz = Real_t(1.125)*Real_t(plane+1)/Real_t(edgeElems) ;
# 3070 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3071 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3072 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3073 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3074 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3075 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 nidx = 0 ;
# 3076 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 zidx = 0 ;
# 3077 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t plane; for ( plane = (0) ; plane<edgeElems; ++plane) {
# 3078 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t row; for ( row = (0) ; row<edgeElems; ++row) {
# 3079 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   { Index_t col; for ( col = (0) ; col<edgeElems; ++col) {
# 3080 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     Index_t *localNode; localNode = (domain.nodelist + (8 * zidx)) ;
# 3081 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[0] = nidx ;
# 3082 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[1] = nidx + 1 ;
# 3083 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[2] = nidx + edgeNodes + 1 ;
# 3084 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[3] = nidx + edgeNodes ;
# 3085 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[4] = nidx + edgeNodes*edgeNodes ;
# 3086 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[5] = nidx + edgeNodes*edgeNodes + 1 ;
# 3087 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[6] = nidx + edgeNodes*edgeNodes + edgeNodes + 1 ;
# 3088 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    localNode[7] = nidx + edgeNodes*edgeNodes + edgeNodes ;
# 3089 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ++zidx ;
# 3090 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ++nidx ;
# 3091 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } }
# 3092 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ++nidx ;
# 3093 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3094 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  nidx += edgeNodes ;
# 3095 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3096 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3097 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  call_lbl_4: ({ calling_npm("AllocateNodeElemIndexes", 0); AllocateNodeElemIndexes_npm(&domain); });
# 3098 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3099 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3100 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<domElems; ++i) {
# 3101 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.matElemlist[i] = i ;
# 3102 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3103 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3104 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3105 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.dtfixed = Real_t(-1.0e-7) ;
# 3106 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.deltatime = Real_t(1.0e-7) ;
# 3107 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.deltatimemultlb = Real_t(1.1) ;
# 3108 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.deltatimemultub = Real_t(1.2) ;
# 3109 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.stoptime = Real_t(1.0e-2) ;
# 3110 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.dtcourant = Real_t(1.0e+20) ;
# 3111 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.dthydro = Real_t(1.0e+20) ;
# 3112 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.dtmax = Real_t(1.0e-2) ;
# 3113 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.time = Real_t(0.) ;
# 3114 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.cycle = 0 ;
# 3115 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3116 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.e_cut = Real_t(1.0e-7) ;
# 3117 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.p_cut = Real_t(1.0e-7) ;
# 3118 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.q_cut = Real_t(1.0e-7) ;
# 3119 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.u_cut = Real_t(1.0e-7) ;
# 3120 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.v_cut = Real_t(1.0e-10) ;
# 3121 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3122 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.hgcoef = Real_t(3.0) ;
# 3123 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.ss4o3 = Real_t(4.0)/Real_t(3.0) ;
# 3124 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3125 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.qstop = Real_t(1.0e+12) ;
# 3126 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.monoq_max_slope = Real_t(1.0) ;
# 3127 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.monoq_limiter_mult = Real_t(2.0) ;
# 3128 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.qlc_monoq = Real_t(0.5) ;
# 3129 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.qqc_monoq = Real_t(2.0)/Real_t(3.0) ;
# 3130 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.qqc = Real_t(2.0) ;
# 3131 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3132 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.pmin = Real_t(0.) ;
# 3133 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.emin = Real_t(-1.0e+15) ;
# 3134 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3135 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.dvovmax = Real_t(0.1) ;
# 3136 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3137 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.eosvmax = Real_t(1.0e+9) ;
# 3138 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.eosvmin = Real_t(1.0e-9) ;
# 3139 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3140 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.refdens = Real_t(1.0) ;
# 3141 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3142 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3143 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<domElems; ++i) {
# 3144 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     ;
# 3145 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t *elemToNode; elemToNode = (domain.nodelist + (8 * i)) ;
# 3146 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t lnode; for( lnode = (0) ; lnode<8 ; ++lnode )
# 3147 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 3148 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t gnode; gnode = (elemToNode[lnode]) ;
# 3149 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x_local[lnode] = domain.x[gnode];
# 3150 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y_local[lnode] = domain.y[gnode];
# 3151 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z_local[lnode] = domain.z[gnode];
# 3152 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3153 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3154 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3155 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t volume; call_lbl_5: volume = (({ calling_npm("CalcElemVolume", 0); CalcElemVolume_npm(x_local, y_local, z_local); })) ;
# 3156 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.volo[i] = volume ;
# 3157 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.elemMass[i] = volume ;
# 3158 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t j; for ( j = (0) ; j<8; ++j) {
# 3159 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t idx; idx = (elemToNode[j]) ;
# 3160 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.nodalMass[idx] += volume / Real_t(8.0) ;
# 3161 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3162 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3163 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3164 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3165 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.e[0] = Real_t(3.948746e+7) ;
# 3166 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3167 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3168 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 nidx = 0 ;
# 3169 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<edgeNodes; ++i) {
# 3170 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t planeInc; planeInc = (i*edgeNodes*edgeNodes) ;
# 3171 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t rowInc; rowInc = (i*edgeNodes) ;
# 3172 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t j; for ( j = (0) ; j<edgeNodes; ++j) {
# 3173 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.symmX[nidx] = planeInc + j*edgeNodes ;
# 3174 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.symmY[nidx] = planeInc + j ;
# 3175 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.symmZ[nidx] = rowInc + j ;
# 3176 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ++nidx ;
# 3177 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3178 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3179 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3180 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3181 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.lxim[0] = 0 ;
# 3182 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (1) ; i<domElems; ++i) {
# 3183 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.lxim[i] = i-1 ;
# 3184 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.lxip[i-1] = i ;
# 3185 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3186 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.lxip[domElems-1] = domElems-1 ;
# 3187 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3188 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<edgeElems; ++i) {
# 3189 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.letam[i] = i ;
# 3190 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.letap[domElems-edgeElems+i] = domElems-edgeElems+i ;
# 3191 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3192 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (edgeElems) ; i<domElems; ++i) {
# 3193 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.letam[i] = i-edgeElems ;
# 3194 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.letap[i-edgeElems] = i ;
# 3195 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3197 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<edgeElems*edgeElems; ++i) {
# 3198 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.lzetam[i] = i ;
# 3199 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.lzetap[domElems-edgeElems*edgeElems+i] = domElems-edgeElems*edgeElems+i ;
# 3200 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3201 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (edgeElems*edgeElems) ; i<domElems; ++i) {
# 3202 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.lzetam[i] = i - edgeElems*edgeElems ;
# 3203 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.lzetap[i-edgeElems*edgeElems] = i ;
# 3204 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3205 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3206 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3207 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<domElems; ++i) {
# 3208 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.elemBC[i] = 0 ;
# 3209 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3210 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3211 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3212 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3213 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t i; for ( i = (0) ; i<edgeElems; ++i) {
# 3214 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t planeInc; planeInc = (i*edgeElems*edgeElems) ;
# 3215 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t rowInc; rowInc = (i*edgeElems) ;
# 3216 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t j; for ( j = (0) ; j<edgeElems; ++j) {
# 3217 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.elemBC[planeInc+j*edgeElems] |= 0x001 ;
# 3218 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.elemBC[planeInc+j*edgeElems+edgeElems-1] |= 0x008 ;
# 3219 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.elemBC[planeInc+j] |= 0x010 ;
# 3220 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.elemBC[planeInc+j+edgeElems*edgeElems-edgeElems] |= 0x080 ;
# 3221 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.elemBC[rowInc+j] |= 0x100 ;
# 3222 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.elemBC[rowInc+j+domElems-edgeElems*edgeElems] |= 0x800 ;
# 3223 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3224 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3225 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3226 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3227 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3228 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3229 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 while(domain.time < domain.stoptime ) {
# 3230 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3231 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_6: ({ calling_npm("TimeIncrement", 0); TimeIncrement_npm(); }) ;
# 3232 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   call_lbl_7: ({ calling_npm("LagrangeLeapFrog", 0); LagrangeLeapFrog_npm(); }) ;
# 3241 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3241 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         call_lbl_8: checkpoint_transformed(8, ____alias_loc_id_0);
# 3242 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3243 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 3244 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3245 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3246 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gettimeofday(&end, __null);
# 3247 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  double elapsed_time; elapsed_time = (double(end.tv_sec - start.tv_sec) + double(end.tv_usec - start.tv_usec) *1e-6) ;
# 3248 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3249 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3250 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("\n\nElapsed time = %.10f\n\n", elapsed_time);
# 3251 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3252 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t ElemId; ElemId = (0) ;
# 3253 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("Run completed:  \n");
# 3254 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("   Problem size        =  %i \n", edgeElems);
# 3255 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("   Iteration count     =  %i \n", domain.cycle);
# 3256 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("   Final Origin Energy = %12.6e \n", domain.e[ElemId]);
# 3257 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3258 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t MaxAbsDiff; MaxAbsDiff = (Real_t(0.0)) ;
# 3259 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t TotalAbsDiff; TotalAbsDiff = (Real_t(0.0)) ;
# 3260 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t MaxRelDiff; MaxRelDiff = (Real_t(0.0)) ;
# 3261 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3262 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 { Index_t j; for ( j = (0) ; j<edgeElems; ++j) {
# 3263 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  { Index_t k; for ( k = (j+1) ; k<edgeElems; ++k) {
# 3264 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t AbsDiff; call_lbl_9: AbsDiff = (({ calling_npm("FABS", 0); FABS_npm(domain.e[j*edgeElems+k] - domain.e[k*edgeElems+j]); })) ;
# 3265 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   TotalAbsDiff += AbsDiff;
# 3266 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3267 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (MaxAbsDiff <AbsDiff) {MaxAbsDiff = AbsDiff; };
# 3268 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3269 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t RelDiff; RelDiff = (AbsDiff / domain.e[k*edgeElems+j]) ;
# 3270 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3271 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (MaxRelDiff <RelDiff) {MaxRelDiff = RelDiff; };
# 3272 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  } }
# 3273 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 } }
# 3274 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3275 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("   Testing Plane 0 of Energy Array:\n");
# 3276 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("        MaxAbsDiff   = %12.6e\n", MaxAbsDiff );
# 3277 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("        TotalAbsDiff = %12.6e\n", TotalAbsDiff );
# 3278 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 printf("        MaxRelDiff   = %12.6e\n\n", MaxRelDiff );
# 3279 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3280 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  int ____chimes_ret_var_8; ; ____chimes_ret_var_8 = (0); rm_stack(false, 0UL, "main", (int *)0x0, ____alias_loc_id_6, ____chimes_did_disable51, false); return ____chimes_ret_var_8; ;
# 3281 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
rm_stack(false, 0UL, "main", (int *)0x0, ____alias_loc_id_6, ____chimes_did_disable51, false); }

int main(int argc, char *argv[]) { init_chimes(argc, argv); return (____chimes_replaying ? main_resumable(argc, argv) : main_quick(argc, argv)); }
# 103 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
inline real8 SQRT_npm(real8 arg) { double ____chimes_ret_var_0; ____chimes_ret_var_0 = (sqrt(arg)); return ____chimes_ret_var_0; ; }
# 105 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
inline real8 CBRT_npm(real8 arg) { double ____chimes_ret_var_1; ____chimes_ret_var_1 = (cbrt(arg)); return ____chimes_ret_var_1; ; }
# 107 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
inline real8 FABS_npm(real8 arg) { double ____chimes_ret_var_2; ____chimes_ret_var_2 = (fabs(arg)); return ____chimes_ret_var_2; ; }
# 374 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateNodalPersistent_npm(Domain *self, size_t size)
# 375 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 376 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->x = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 377 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->y = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 378 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->z = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 379 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 380 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->xd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 381 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->yd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 382 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->zd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 383 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->xd, 0x00, sizeof(Real_t) * size);
# 384 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->yd, 0x00, sizeof(Real_t) * size);
# 385 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->zd, 0x00, sizeof(Real_t) * size);
# 386 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 387 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->xdd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 388 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->ydd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 389 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->zdd = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 390 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->xdd, 0x00, sizeof(Real_t) * size);
# 391 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->ydd, 0x00, sizeof(Real_t) * size);
# 392 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->zdd, 0x00, sizeof(Real_t) * size);
# 393 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 394 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->fx = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 395 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->fy = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->fz = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 397 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 398 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodalMass = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665124UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 399 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->nodalMass, 0x00, sizeof(Real_t) * size);
# 400 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 402 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateElemPersistent_npm(Domain *self, size_t size)
# 403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 404 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->matElemlist = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 405 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodelist = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * 8 * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * 8*size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 406 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 407 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->lxim = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 408 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->lxip = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 409 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->letam = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 410 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->letap = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 411 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->lzetam = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 412 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->lzetap = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 413 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 414 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->elemBC = (Int_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Int_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Int_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 415 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 416 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->e = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 417 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->e, 0x00, sizeof(Real_t) * size);
# 418 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 419 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->p = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 420 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    memset(self->p, 0x00, sizeof(Real_t) * size);
# 421 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->q = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 422 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->ql = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 423 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->qq = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 424 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 425 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->v = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 426 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    for (int i = 0;i < size; i++) { (self->v)[i] = 1.0; };
# 427 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->volo = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 428 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delv = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 429 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->vdov = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 430 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 431 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->arealg = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 432 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->ss = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 434 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 435 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->elemMass = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665282UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 436 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 440 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateElemTemporary_npm(Domain *self, size_t size)
# 441 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 442 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->dxx = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 443 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->dyy = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 444 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->dzz = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 445 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delv_xi = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 447 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delv_eta = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 448 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delv_zeta = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 449 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 450 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delx_xi = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 451 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delx_eta = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 452 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->delx_zeta = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 453 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 454 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->vnew = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * size, 2224956529753665472UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 455 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 457 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateNodesets_npm(Domain *self, size_t size)
# 458 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 459 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->symmX = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665551UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 460 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->symmY = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665551UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 461 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->symmZ = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * size) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * size, 2224956529753665551UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 462 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 464 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void AllocateNodeElemIndexes_npm(Domain *self)
# 465 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 466 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t m;
# 467 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t numElem = self->numElem ;
# 468 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t numNode = self->numNode ;
# 469 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 470 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodeElemCount = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((numNode * sizeof(Index_t)) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, numNode * sizeof(Index_t), 2224956529753665656UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 472 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 473 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    for (Index_t i=0;i<numNode;++i) {
# 474 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        (self->nodeElemCount)[i]=0;
# 475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 476 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 477 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    for (Index_t i=0; i<numElem; ++i) {
# 478 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t *nl = self->nodelist + (8 * i) ;
# 479 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (Index_t j=0; j < 8; ++j) {
# 480 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            ++(self->nodeElemCount[nl[j]]);
# 481 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        }
# 482 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 483 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 484 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodeElemStart = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * numNode) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * numNode, 2224956529753665656UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 485 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 486 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodeElemStart[0]=0;
# 487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 488 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    for (Index_t i=1; i < numNode; ++i) {
# 489 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        self->nodeElemStart[i] = self->nodeElemStart[i-1] + self->nodeElemCount[i-1] ;
# 490 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 491 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 492 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->cornerListSize = (self->nodeElemStart[numNode-1] +
# 493 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                self->nodeElemCount[numNode-1]);
# 494 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    self->nodeElemCornerList = (Index_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Index_t) * self->cornerListSize) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Index_t) * self->cornerListSize, 2224956529753665656UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 495 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 496 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    for (Index_t i=0; i < numNode; ++i) {
# 497 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        (self->nodeElemCount)[i]=0;
# 498 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 499 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 500 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    for (Index_t i=0; i < numElem; ++i) {
# 501 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t *nl = self->nodelist + (8 * i) ;
# 502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (Index_t j=0; j < 8; ++j) {
# 503 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t m = nl[j];
# 504 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t k = i*8 + j ;
# 505 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t offset = self->nodeElemStart[m]+self->nodeElemCount[m] ;
# 506 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 507 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            self->nodeElemCornerList[offset] = k;
# 508 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            ++((self->nodeElemCount)[m]);
# 509 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        }
# 510 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 511 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 512 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t clSize = self->cornerListSize;
# 513 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    for (Index_t i=0; i < clSize; ++i) {
# 514 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t clv = self->nodeElemCornerList[i] ;
# 515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        if ((clv < 0) || (clv > numElem*8)) {
# 516 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            fprintf(stderr,
# 517 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                    "AllocateNodeElemIndexes(): nodeElemCornerList entry out of range!\n");
# 518 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            exit(1);
# 519 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        }
# 520 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 521 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 553 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void TimeIncrement_npm()
# 554 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 555 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t targetdt = domain.stoptime - domain.time ;
# 556 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 557 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if ((domain.dtfixed <= (0.0)) && (domain.cycle != 0)) {
# 558 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ratio ;
# 559 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t olddt = domain.deltatime ;
# 560 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 561 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 562 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t newdt = Real_t(1.0e+20) ;
# 563 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (domain.dtcourant < newdt) {
# 564 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   newdt = domain.dtcourant / Real_t(2.0) ;
# 565 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 566 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (domain.dthydro < newdt) {
# 567 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   newdt = domain.dthydro * Real_t(2.0) / Real_t(3.0) ;
# 568 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 569 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 570 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ratio = newdt / olddt ;
# 571 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (ratio >= Real_t(1.0)) {
# 572 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (ratio < domain.deltatimemultlb) {{
# 573 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    newdt = olddt ;
# 574 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }; } else if (ratio > domain.deltatimemultub) {
# 576 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    newdt = olddt*domain.deltatimemultub ;
# 577 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 578 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 580 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (newdt > domain.dtmax) {
# 581 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   newdt = domain.dtmax ;
# 582 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 583 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.deltatime = newdt ;
# 584 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 585 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 586 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 587 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if ((targetdt > domain.deltatime) &&
# 588 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  (targetdt < (Real_t(4.0) * domain.deltatime / Real_t(3.0))) ) {
# 589 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  targetdt = Real_t(2.0) * domain.deltatime / Real_t(3.0) ;
# 590 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 591 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 592 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (targetdt < domain.deltatime) {
# 593 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.deltatime = targetdt ;
# 594 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 595 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 596 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 domain.time += domain.deltatime ;
# 597 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 ++domain.cycle ;
# 599 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 602 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void InitStressTermsForElems_npm(Index_t numElem,
# 603 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                             Real_t *sigxx, Real_t *sigyy, Real_t *sigzz)
# 604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 605 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 606 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 607 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem)
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 609 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < numElem ; ++i){
# 610 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  sigxx[i] = sigyy[i] = sigzz[i] = - domain.p[i] - domain.q[i];
# 611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 612 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 614 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 615 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemShapeFunctionDerivatives_npm( const Real_t* const x,
# 616 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           const Real_t* const y,
# 617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           const Real_t* const z,
# 618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           Real_t b[][8],
# 619 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
           Real_t* const volume )
# 620 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 621 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t x0 = x[0] ; Real_t x1 = x[1] ;
# 622 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t x2 = x[2] ; Real_t x3 = x[3] ;
# 623 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t x4 = x[4] ; Real_t x5 = x[5] ;
# 624 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t x6 = x[6] ; Real_t x7 = x[7] ;
# 625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 626 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t y0 = y[0] ; Real_t y1 = y[1] ;
# 627 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t y2 = y[2] ; Real_t y3 = y[3] ;
# 628 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t y4 = y[4] ; Real_t y5 = y[5] ;
# 629 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t y6 = y[6] ; Real_t y7 = y[7] ;
# 630 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t z0 = z[0] ; Real_t z1 = z[1] ;
# 632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t z2 = z[2] ; Real_t z3 = z[3] ;
# 633 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t z4 = z[4] ; Real_t z5 = z[5] ;
# 634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t z6 = z[6] ; Real_t z7 = z[7] ;
# 635 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 636 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t fjxxi, fjxet, fjxze;
# 637 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t fjyxi, fjyet, fjyze;
# 638 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t fjzxi, fjzet, fjzze;
# 639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t cjxxi, cjxet, cjxze;
# 640 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t cjyxi, cjyet, cjyze;
# 641 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t cjzxi, cjzet, cjzze;
# 642 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjxxi = .125 * ( (x6-x0) + (x5-x3) - (x7-x1) - (x4-x2) );
# 644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjxet = .125 * ( (x6-x0) - (x5-x3) + (x7-x1) - (x4-x2) );
# 645 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjxze = .125 * ( (x6-x0) + (x5-x3) + (x7-x1) + (x4-x2) );
# 646 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 647 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjyxi = .125 * ( (y6-y0) + (y5-y3) - (y7-y1) - (y4-y2) );
# 648 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjyet = .125 * ( (y6-y0) - (y5-y3) + (y7-y1) - (y4-y2) );
# 649 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjyze = .125 * ( (y6-y0) + (y5-y3) + (y7-y1) + (y4-y2) );
# 650 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 651 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjzxi = .125 * ( (z6-z0) + (z5-z3) - (z7-z1) - (z4-z2) );
# 652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjzet = .125 * ( (z6-z0) - (z5-z3) + (z7-z1) - (z4-z2) );
# 653 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fjzze = .125 * ( (z6-z0) + (z5-z3) + (z7-z1) + (z4-z2) );
# 654 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 656 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjxxi = (fjyet * fjzze) - (fjzet * fjyze);
# 657 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjxet = - (fjyxi * fjzze) + (fjzxi * fjyze);
# 658 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjxze = (fjyxi * fjzet) - (fjzxi * fjyet);
# 659 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 660 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjyxi = - (fjxet * fjzze) + (fjzet * fjxze);
# 661 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjyet = (fjxxi * fjzze) - (fjzxi * fjxze);
# 662 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjyze = - (fjxxi * fjzet) + (fjzxi * fjxet);
# 663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 664 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjzxi = (fjxet * fjyze) - (fjyet * fjxze);
# 665 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjzet = - (fjxxi * fjyze) + (fjyxi * fjxze);
# 666 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 cjzze = (fjxxi * fjyet) - (fjyxi * fjxet);
# 667 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 668 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 669 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 670 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 671 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 672 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][0] = - cjxxi - cjxet - cjxze;
# 673 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][1] = cjxxi - cjxet - cjxze;
# 674 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][2] = cjxxi + cjxet - cjxze;
# 675 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][3] = - cjxxi + cjxet - cjxze;
# 676 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][4] = -b[0][2];
# 677 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][5] = -b[0][3];
# 678 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][6] = -b[0][0];
# 679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[0][7] = -b[0][1];
# 680 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 681 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][0] = - cjyxi - cjyet - cjyze;
# 682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][1] = cjyxi - cjyet - cjyze;
# 683 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][2] = cjyxi + cjyet - cjyze;
# 684 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][3] = - cjyxi + cjyet - cjyze;
# 685 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][4] = -b[1][2];
# 686 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][5] = -b[1][3];
# 687 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][6] = -b[1][0];
# 688 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[1][7] = -b[1][1];
# 689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 690 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][0] = - cjzxi - cjzet - cjzze;
# 691 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][1] = cjzxi - cjzet - cjzze;
# 692 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][2] = cjzxi + cjzet - cjzze;
# 693 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][3] = - cjzxi + cjzet - cjzze;
# 694 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][4] = -b[2][2];
# 695 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][5] = -b[2][3];
# 696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][6] = -b[2][0];
# 697 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 b[2][7] = -b[2][1];
# 698 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 699 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 700 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *volume = Real_t(8.) * ( fjxet * cjxet + fjyet * cjyet + fjzet * cjzet);
# 701 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 703 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 704 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void SumElemFaceNormal_npm(Real_t *normalX0, Real_t *normalY0, Real_t *normalZ0,
# 705 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       Real_t *normalX1, Real_t *normalY1, Real_t *normalZ1,
# 706 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       Real_t *normalX2, Real_t *normalY2, Real_t *normalZ2,
# 707 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       Real_t *normalX3, Real_t *normalY3, Real_t *normalZ3,
# 708 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x0, const Real_t y0, const Real_t z0,
# 709 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x1, const Real_t y1, const Real_t z1,
# 710 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x2, const Real_t y2, const Real_t z2,
# 711 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                       const Real_t x3, const Real_t y3, const Real_t z3)
# 712 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 713 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t bisectX0 = Real_t(0.5) * (x3 + x2 - x1 - x0);
# 714 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t bisectY0 = Real_t(0.5) * (y3 + y2 - y1 - y0);
# 715 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t bisectZ0 = Real_t(0.5) * (z3 + z2 - z1 - z0);
# 716 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t bisectX1 = Real_t(0.5) * (x2 + x1 - x3 - x0);
# 717 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t bisectY1 = Real_t(0.5) * (y2 + y1 - y3 - y0);
# 718 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t bisectZ1 = Real_t(0.5) * (z2 + z1 - z3 - z0);
# 719 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t areaX = Real_t(0.25) * (bisectY0 * bisectZ1 - bisectZ0 * bisectY1);
# 720 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t areaY = Real_t(0.25) * (bisectZ0 * bisectX1 - bisectX0 * bisectZ1);
# 721 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t areaZ = Real_t(0.25) * (bisectX0 * bisectY1 - bisectY0 * bisectX1);
# 722 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 723 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalX0 += areaX;
# 724 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalX1 += areaX;
# 725 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalX2 += areaX;
# 726 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalX3 += areaX;
# 727 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 728 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalY0 += areaY;
# 729 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalY1 += areaY;
# 730 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalY2 += areaY;
# 731 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalY3 += areaY;
# 732 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 733 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalZ0 += areaZ;
# 734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalZ1 += areaZ;
# 735 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalZ2 += areaZ;
# 736 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *normalZ3 += areaZ;
# 737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 739 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 740 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemNodeNormals_npm(Real_t pfx[8],
# 741 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         Real_t pfy[8],
# 742 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         Real_t pfz[8],
# 743 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         const Real_t x[8],
# 744 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         const Real_t y[8],
# 745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         const Real_t z[8])
# 746 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 747 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < 8 ; ++i) {
# 748 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  pfx[i] = Real_t(0.0);
# 749 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  pfy[i] = Real_t(0.0);
# 750 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  pfz[i] = Real_t(0.0);
# 751 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 752 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 753 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 SumElemFaceNormal_npm(&pfx[0], &pfy[0], &pfz[0], &pfx[1], &pfy[1], &pfz[1], &pfx[2], &pfy[2], &pfz[2], &pfx[3], &pfy[3], &pfz[3], x[0], y[0], z[0], x[1], y[1], z[1], x[2], y[2], z[2], x[3], y[3], z[3]);
# 759 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 760 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 SumElemFaceNormal_npm(&pfx[0], &pfy[0], &pfz[0], &pfx[4], &pfy[4], &pfz[4], &pfx[5], &pfy[5], &pfz[5], &pfx[1], &pfy[1], &pfz[1], x[0], y[0], z[0], x[4], y[4], z[4], x[5], y[5], z[5], x[1], y[1], z[1]);
# 766 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 767 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 SumElemFaceNormal_npm(&pfx[1], &pfy[1], &pfz[1], &pfx[5], &pfy[5], &pfz[5], &pfx[6], &pfy[6], &pfz[6], &pfx[2], &pfy[2], &pfz[2], x[1], y[1], z[1], x[5], y[5], z[5], x[6], y[6], z[6], x[2], y[2], z[2]);
# 773 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 774 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 SumElemFaceNormal_npm(&pfx[2], &pfy[2], &pfz[2], &pfx[6], &pfy[6], &pfz[6], &pfx[7], &pfy[7], &pfz[7], &pfx[3], &pfy[3], &pfz[3], x[2], y[2], z[2], x[6], y[6], z[6], x[7], y[7], z[7], x[3], y[3], z[3]);
# 780 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 781 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 SumElemFaceNormal_npm(&pfx[3], &pfy[3], &pfz[3], &pfx[7], &pfy[7], &pfz[7], &pfx[4], &pfy[4], &pfz[4], &pfx[0], &pfy[0], &pfz[0], x[3], y[3], z[3], x[7], y[7], z[7], x[4], y[4], z[4], x[0], y[0], z[0]);
# 787 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 788 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 SumElemFaceNormal_npm(&pfx[4], &pfy[4], &pfz[4], &pfx[7], &pfy[7], &pfz[7], &pfx[6], &pfy[6], &pfz[6], &pfx[5], &pfy[5], &pfz[5], x[4], y[4], z[4], x[7], y[7], z[7], x[6], y[6], z[6], x[5], y[5], z[5]);
# 794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 796 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 797 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void SumElemStressesToNodeForces_npm( const Real_t B[][8],
# 798 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t stress_xx,
# 799 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t stress_yy,
# 800 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t stress_zz,
# 801 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Real_t* const fx,
# 802 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Real_t* const fy,
# 803 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         Real_t* const fz )
# 804 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 805 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pfx0 = B[0][0] ; Real_t pfx1 = B[0][1] ;
# 806 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pfx2 = B[0][2] ; Real_t pfx3 = B[0][3] ;
# 807 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pfx4 = B[0][4] ; Real_t pfx5 = B[0][5] ;
# 808 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pfx6 = B[0][6] ; Real_t pfx7 = B[0][7] ;
# 809 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 810 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pfy0 = B[1][0] ; Real_t pfy1 = B[1][1] ;
# 811 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pfy2 = B[1][2] ; Real_t pfy3 = B[1][3] ;
# 812 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pfy4 = B[1][4] ; Real_t pfy5 = B[1][5] ;
# 813 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pfy6 = B[1][6] ; Real_t pfy7 = B[1][7] ;
# 814 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 815 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pfz0 = B[2][0] ; Real_t pfz1 = B[2][1] ;
# 816 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pfz2 = B[2][2] ; Real_t pfz3 = B[2][3] ;
# 817 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pfz4 = B[2][4] ; Real_t pfz5 = B[2][5] ;
# 818 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pfz6 = B[2][6] ; Real_t pfz7 = B[2][7] ;
# 819 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 820 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[0] = -( stress_xx * pfx0 );
# 821 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[1] = -( stress_xx * pfx1 );
# 822 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[2] = -( stress_xx * pfx2 );
# 823 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[3] = -( stress_xx * pfx3 );
# 824 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[4] = -( stress_xx * pfx4 );
# 825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[5] = -( stress_xx * pfx5 );
# 826 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[6] = -( stress_xx * pfx6 );
# 827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fx[7] = -( stress_xx * pfx7 );
# 828 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 829 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[0] = -( stress_yy * pfy0 );
# 830 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[1] = -( stress_yy * pfy1 );
# 831 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[2] = -( stress_yy * pfy2 );
# 832 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[3] = -( stress_yy * pfy3 );
# 833 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[4] = -( stress_yy * pfy4 );
# 834 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[5] = -( stress_yy * pfy5 );
# 835 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[6] = -( stress_yy * pfy6 );
# 836 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fy[7] = -( stress_yy * pfy7 );
# 837 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 838 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[0] = -( stress_zz * pfz0 );
# 839 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[1] = -( stress_zz * pfz1 );
# 840 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[2] = -( stress_zz * pfz2 );
# 841 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[3] = -( stress_zz * pfz3 );
# 842 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[4] = -( stress_zz * pfz4 );
# 843 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[5] = -( stress_zz * pfz5 );
# 844 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[6] = -( stress_zz * pfz6 );
# 845 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 fz[7] = -( stress_zz * pfz7 );
# 846 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 848 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 849 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void IntegrateStressForElems_npm( Index_t numElem,
# 850 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Real_t *sigxx, Real_t *sigyy, Real_t *sigzz,
# 851 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Real_t *determ)
# 852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 853 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numElem8 = numElem * 8 ;
# 854 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *fx_elem = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753673654UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 855 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *fy_elem = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753673678UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 856 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *fz_elem = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753673685UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 857 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((fx_elem) ? static_cast<void> (0) : __assert_fail ("fx_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 857, __PRETTY_FUNCTION__)); ((fy_elem) ? static_cast<void> (0) : __assert_fail ("fy_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 857, __PRETTY_FUNCTION__)); ((fz_elem) ? static_cast<void> (0) : __assert_fail ("fz_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 857, __PRETTY_FUNCTION__));
# 858 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 859 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem)
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 861 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for( Index_t k=0 ; k<numElem ; ++k )
# 862 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 {
# 863 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t B[3][8] ;
# 864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x_local[8] ;
# 865 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y_local[8] ;
# 866 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z_local[8] ;
# 867 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 868 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t* elemNodes = domain.nodelist + (8 * k);
# 869 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 870 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 871 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for( Index_t lnode=0 ; lnode<8 ; ++lnode )
# 872 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 873 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t gnode = elemNodes[lnode];
# 874 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x_local[lnode] = domain.x[gnode];
# 875 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y_local[lnode] = domain.y[gnode];
# 876 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z_local[lnode] = domain.z[gnode];
# 877 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 878 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 879 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 880 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  CalcElemShapeFunctionDerivatives_npm(x_local, y_local, z_local, B, &determ[k]);
# 882 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 883 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  CalcElemNodeNormals_npm(B[0], B[1], B[2], x_local, y_local, z_local);
# 885 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 886 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  SumElemStressesToNodeForces_npm(B, sigxx[k], sigyy[k], sigzz[k], &fx_elem[k*8], &fy_elem[k*8], &fz_elem[k*8]) ;
# 899 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 899 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 900 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 901 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 {
# 902 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numNode = domain.numNode ;
# 903 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode)
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 905 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for( Index_t gnode=0 ; gnode<numNode ; ++gnode )
# 906 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 907 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t count = domain.nodeElemCount[gnode] ;
# 908 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t start = domain.nodeElemStart[gnode] ;
# 909 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t fx = Real_t(0.0) ;
# 910 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t fy = Real_t(0.0) ;
# 911 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t fz = Real_t(0.0) ;
# 912 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for (Index_t i=0 ; i < count ; ++i) {
# 913 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t elem = domain.nodeElemCornerList[start+i] ;
# 914 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fx += fx_elem[elem] ;
# 915 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fy += fy_elem[elem] ;
# 916 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fz += fz_elem[elem] ;
# 917 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 918 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fx[gnode] = fx ;
# 919 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fy[gnode] = fy ;
# 920 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fz[gnode] = fz ;
# 921 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 922 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 923 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 924 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fz_elem) - sizeof(void *)), 2224956529753673685UL);free((((unsigned char *)fz_elem) - sizeof(void *))); }) ;
# 925 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fy_elem) - sizeof(void *)), 2224956529753673678UL);free((((unsigned char *)fy_elem) - sizeof(void *))); }) ;
# 926 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fx_elem) - sizeof(void *)), 2224956529753673654UL);free((((unsigned char *)fx_elem) - sizeof(void *))); }) ;
# 927 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 930 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 931 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CollectDomainNodesToElemNodes_npm(const Index_t* elemToNode,
# 932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                   Real_t elemX[8],
# 933 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                   Real_t elemY[8],
# 934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                   Real_t elemZ[8])
# 935 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 936 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t nd0i = elemToNode[0] ;
# 937 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t nd1i = elemToNode[1] ;
# 938 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t nd2i = elemToNode[2] ;
# 939 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t nd3i = elemToNode[3] ;
# 940 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t nd4i = elemToNode[4] ;
# 941 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t nd5i = elemToNode[5] ;
# 942 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t nd6i = elemToNode[6] ;
# 943 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t nd7i = elemToNode[7] ;
# 944 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 945 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[0] = domain.x[nd0i];
# 946 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[1] = domain.x[nd1i];
# 947 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[2] = domain.x[nd2i];
# 948 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[3] = domain.x[nd3i];
# 949 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[4] = domain.x[nd4i];
# 950 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[5] = domain.x[nd5i];
# 951 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[6] = domain.x[nd6i];
# 952 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemX[7] = domain.x[nd7i];
# 953 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 954 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[0] = domain.y[nd0i];
# 955 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[1] = domain.y[nd1i];
# 956 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[2] = domain.y[nd2i];
# 957 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[3] = domain.y[nd3i];
# 958 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[4] = domain.y[nd4i];
# 959 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[5] = domain.y[nd5i];
# 960 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[6] = domain.y[nd6i];
# 961 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemY[7] = domain.y[nd7i];
# 962 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 963 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[0] = domain.z[nd0i];
# 964 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[1] = domain.z[nd1i];
# 965 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[2] = domain.z[nd2i];
# 966 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[3] = domain.z[nd3i];
# 967 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[4] = domain.z[nd4i];
# 968 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[5] = domain.z[nd5i];
# 969 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[6] = domain.z[nd6i];
# 970 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 elemZ[7] = domain.z[nd7i];
# 971 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 972 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 974 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 975 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void VoluDer_npm(const Real_t x0, const Real_t x1, const Real_t x2,
# 976 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t x3, const Real_t x4, const Real_t x5,
# 977 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t y0, const Real_t y1, const Real_t y2,
# 978 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t y3, const Real_t y4, const Real_t y5,
# 979 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t z0, const Real_t z1, const Real_t z2,
# 980 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             const Real_t z3, const Real_t z4, const Real_t z5,
# 981 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
             Real_t* dvdx, Real_t* dvdy, Real_t* dvdz)
# 982 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 983 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t twelfth = Real_t(1.0) / Real_t(12.0) ;
# 984 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 985 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdx =
# 986 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y1 + y2) * (z0 + z1) - (y0 + y1) * (z1 + z2) +
# 987 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y0 + y4) * (z3 + z4) - (y3 + y4) * (z0 + z4) -
# 988 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y2 + y5) * (z3 + z5) + (y3 + y5) * (z2 + z5);
# 989 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdy =
# 990 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 - (x1 + x2) * (z0 + z1) + (x0 + x1) * (z1 + z2) -
# 991 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (x0 + x4) * (z3 + z4) + (x3 + x4) * (z0 + z4) +
# 992 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (x2 + x5) * (z3 + z5) - (x3 + x5) * (z2 + z5);
# 993 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 994 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdz =
# 995 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 - (y1 + y2) * (x0 + x1) + (y0 + y1) * (x1 + x2) -
# 996 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y0 + y4) * (x3 + x4) + (y3 + y4) * (x0 + x4) +
# 997 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (y2 + y5) * (x3 + x5) - (y3 + y5) * (x2 + x5);
# 998 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 999 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdx *= twelfth;
# 1000 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdy *= twelfth;
# 1001 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 *dvdz *= twelfth;
# 1002 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1004 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1005 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemVolumeDerivative_npm(Real_t dvdx[8],
# 1006 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t dvdy[8],
# 1007 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t dvdz[8],
# 1008 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              const Real_t x[8],
# 1009 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              const Real_t y[8],
# 1010 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              const Real_t z[8])
# 1011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1012 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 VoluDer_npm(x[1], x[2], x[3], x[4], x[5], x[7], y[1], y[2], y[3], y[4], y[5], y[7], z[1], z[2], z[3], z[4], z[5], z[7], &dvdx[0], &dvdy[0], &dvdz[0]);
# 1016 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 VoluDer_npm(x[0], x[1], x[2], x[7], x[4], x[6], y[0], y[1], y[2], y[7], y[4], y[6], z[0], z[1], z[2], z[7], z[4], z[6], &dvdx[3], &dvdy[3], &dvdz[3]);
# 1020 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 VoluDer_npm(x[3], x[0], x[1], x[6], x[7], x[5], y[3], y[0], y[1], y[6], y[7], y[5], z[3], z[0], z[1], z[6], z[7], z[5], &dvdx[2], &dvdy[2], &dvdz[2]);
# 1024 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 VoluDer_npm(x[2], x[3], x[0], x[5], x[6], x[4], y[2], y[3], y[0], y[5], y[6], y[4], z[2], z[3], z[0], z[5], z[6], z[4], &dvdx[1], &dvdy[1], &dvdz[1]);
# 1028 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 VoluDer_npm(x[7], x[6], x[5], x[0], x[3], x[1], y[7], y[6], y[5], y[0], y[3], y[1], z[7], z[6], z[5], z[0], z[3], z[1], &dvdx[4], &dvdy[4], &dvdz[4]);
# 1032 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 VoluDer_npm(x[4], x[7], x[6], x[1], x[0], x[2], y[4], y[7], y[6], y[1], y[0], y[2], z[4], z[7], z[6], z[1], z[0], z[2], &dvdx[5], &dvdy[5], &dvdz[5]);
# 1036 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 VoluDer_npm(x[5], x[4], x[7], x[2], x[1], x[3], y[5], y[4], y[7], y[2], y[1], y[3], z[5], z[4], z[7], z[2], z[1], z[3], &dvdx[6], &dvdy[6], &dvdz[6]);
# 1040 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 VoluDer_npm(x[6], x[5], x[4], x[3], x[2], x[0], y[6], y[5], y[4], y[3], y[2], y[0], z[6], z[5], z[4], z[3], z[2], z[0], &dvdx[7], &dvdy[7], &dvdz[7]);
# 1044 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1046 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1047 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemFBHourglassForce_npm(Real_t *xd, Real_t *yd, Real_t *zd, Real_t *hourgam0,
# 1048 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hourgam1, Real_t *hourgam2, Real_t *hourgam3,
# 1049 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hourgam4, Real_t *hourgam5, Real_t *hourgam6,
# 1050 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hourgam7, Real_t coefficient,
# 1051 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                              Real_t *hgfx, Real_t *hgfy, Real_t *hgfz )
# 1052 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1053 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t i00=0;
# 1054 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t i01=1;
# 1055 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t i02=2;
# 1056 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t i03=3;
# 1057 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1058 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t h00 =
# 1059 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i00] * xd[0] + hourgam1[i00] * xd[1] +
# 1060 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i00] * xd[2] + hourgam3[i00] * xd[3] +
# 1061 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i00] * xd[4] + hourgam5[i00] * xd[5] +
# 1062 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i00] * xd[6] + hourgam7[i00] * xd[7];
# 1063 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1064 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t h01 =
# 1065 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i01] * xd[0] + hourgam1[i01] * xd[1] +
# 1066 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i01] * xd[2] + hourgam3[i01] * xd[3] +
# 1067 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i01] * xd[4] + hourgam5[i01] * xd[5] +
# 1068 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i01] * xd[6] + hourgam7[i01] * xd[7];
# 1069 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1070 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t h02 =
# 1071 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i02] * xd[0] + hourgam1[i02] * xd[1]+
# 1072 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i02] * xd[2] + hourgam3[i02] * xd[3]+
# 1073 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i02] * xd[4] + hourgam5[i02] * xd[5]+
# 1074 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i02] * xd[6] + hourgam7[i02] * xd[7];
# 1075 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1076 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t h03 =
# 1077 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i03] * xd[0] + hourgam1[i03] * xd[1] +
# 1078 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i03] * xd[2] + hourgam3[i03] * xd[3] +
# 1079 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i03] * xd[4] + hourgam5[i03] * xd[5] +
# 1080 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i03] * xd[6] + hourgam7[i03] * xd[7];
# 1081 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1082 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[0] = coefficient *
# 1083 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam0[i00] * h00 + hourgam0[i01] * h01 +
# 1084 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam0[i02] * h02 + hourgam0[i03] * h03);
# 1085 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1086 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[1] = coefficient *
# 1087 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam1[i00] * h00 + hourgam1[i01] * h01 +
# 1088 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam1[i02] * h02 + hourgam1[i03] * h03);
# 1089 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1090 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[2] = coefficient *
# 1091 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam2[i00] * h00 + hourgam2[i01] * h01 +
# 1092 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam2[i02] * h02 + hourgam2[i03] * h03);
# 1093 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1094 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[3] = coefficient *
# 1095 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam3[i00] * h00 + hourgam3[i01] * h01 +
# 1096 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam3[i02] * h02 + hourgam3[i03] * h03);
# 1097 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1098 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[4] = coefficient *
# 1099 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam4[i00] * h00 + hourgam4[i01] * h01 +
# 1100 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam4[i02] * h02 + hourgam4[i03] * h03);
# 1101 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1102 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[5] = coefficient *
# 1103 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam5[i00] * h00 + hourgam5[i01] * h01 +
# 1104 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam5[i02] * h02 + hourgam5[i03] * h03);
# 1105 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1106 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[6] = coefficient *
# 1107 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam6[i00] * h00 + hourgam6[i01] * h01 +
# 1108 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam6[i02] * h02 + hourgam6[i03] * h03);
# 1109 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1110 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfx[7] = coefficient *
# 1111 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam7[i00] * h00 + hourgam7[i01] * h01 +
# 1112 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam7[i02] * h02 + hourgam7[i03] * h03);
# 1113 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1114 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h00 =
# 1115 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i00] * yd[0] + hourgam1[i00] * yd[1] +
# 1116 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i00] * yd[2] + hourgam3[i00] * yd[3] +
# 1117 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i00] * yd[4] + hourgam5[i00] * yd[5] +
# 1118 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i00] * yd[6] + hourgam7[i00] * yd[7];
# 1119 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1120 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h01 =
# 1121 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i01] * yd[0] + hourgam1[i01] * yd[1] +
# 1122 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i01] * yd[2] + hourgam3[i01] * yd[3] +
# 1123 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i01] * yd[4] + hourgam5[i01] * yd[5] +
# 1124 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i01] * yd[6] + hourgam7[i01] * yd[7];
# 1125 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1126 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h02 =
# 1127 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i02] * yd[0] + hourgam1[i02] * yd[1]+
# 1128 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i02] * yd[2] + hourgam3[i02] * yd[3]+
# 1129 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i02] * yd[4] + hourgam5[i02] * yd[5]+
# 1130 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i02] * yd[6] + hourgam7[i02] * yd[7];
# 1131 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1132 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h03 =
# 1133 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i03] * yd[0] + hourgam1[i03] * yd[1] +
# 1134 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i03] * yd[2] + hourgam3[i03] * yd[3] +
# 1135 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i03] * yd[4] + hourgam5[i03] * yd[5] +
# 1136 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i03] * yd[6] + hourgam7[i03] * yd[7];
# 1137 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1138 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1139 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[0] = coefficient *
# 1140 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam0[i00] * h00 + hourgam0[i01] * h01 +
# 1141 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam0[i02] * h02 + hourgam0[i03] * h03);
# 1142 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1143 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[1] = coefficient *
# 1144 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam1[i00] * h00 + hourgam1[i01] * h01 +
# 1145 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam1[i02] * h02 + hourgam1[i03] * h03);
# 1146 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1147 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[2] = coefficient *
# 1148 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam2[i00] * h00 + hourgam2[i01] * h01 +
# 1149 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam2[i02] * h02 + hourgam2[i03] * h03);
# 1150 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1151 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[3] = coefficient *
# 1152 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam3[i00] * h00 + hourgam3[i01] * h01 +
# 1153 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam3[i02] * h02 + hourgam3[i03] * h03);
# 1154 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1155 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[4] = coefficient *
# 1156 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam4[i00] * h00 + hourgam4[i01] * h01 +
# 1157 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam4[i02] * h02 + hourgam4[i03] * h03);
# 1158 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1159 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[5] = coefficient *
# 1160 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam5[i00] * h00 + hourgam5[i01] * h01 +
# 1161 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam5[i02] * h02 + hourgam5[i03] * h03);
# 1162 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1163 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[6] = coefficient *
# 1164 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam6[i00] * h00 + hourgam6[i01] * h01 +
# 1165 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam6[i02] * h02 + hourgam6[i03] * h03);
# 1166 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1167 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfy[7] = coefficient *
# 1168 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam7[i00] * h00 + hourgam7[i01] * h01 +
# 1169 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam7[i02] * h02 + hourgam7[i03] * h03);
# 1170 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1171 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h00 =
# 1172 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i00] * zd[0] + hourgam1[i00] * zd[1] +
# 1173 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i00] * zd[2] + hourgam3[i00] * zd[3] +
# 1174 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i00] * zd[4] + hourgam5[i00] * zd[5] +
# 1175 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i00] * zd[6] + hourgam7[i00] * zd[7];
# 1176 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1177 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h01 =
# 1178 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i01] * zd[0] + hourgam1[i01] * zd[1] +
# 1179 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i01] * zd[2] + hourgam3[i01] * zd[3] +
# 1180 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i01] * zd[4] + hourgam5[i01] * zd[5] +
# 1181 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i01] * zd[6] + hourgam7[i01] * zd[7];
# 1182 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1183 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h02 =
# 1184 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i02] * zd[0] + hourgam1[i02] * zd[1]+
# 1185 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i02] * zd[2] + hourgam3[i02] * zd[3]+
# 1186 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i02] * zd[4] + hourgam5[i02] * zd[5]+
# 1187 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i02] * zd[6] + hourgam7[i02] * zd[7];
# 1188 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1189 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 h03 =
# 1190 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam0[i03] * zd[0] + hourgam1[i03] * zd[1] +
# 1191 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam2[i03] * zd[2] + hourgam3[i03] * zd[3] +
# 1192 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam4[i03] * zd[4] + hourgam5[i03] * zd[5] +
# 1193 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hourgam6[i03] * zd[6] + hourgam7[i03] * zd[7];
# 1194 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1195 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[0] = coefficient *
# 1197 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam0[i00] * h00 + hourgam0[i01] * h01 +
# 1198 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam0[i02] * h02 + hourgam0[i03] * h03);
# 1199 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1200 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[1] = coefficient *
# 1201 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam1[i00] * h00 + hourgam1[i01] * h01 +
# 1202 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam1[i02] * h02 + hourgam1[i03] * h03);
# 1203 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1204 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[2] = coefficient *
# 1205 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam2[i00] * h00 + hourgam2[i01] * h01 +
# 1206 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam2[i02] * h02 + hourgam2[i03] * h03);
# 1207 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1208 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[3] = coefficient *
# 1209 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam3[i00] * h00 + hourgam3[i01] * h01 +
# 1210 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam3[i02] * h02 + hourgam3[i03] * h03);
# 1211 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1212 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[4] = coefficient *
# 1213 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam4[i00] * h00 + hourgam4[i01] * h01 +
# 1214 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam4[i02] * h02 + hourgam4[i03] * h03);
# 1215 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1216 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[5] = coefficient *
# 1217 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam5[i00] * h00 + hourgam5[i01] * h01 +
# 1218 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam5[i02] * h02 + hourgam5[i03] * h03);
# 1219 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1220 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[6] = coefficient *
# 1221 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam6[i00] * h00 + hourgam6[i01] * h01 +
# 1222 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam6[i02] * h02 + hourgam6[i03] * h03);
# 1223 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1224 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 hgfz[7] = coefficient *
# 1225 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (hourgam7[i00] * h00 + hourgam7[i01] * h01 +
# 1226 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  hourgam7[i02] * h02 + hourgam7[i03] * h03);
# 1227 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1229 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1230 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcFBHourglassForceForElems_npm(Real_t *determ,
# 1231 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t *x8n, Real_t *y8n, Real_t *z8n,
# 1232 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t *dvdx, Real_t *dvdy, Real_t *dvdz,
# 1233 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t hourg)
# 1234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1235 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1236 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1237 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1238 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1239 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1240 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1241 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1242 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numElem = domain.numElem ;
# 1243 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numElem8 = numElem * 8 ;
# 1244 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *fx_elem = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753675063UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 1245 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *fy_elem = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753675087UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 1246 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *fz_elem = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753675094UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 1247 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((fx_elem) ? static_cast<void> (0) : __assert_fail ("fx_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1247, __PRETTY_FUNCTION__)); ((fy_elem) ? static_cast<void> (0) : __assert_fail ("fy_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1247, __PRETTY_FUNCTION__)); ((fz_elem) ? static_cast<void> (0) : __assert_fail ("fz_elem", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1247, __PRETTY_FUNCTION__));
# 1248 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1249 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t gamma[4][8];
# 1250 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1251 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][0] = Real_t( 1.);
# 1252 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][1] = Real_t( 1.);
# 1253 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][2] = Real_t(-1.);
# 1254 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][3] = Real_t(-1.);
# 1255 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][4] = Real_t(-1.);
# 1256 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][5] = Real_t(-1.);
# 1257 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][6] = Real_t( 1.);
# 1258 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[0][7] = Real_t( 1.);
# 1259 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][0] = Real_t( 1.);
# 1260 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][1] = Real_t(-1.);
# 1261 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][2] = Real_t(-1.);
# 1262 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][3] = Real_t( 1.);
# 1263 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][4] = Real_t(-1.);
# 1264 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][5] = Real_t( 1.);
# 1265 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][6] = Real_t( 1.);
# 1266 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[1][7] = Real_t(-1.);
# 1267 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][0] = Real_t( 1.);
# 1268 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][1] = Real_t(-1.);
# 1269 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][2] = Real_t( 1.);
# 1270 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][3] = Real_t(-1.);
# 1271 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][4] = Real_t( 1.);
# 1272 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][5] = Real_t(-1.);
# 1273 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][6] = Real_t( 1.);
# 1274 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[2][7] = Real_t(-1.);
# 1275 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][0] = Real_t(-1.);
# 1276 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][1] = Real_t( 1.);
# 1277 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][2] = Real_t(-1.);
# 1278 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][3] = Real_t( 1.);
# 1279 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][4] = Real_t( 1.);
# 1280 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][5] = Real_t(-1.);
# 1281 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][6] = Real_t( 1.);
# 1282 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 gamma[3][7] = Real_t(-1.);
# 1283 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1284 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1285 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1286 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1287 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem, hourg)
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1289 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for(Index_t i2=0; i2<numElem; ++i2){
# 1290 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *fx_local, *fy_local, *fz_local ;
# 1291 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t hgfx[8], hgfy[8], hgfz[8] ;
# 1292 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1293 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t coefficient;
# 1294 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1295 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t hourgam0[4], hourgam1[4], hourgam2[4], hourgam3[4] ;
# 1296 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t hourgam4[4], hourgam5[4], hourgam6[4], hourgam7[4];
# 1297 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t xd1[8], yd1[8], zd1[8] ;
# 1298 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1299 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  const Index_t *elemToNode = domain.nodelist + (8 * i2);
# 1300 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t i3=8*i2;
# 1301 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t volinv=Real_t(1.0)/determ[i2];
# 1302 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ss1, mass1, volume13 ;
# 1303 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for(Index_t i1=0;i1<4;++i1){
# 1304 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1305 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t hourmodx =
# 1306 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            x8n[i3] * gamma[i1][0] + x8n[i3+1] * gamma[i1][1] +
# 1307 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            x8n[i3+2] * gamma[i1][2] + x8n[i3+3] * gamma[i1][3] +
# 1308 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            x8n[i3+4] * gamma[i1][4] + x8n[i3+5] * gamma[i1][5] +
# 1309 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            x8n[i3+6] * gamma[i1][6] + x8n[i3+7] * gamma[i1][7];
# 1310 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1311 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t hourmody =
# 1312 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            y8n[i3] * gamma[i1][0] + y8n[i3+1] * gamma[i1][1] +
# 1313 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            y8n[i3+2] * gamma[i1][2] + y8n[i3+3] * gamma[i1][3] +
# 1314 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            y8n[i3+4] * gamma[i1][4] + y8n[i3+5] * gamma[i1][5] +
# 1315 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            y8n[i3+6] * gamma[i1][6] + y8n[i3+7] * gamma[i1][7];
# 1316 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1317 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t hourmodz =
# 1318 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            z8n[i3] * gamma[i1][0] + z8n[i3+1] * gamma[i1][1] +
# 1319 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            z8n[i3+2] * gamma[i1][2] + z8n[i3+3] * gamma[i1][3] +
# 1320 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            z8n[i3+4] * gamma[i1][4] + z8n[i3+5] * gamma[i1][5] +
# 1321 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            z8n[i3+6] * gamma[i1][6] + z8n[i3+7] * gamma[i1][7];
# 1322 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1323 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam0[i1] = gamma[i1][0] - volinv*(dvdx[i3 ] * hourmodx +
# 1324 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3 ] * hourmody +
# 1325 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3 ] * hourmodz );
# 1326 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1327 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam1[i1] = gamma[i1][1] - volinv*(dvdx[i3+1] * hourmodx +
# 1328 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+1] * hourmody +
# 1329 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+1] * hourmodz );
# 1330 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1331 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam2[i1] = gamma[i1][2] - volinv*(dvdx[i3+2] * hourmodx +
# 1332 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+2] * hourmody +
# 1333 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+2] * hourmodz );
# 1334 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1335 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam3[i1] = gamma[i1][3] - volinv*(dvdx[i3+3] * hourmodx +
# 1336 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+3] * hourmody +
# 1337 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+3] * hourmodz );
# 1338 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1339 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam4[i1] = gamma[i1][4] - volinv*(dvdx[i3+4] * hourmodx +
# 1340 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+4] * hourmody +
# 1341 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+4] * hourmodz );
# 1342 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1343 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam5[i1] = gamma[i1][5] - volinv*(dvdx[i3+5] * hourmodx +
# 1344 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+5] * hourmody +
# 1345 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+5] * hourmodz );
# 1346 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1347 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam6[i1] = gamma[i1][6] - volinv*(dvdx[i3+6] * hourmodx +
# 1348 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+6] * hourmody +
# 1349 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+6] * hourmodz );
# 1350 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1351 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   hourgam7[i1] = gamma[i1][7] - volinv*(dvdx[i3+7] * hourmodx +
# 1352 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdy[i3+7] * hourmody +
# 1353 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
               dvdz[i3+7] * hourmodz );
# 1354 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1355 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 1356 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1357 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1358 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1359 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1360 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ss1=domain.ss[i2];
# 1361 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  mass1=domain.elemMass[i2];
# 1362 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  volume13=CBRT_npm(determ[i2]);
# 1363 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1364 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n0si2 = elemToNode[0];
# 1365 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n1si2 = elemToNode[1];
# 1366 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n2si2 = elemToNode[2];
# 1367 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n3si2 = elemToNode[3];
# 1368 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n4si2 = elemToNode[4];
# 1369 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n5si2 = elemToNode[5];
# 1370 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n6si2 = elemToNode[6];
# 1371 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n7si2 = elemToNode[7];
# 1372 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1373 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[0] = domain.xd[n0si2];
# 1374 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[1] = domain.xd[n1si2];
# 1375 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[2] = domain.xd[n2si2];
# 1376 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[3] = domain.xd[n3si2];
# 1377 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[4] = domain.xd[n4si2];
# 1378 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[5] = domain.xd[n5si2];
# 1379 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[6] = domain.xd[n6si2];
# 1380 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xd1[7] = domain.xd[n7si2];
# 1381 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1382 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[0] = domain.yd[n0si2];
# 1383 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[1] = domain.yd[n1si2];
# 1384 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[2] = domain.yd[n2si2];
# 1385 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[3] = domain.yd[n3si2];
# 1386 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[4] = domain.yd[n4si2];
# 1387 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[5] = domain.yd[n5si2];
# 1388 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[6] = domain.yd[n6si2];
# 1389 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  yd1[7] = domain.yd[n7si2];
# 1390 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1391 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[0] = domain.zd[n0si2];
# 1392 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[1] = domain.zd[n1si2];
# 1393 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[2] = domain.zd[n2si2];
# 1394 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[3] = domain.zd[n3si2];
# 1395 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[4] = domain.zd[n4si2];
# 1396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[5] = domain.zd[n5si2];
# 1397 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[6] = domain.zd[n6si2];
# 1398 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zd1[7] = domain.zd[n7si2];
# 1399 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1400 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  coefficient = - hourg * Real_t(0.01) * ss1 * mass1 / volume13;
# 1401 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1402 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  CalcElemFBHourglassForce_npm(xd1, yd1, zd1, hourgam0, hourgam1, hourgam2, hourgam3, hourgam4, hourgam5, hourgam6, hourgam7, coefficient, hgfx, hgfy, hgfz);
# 1406 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1407 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local = &fx_elem[i3] ;
# 1408 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[0] = hgfx[0];
# 1409 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[1] = hgfx[1];
# 1410 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[2] = hgfx[2];
# 1411 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[3] = hgfx[3];
# 1412 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[4] = hgfx[4];
# 1413 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[5] = hgfx[5];
# 1414 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[6] = hgfx[6];
# 1415 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fx_local[7] = hgfx[7];
# 1416 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1417 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local = &fy_elem[i3] ;
# 1418 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[0] = hgfy[0];
# 1419 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[1] = hgfy[1];
# 1420 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[2] = hgfy[2];
# 1421 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[3] = hgfy[3];
# 1422 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[4] = hgfy[4];
# 1423 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[5] = hgfy[5];
# 1424 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[6] = hgfy[6];
# 1425 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fy_local[7] = hgfy[7];
# 1426 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1427 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local = &fz_elem[i3] ;
# 1428 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[0] = hgfz[0];
# 1429 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[1] = hgfz[1];
# 1430 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[2] = hgfz[2];
# 1431 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[3] = hgfz[3];
# 1432 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[4] = hgfz[4];
# 1433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[5] = hgfz[5];
# 1434 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[6] = hgfz[6];
# 1435 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  fz_local[7] = hgfz[7];
# 1470 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1470 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1472 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 {
# 1473 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t numNode = domain.numNode ;
# 1474 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode)
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1476 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for( Index_t gnode=0 ; gnode<numNode ; ++gnode )
# 1477 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 1478 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t count = domain.nodeElemCount[gnode] ;
# 1479 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t start = domain.nodeElemStart[gnode] ;
# 1480 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t fx = Real_t(0.0) ;
# 1481 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t fy = Real_t(0.0) ;
# 1482 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t fz = Real_t(0.0) ;
# 1483 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for (Index_t i=0 ; i < count ; ++i) {
# 1484 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t elem = domain.nodeElemCornerList[start+i] ;
# 1485 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fx += fx_elem[elem] ;
# 1486 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fy += fy_elem[elem] ;
# 1487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    fz += fz_elem[elem] ;
# 1488 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 1489 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fx[gnode] += fx ;
# 1490 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fy[gnode] += fy ;
# 1491 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.fz[gnode] += fz ;
# 1492 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 1493 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1494 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1495 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fz_elem) - sizeof(void *)), 2224956529753675094UL);free((((unsigned char *)fz_elem) - sizeof(void *))); }) ;
# 1496 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fy_elem) - sizeof(void *)), 2224956529753675087UL);free((((unsigned char *)fy_elem) - sizeof(void *))); }) ;
# 1497 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)fx_elem) - sizeof(void *)), 2224956529753675063UL);free((((unsigned char *)fx_elem) - sizeof(void *))); }) ;
# 1498 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1500 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1501 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcHourglassControlForElems_npm(Real_t determ[], Real_t hgcoef)
# 1502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1503 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numElem = domain.numElem ;
# 1504 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numElem8 = numElem * 8 ;
# 1505 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *dvdx = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753673959UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 1506 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *dvdy = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674004UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 1507 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *dvdz = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674011UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 1508 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *x8n = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674018UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 1509 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *y8n = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674025UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 1510 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *z8n = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem8) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem8, 2224956529753674032UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 1511 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((dvdx) ? static_cast<void> (0) : __assert_fail ("dvdx", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1511, __PRETTY_FUNCTION__)); ((dvdy) ? static_cast<void> (0) : __assert_fail ("dvdy", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1511, __PRETTY_FUNCTION__)); ((dvdz) ? static_cast<void> (0) : __assert_fail ("dvdz", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1511, __PRETTY_FUNCTION__));
# 1512 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((x8n) ? static_cast<void> (0) : __assert_fail ("x8n", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1512, __PRETTY_FUNCTION__)); ((y8n) ? static_cast<void> (0) : __assert_fail ("y8n", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1512, __PRETTY_FUNCTION__)); ((z8n) ? static_cast<void> (0) : __assert_fail ("z8n", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1512, __PRETTY_FUNCTION__));
# 1513 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1514 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem)
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1516 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i=0 ; i<numElem ; ++i){
# 1517 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x1[8], y1[8], z1[8] ;
# 1518 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t pfx[8], pfy[8], pfz[8] ;
# 1519 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1520 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t* elemToNode = domain.nodelist + (8 * i);
# 1521 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  CollectDomainNodesToElemNodes_npm(elemToNode, x1, y1, z1);
# 1522 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  CalcElemVolumeDerivative_npm(pfx, pfy, pfz, x1, y1, z1);
# 1524 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1525 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1526 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for(Index_t ii=0;ii<8;++ii){
# 1527 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t jj=8*i+ii;
# 1528 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1529 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   dvdx[jj] = pfx[ii];
# 1530 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   dvdy[jj] = pfy[ii];
# 1531 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   dvdz[jj] = pfz[ii];
# 1532 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x8n[jj] = x1[ii];
# 1533 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y8n[jj] = y1[ii];
# 1534 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z8n[jj] = z1[ii];
# 1535 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 1536 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1537 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  determ[i] = domain.volo[i] * domain.v[i];
# 1538 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1539 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1540 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( domain.v[i] <= Real_t(0.0) ) {
# 1541 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   exit(VolumeError) ;
# 1542 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 1543 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1544 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1545 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if ( hgcoef > Real_t(0.) ) {
# 1546 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  CalcFBHourglassForceForElems_npm(determ, x8n, y8n, z8n, dvdx, dvdy, dvdz, hgcoef) ;
# 1547 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1548 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1549 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)z8n) - sizeof(void *)), 2224956529753674032UL);free((((unsigned char *)z8n) - sizeof(void *))); }) ;
# 1550 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)y8n) - sizeof(void *)), 2224956529753674025UL);free((((unsigned char *)y8n) - sizeof(void *))); }) ;
# 1551 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)x8n) - sizeof(void *)), 2224956529753674018UL);free((((unsigned char *)x8n) - sizeof(void *))); }) ;
# 1552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)dvdz) - sizeof(void *)), 2224956529753674011UL);free((((unsigned char *)dvdz) - sizeof(void *))); }) ;
# 1553 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)dvdy) - sizeof(void *)), 2224956529753674004UL);free((((unsigned char *)dvdy) - sizeof(void *))); }) ;
# 1554 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)dvdx) - sizeof(void *)), 2224956529753673959UL);free((((unsigned char *)dvdx) - sizeof(void *))); }) ;
# 1555 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1556 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 return ;
# 1557 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1559 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1560 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcVolumeForceForElems_npm()
# 1561 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1562 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numElem = domain.numElem ;
# 1563 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (numElem != 0) {
# 1564 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t hgcoef = domain.hgcoef ;
# 1565 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *sigxx = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem, 2224956529753673505UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 1566 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *sigyy = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem, 2224956529753673483UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 1567 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *sigzz = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem, 2224956529753673490UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 1568 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *determ = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * numElem) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * numElem, 2224956529753673497UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 1569 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        ((sigxx) ? static_cast<void> (0) : __assert_fail ("sigxx", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1569, __PRETTY_FUNCTION__)); ((sigyy) ? static_cast<void> (0) : __assert_fail ("sigyy", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1569, __PRETTY_FUNCTION__)); ((sigzz) ? static_cast<void> (0) : __assert_fail ("sigzz", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1569, __PRETTY_FUNCTION__)); ((determ) ? static_cast<void> (0) : __assert_fail ("determ", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 1569, __PRETTY_FUNCTION__));
# 1570 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1571 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1572 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  InitStressTermsForElems_npm(numElem, sigxx, sigyy, sigzz);
# 1573 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1574 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1575 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1576 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  IntegrateStressForElems_npm(numElem, sigxx, sigyy, sigzz, determ) ;
# 1577 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1578 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem)
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1580 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for ( Index_t k=0 ; k<numElem ; ++k ) {
# 1581 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (determ[k] <= Real_t(0.0)) {
# 1582 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    exit(VolumeError) ;
# 1583 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 1584 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 1585 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1586 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  CalcHourglassControlForElems_npm(determ, hgcoef) ;
# 1587 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1588 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)determ) - sizeof(void *)), 2224956529753673497UL);free((((unsigned char *)determ) - sizeof(void *))); }) ;
# 1589 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)sigzz) - sizeof(void *)), 2224956529753673490UL);free((((unsigned char *)sigzz) - sizeof(void *))); }) ;
# 1590 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)sigyy) - sizeof(void *)), 2224956529753673483UL);free((((unsigned char *)sigyy) - sizeof(void *))); }) ;
# 1591 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)sigxx) - sizeof(void *)), 2224956529753673505UL);free((((unsigned char *)sigxx) - sizeof(void *))); }) ;
# 1592 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1593 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1595 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline void CalcForceForNodes_npm()
# 1596 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1597 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numNode = domain.numNode ;
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode)
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1599 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i=0; i<numNode; ++i) {
# 1600 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.fx[i] = Real_t(0.0) ;
# 1601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.fy[i] = Real_t(0.0) ;
# 1602 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.fz[i] = Real_t(0.0) ;
# 1603 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1605 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1606 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcVolumeForceForElems_npm() ;
# 1607 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1609 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1610 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1613 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1614 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcAccelerationForNodes_npm()
# 1615 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1616 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numNode = domain.numNode ;
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode)
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0; i < numNode; ++i) {
# 1619 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.xdd[i] = domain.fx[i] / domain.nodalMass[i];
# 1620 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.ydd[i] = domain.fy[i] / domain.nodalMass[i];
# 1621 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.zdd[i] = domain.fz[i] / domain.nodalMass[i];
# 1622 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1623 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1626 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1627 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void ApplyAccelerationBoundaryConditionsForNodes_npm()
# 1628 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1629 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numNodeBC = (domain.sizeX+1)*(domain.sizeX+1) ;
# 1630 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    {
# 1633 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t i;
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(numNodeBC)
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1635 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (i=0; i<numNodeBC; ++i) { domain.xdd[domain.symmX[i]] = Real_t(0.0); } ;
# 1637 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1638 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t j;
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(numNodeBC)
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1640 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (j=0; j<numNodeBC; ++j) { domain.ydd[domain.symmY[j]] = Real_t(0.0); } ;
# 1642 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t k;
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(numNodeBC)
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1645 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (k=0; k<numNodeBC; ++k) { domain.zdd[domain.symmZ[k]] = Real_t(0.0); } ;
# 1647 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 1648 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1650 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1651 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcVelocityForNodes_npm(const Real_t dt, const Real_t u_cut)
# 1652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1653 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numNode = domain.numNode ;
# 1654 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode)
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1656 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for ( Index_t i = 0 ; i < numNode ; ++i )
# 1657 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 {
# 1658 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t xdtmp, ydtmp, zdtmp ;
# 1659 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1660 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  xdtmp = domain.xd[i] + domain.xdd[i] * dt ;
# 1661 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (FABS_npm(xdtmp) < u_cut) {xdtmp = Real_t(0.0); };
# 1662 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.xd[i] = xdtmp ;
# 1663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1664 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ydtmp = domain.yd[i] + domain.ydd[i] * dt ;
# 1665 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (FABS_npm(ydtmp) < u_cut) {ydtmp = Real_t(0.0); };
# 1666 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.yd[i] = ydtmp ;
# 1667 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1668 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  zdtmp = domain.zd[i] + domain.zdd[i] * dt ;
# 1669 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (FABS_npm(zdtmp) < u_cut) {zdtmp = Real_t(0.0); };
# 1670 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.zd[i] = zdtmp ;
# 1671 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1672 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1674 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1675 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcPositionForNodes_npm(const Real_t dt)
# 1676 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1677 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numNode = domain.numNode ;
# 1678 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numNode)
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1680 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for ( Index_t i = 0 ; i < numNode ; ++i )
# 1681 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 {
# 1682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.x[i] += domain.xd[i] * dt ;
# 1683 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.y[i] += domain.yd[i] * dt ;
# 1684 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.z[i] += domain.zd[i] * dt ;
# 1685 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 1686 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1688 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void LagrangeNodal_npm()
# 1690 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1691 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t delt = domain.deltatime ;
# 1692 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t u_cut = domain.u_cut ;
# 1693 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1694 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1695 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcForceForNodes_npm();
# 1697 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1698 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcAccelerationForNodes_npm();
# 1699 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1700 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 ApplyAccelerationBoundaryConditionsForNodes_npm();
# 1701 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1702 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcVelocityForNodes_npm(delt, u_cut) ;
# 1703 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1704 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcPositionForNodes_npm(delt);
# 1705 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1706 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 return;
# 1707 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1709 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1710 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t CalcElemVolumeScalar_npm( const Real_t x0, const Real_t x1,
# 1711 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t x2, const Real_t x3,
# 1712 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t x4, const Real_t x5,
# 1713 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t x6, const Real_t x7,
# 1714 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y0, const Real_t y1,
# 1715 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y2, const Real_t y3,
# 1716 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y4, const Real_t y5,
# 1717 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t y6, const Real_t y7,
# 1718 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z0, const Real_t z1,
# 1719 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z2, const Real_t z3,
# 1720 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z4, const Real_t z5,
# 1721 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       const Real_t z6, const Real_t z7 )
# 1722 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1723 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t twelveth = Real_t(1.0)/Real_t(12.0);
# 1724 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1725 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dx61 = x6 - x1;
# 1726 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dy61 = y6 - y1;
# 1727 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dz61 = z6 - z1;
# 1728 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1729 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dx70 = x7 - x0;
# 1730 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dy70 = y7 - y0;
# 1731 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dz70 = z7 - z0;
# 1732 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1733 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dx63 = x6 - x3;
# 1734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dy63 = y6 - y3;
# 1735 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dz63 = z6 - z3;
# 1736 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dx20 = x2 - x0;
# 1738 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dy20 = y2 - y0;
# 1739 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dz20 = z2 - z0;
# 1740 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1741 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dx50 = x5 - x0;
# 1742 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dy50 = y5 - y0;
# 1743 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dz50 = z5 - z0;
# 1744 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dx64 = x6 - x4;
# 1746 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dy64 = y6 - y4;
# 1747 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dz64 = z6 - z4;
# 1748 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1749 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dx31 = x3 - x1;
# 1750 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dy31 = y3 - y1;
# 1751 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dz31 = z3 - z1;
# 1752 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1753 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dx72 = x7 - x2;
# 1754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dy72 = y7 - y2;
# 1755 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dz72 = z7 - z2;
# 1756 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1757 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dx43 = x4 - x3;
# 1758 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dy43 = y4 - y3;
# 1759 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dz43 = z4 - z3;
# 1760 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1761 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dx57 = x5 - x7;
# 1762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dy57 = y5 - y7;
# 1763 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dz57 = z5 - z7;
# 1764 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1765 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dx14 = x1 - x4;
# 1766 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dy14 = y1 - y4;
# 1767 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dz14 = z1 - z4;
# 1768 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1769 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dx25 = x2 - x5;
# 1770 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dy25 = y2 - y5;
# 1771 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dz25 = z2 - z5;
# 1772 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1773 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1774 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1775 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1776 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t volume =
# 1777 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((dx31 + dx72)*((dy63)*(dz20) - (dy20)*(dz63)) + (dy31 + dy72)*((dx20)*(dz63) - (dx63)*(dz20)) + (dz31 + dz72)*((dx63)*(dy20) - (dx20)*(dy63)))
# 1778 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1779 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                +
# 1780 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((dx43 + dx57)*((dy64)*(dz70) - (dy70)*(dz64)) + (dy43 + dy57)*((dx70)*(dz64) - (dx64)*(dz70)) + (dz43 + dz57)*((dx64)*(dy70) - (dx70)*(dy64)))
# 1781 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1782 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                +
# 1783 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((dx14 + dx25)*((dy61)*(dz50) - (dy50)*(dz61)) + (dy14 + dy25)*((dx50)*(dz61) - (dx61)*(dz50)) + (dz14 + dz25)*((dx61)*(dy50) - (dx50)*(dy61)))
# 1784 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1785 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                               ;
# 1786 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1787 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1788 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1789 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 volume *= twelveth;
# 1790 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1791 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ____chimes_ret_var_3; ____chimes_ret_var_3 = (volume); return ____chimes_ret_var_3; ;
# 1792 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1795 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t CalcElemVolume_npm( const Real_t x[8], const Real_t y[8], const Real_t z[8] )
# 1796 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1797 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ____chimes_ret_var_4; ____chimes_ret_var_4 = (CalcElemVolumeScalar_npm(x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7], y[0], y[1], y[2], y[3], y[4], y[5], y[6], y[7], z[0], z[1], z[2], z[3], z[4], z[5], z[6], z[7])); return ____chimes_ret_var_4; ;
# 1800 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1802 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1803 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t AreaFace_npm( const Real_t x0, const Real_t x1,
# 1804 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t x2, const Real_t x3,
# 1805 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t y0, const Real_t y1,
# 1806 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t y2, const Real_t y3,
# 1807 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t z0, const Real_t z1,
# 1808 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    const Real_t z2, const Real_t z3)
# 1809 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1810 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t fx = (x2 - x0) - (x3 - x1);
# 1811 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t fy = (y2 - y0) - (y3 - y1);
# 1812 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t fz = (z2 - z0) - (z3 - z1);
# 1813 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t gx = (x2 - x0) + (x3 - x1);
# 1814 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t gy = (y2 - y0) + (y3 - y1);
# 1815 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t gz = (z2 - z0) + (z3 - z1);
# 1816 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t area =
# 1817 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (fx * fx + fy * fy + fz * fz) *
# 1818 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (gx * gx + gy * gy + gz * gz) -
# 1819 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (fx * gx + fy * gy + fz * gz) *
# 1820 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 (fx * gx + fy * gy + fz * gz);
# 1821 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ____chimes_ret_var_5; ____chimes_ret_var_5 = (area); return ____chimes_ret_var_5; ;
# 1822 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1824 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
Real_t CalcElemCharacteristicLength_npm( const Real_t x[8],
# 1826 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t y[8],
# 1827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t z[8],
# 1828 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
         const Real_t volume)
# 1829 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1830 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t a, charLength = Real_t(0.0);
# 1831 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1832 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 a = AreaFace_npm(x[0], x[1], x[2], x[3], y[0], y[1], y[2], y[3], z[0], z[1], z[2], z[3]) ;
# 1835 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1836 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1837 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 a = AreaFace_npm(x[4], x[5], x[6], x[7], y[4], y[5], y[6], y[7], z[4], z[5], z[6], z[7]) ;
# 1840 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1841 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1842 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 a = AreaFace_npm(x[0], x[1], x[5], x[4], y[0], y[1], y[5], y[4], z[0], z[1], z[5], z[4]) ;
# 1845 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1846 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1847 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 a = AreaFace_npm(x[1], x[2], x[6], x[5], y[1], y[2], y[6], y[5], z[1], z[2], z[6], z[5]) ;
# 1850 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1851 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1852 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 a = AreaFace_npm(x[2], x[3], x[7], x[6], y[2], y[3], y[7], y[6], z[2], z[3], z[7], z[6]) ;
# 1855 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1856 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1857 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 a = AreaFace_npm(x[3], x[0], x[4], x[7], y[3], y[0], y[4], y[7], z[3], z[0], z[4], z[7]) ;
# 1860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = fmax(a,charLength) ;
# 1861 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1862 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 charLength = Real_t(4.0) * volume / SQRT_npm(charLength);
# 1863 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ____chimes_ret_var_6; ____chimes_ret_var_6 = (charLength); return ____chimes_ret_var_6; ;
# 1865 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1867 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1868 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcElemVelocityGrandient_npm( const Real_t* const xvel,
# 1869 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t* const yvel,
# 1870 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t* const zvel,
# 1871 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t b[][8],
# 1872 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          const Real_t detJ,
# 1873 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t* const d )
# 1874 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1875 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t inv_detJ = 1.0 / detJ ;
# 1876 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dyddx, dxddy, dzddx, dxddz, dzddy, dyddz;
# 1877 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 const Real_t* pfx = b[0];
# 1878 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 const Real_t* pfy = b[1];
# 1879 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 const Real_t* pfz = b[2];
# 1880 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1881 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[0] = inv_detJ * ( pfx[0] * (xvel[0]-xvel[6])
# 1882 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfx[1] * (xvel[1]-xvel[7])
# 1883 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfx[2] * (xvel[2]-xvel[4])
# 1884 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfx[3] * (xvel[3]-xvel[5]) );
# 1885 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1886 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[1] = inv_detJ * ( pfy[0] * (yvel[0]-yvel[6])
# 1887 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfy[1] * (yvel[1]-yvel[7])
# 1888 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfy[2] * (yvel[2]-yvel[4])
# 1889 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfy[3] * (yvel[3]-yvel[5]) );
# 1890 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1891 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[2] = inv_detJ * ( pfz[0] * (zvel[0]-zvel[6])
# 1892 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfz[1] * (zvel[1]-zvel[7])
# 1893 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfz[2] * (zvel[2]-zvel[4])
# 1894 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + pfz[3] * (zvel[3]-zvel[5]) );
# 1895 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1896 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dyddx = inv_detJ * ( pfx[0] * (yvel[0]-yvel[6])
# 1897 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[1] * (yvel[1]-yvel[7])
# 1898 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[2] * (yvel[2]-yvel[4])
# 1899 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[3] * (yvel[3]-yvel[5]) );
# 1900 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1901 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dxddy = inv_detJ * ( pfy[0] * (xvel[0]-xvel[6])
# 1902 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[1] * (xvel[1]-xvel[7])
# 1903 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[2] * (xvel[2]-xvel[4])
# 1904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[3] * (xvel[3]-xvel[5]) );
# 1905 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1906 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dzddx = inv_detJ * ( pfx[0] * (zvel[0]-zvel[6])
# 1907 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[1] * (zvel[1]-zvel[7])
# 1908 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[2] * (zvel[2]-zvel[4])
# 1909 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfx[3] * (zvel[3]-zvel[5]) );
# 1910 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1911 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dxddz = inv_detJ * ( pfz[0] * (xvel[0]-xvel[6])
# 1912 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[1] * (xvel[1]-xvel[7])
# 1913 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[2] * (xvel[2]-xvel[4])
# 1914 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[3] * (xvel[3]-xvel[5]) );
# 1915 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1916 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dzddy = inv_detJ * ( pfy[0] * (zvel[0]-zvel[6])
# 1917 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[1] * (zvel[1]-zvel[7])
# 1918 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[2] * (zvel[2]-zvel[4])
# 1919 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfy[3] * (zvel[3]-zvel[5]) );
# 1920 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1921 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 dyddz = inv_detJ * ( pfz[0] * (yvel[0]-yvel[6])
# 1922 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[1] * (yvel[1]-yvel[7])
# 1923 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[2] * (yvel[2]-yvel[4])
# 1924 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
       + pfz[3] * (yvel[3]-yvel[5]) );
# 1925 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[5] = .5 * ( dxddy + dyddx );
# 1926 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[4] = .5 * ( dxddz + dzddx );
# 1927 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 d[3] = .5 * ( dzddy + dyddz );
# 1928 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 1930 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 1931 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcKinematicsForElems_npm( Index_t numElem, Real_t dt )
# 1932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 1933 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem, dt)
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1935 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for( Index_t k=0 ; k<numElem ; ++k )
# 1936 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 {
# 1937 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t B[3][8] ;
# 1938 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t D[6] ;
# 1939 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x_local[8] ;
# 1940 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y_local[8] ;
# 1941 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z_local[8] ;
# 1942 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t xd_local[8] ;
# 1943 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t yd_local[8] ;
# 1944 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t zd_local[8] ;
# 1945 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t detJ = 0.0 ;
# 1946 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1947 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t volume ;
# 1948 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t relativeVolume ;
# 1949 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t* elemToNode = domain.nodelist + (k * 8) ;
# 1950 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1951 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1952 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for( Index_t lnode=0 ; lnode<8 ; ++lnode )
# 1953 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 1954 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t gnode = elemToNode[lnode];
# 1955 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x_local[lnode] = domain.x[gnode];
# 1956 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y_local[lnode] = domain.y[gnode];
# 1957 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z_local[lnode] = domain.z[gnode];
# 1958 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 1959 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1960 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1961 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  volume = CalcElemVolume_npm(x_local, y_local, z_local);
# 1962 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  relativeVolume = volume / domain.volo[k] ;
# 1963 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.vnew[k] = relativeVolume ;
# 1964 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delv[k] = relativeVolume - domain.v[k] ;
# 1965 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1966 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1967 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.arealg[k] = CalcElemCharacteristicLength_npm(x_local, y_local, z_local, volume);
# 1971 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1972 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1973 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for( Index_t lnode=0 ; lnode<8 ; ++lnode )
# 1974 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 1975 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t gnode = elemToNode[lnode];
# 1976 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   xd_local[lnode] = domain.xd[gnode];
# 1977 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   yd_local[lnode] = domain.yd[gnode];
# 1978 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   zd_local[lnode] = domain.zd[gnode];
# 1979 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 1980 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1981 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dt2 = 0.5 * dt;
# 1982 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for ( Index_t j=0 ; j<8 ; ++j )
# 1983 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 1984 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   x_local[j] -= dt2 * xd_local[j];
# 1985 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   y_local[j] -= dt2 * yd_local[j];
# 1986 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   z_local[j] -= dt2 * zd_local[j];
# 1987 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 1988 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1989 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  CalcElemShapeFunctionDerivatives_npm(x_local, y_local, z_local, B, &detJ);
# 1993 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1994 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  CalcElemVelocityGrandient_npm(xd_local, yd_local, zd_local, B, detJ, D);
# 1998 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 1999 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2000 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dxx[k] = D[0];
# 2001 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dyy[k] = D[1];
# 2002 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dzz[k] = D[2];
# 2003 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2004 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2006 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2007 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcLagrangeElements_npm(Real_t deltatime)
# 2008 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2009 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numElem = domain.numElem ;
# 2010 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (numElem > 0) {
# 2011 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  CalcKinematicsForElems_npm(numElem, deltatime) ;
# 2012 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2013 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2014 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem)
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2015 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2016 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for ( Index_t k=0 ; k<numElem ; ++k )
# 2017 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 2018 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2019 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t vdov = domain.dxx[k] + domain.dyy[k] + domain.dzz[k] ;
# 2020 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t vdovthird = vdov/3.0 ;
# 2021 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2022 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2023 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.vdov[k] = vdov ;
# 2024 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.dxx[k] -= vdovthird ;
# 2025 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.dyy[k] -= vdovthird ;
# 2026 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.dzz[k] -= vdovthird ;
# 2027 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2028 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2029 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (domain.vnew[k] <= 0.0)
# 2030 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   {
# 2031 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    exit(VolumeError) ;
# 2032 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2033 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2034 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2035 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2037 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2038 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcMonotonicQGradientsForElems_npm()
# 2039 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2040 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2041 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numElem = domain.numElem ;
# 2042 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem)
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2043 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2044 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < numElem ; ++i ) {
# 2045 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ptiny = 1.e-36 ;
# 2046 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ax,ay,az ;
# 2047 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dxv,dyv,dzv ;
# 2048 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2049 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t *elemToNode = domain.nodelist + (8 * i);
# 2050 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n0 = elemToNode[0] ;
# 2051 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n1 = elemToNode[1] ;
# 2052 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n2 = elemToNode[2] ;
# 2053 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n3 = elemToNode[3] ;
# 2054 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n4 = elemToNode[4] ;
# 2055 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n5 = elemToNode[5] ;
# 2056 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n6 = elemToNode[6] ;
# 2057 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t n7 = elemToNode[7] ;
# 2058 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2059 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x0 = domain.x[n0] ;
# 2060 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x1 = domain.x[n1] ;
# 2061 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x2 = domain.x[n2] ;
# 2062 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x3 = domain.x[n3] ;
# 2063 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x4 = domain.x[n4] ;
# 2064 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x5 = domain.x[n5] ;
# 2065 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x6 = domain.x[n6] ;
# 2066 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t x7 = domain.x[n7] ;
# 2067 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2068 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y0 = domain.y[n0] ;
# 2069 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y1 = domain.y[n1] ;
# 2070 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y2 = domain.y[n2] ;
# 2071 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y3 = domain.y[n3] ;
# 2072 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y4 = domain.y[n4] ;
# 2073 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y5 = domain.y[n5] ;
# 2074 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y6 = domain.y[n6] ;
# 2075 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t y7 = domain.y[n7] ;
# 2076 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2077 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z0 = domain.z[n0] ;
# 2078 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z1 = domain.z[n1] ;
# 2079 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z2 = domain.z[n2] ;
# 2080 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z3 = domain.z[n3] ;
# 2081 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z4 = domain.z[n4] ;
# 2082 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z5 = domain.z[n5] ;
# 2083 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z6 = domain.z[n6] ;
# 2084 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t z7 = domain.z[n7] ;
# 2085 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2086 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t xv0 = domain.xd[n0] ;
# 2087 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t xv1 = domain.xd[n1] ;
# 2088 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t xv2 = domain.xd[n2] ;
# 2089 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t xv3 = domain.xd[n3] ;
# 2090 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t xv4 = domain.xd[n4] ;
# 2091 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t xv5 = domain.xd[n5] ;
# 2092 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t xv6 = domain.xd[n6] ;
# 2093 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t xv7 = domain.xd[n7] ;
# 2094 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2095 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t yv0 = domain.yd[n0] ;
# 2096 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t yv1 = domain.yd[n1] ;
# 2097 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t yv2 = domain.yd[n2] ;
# 2098 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t yv3 = domain.yd[n3] ;
# 2099 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t yv4 = domain.yd[n4] ;
# 2100 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t yv5 = domain.yd[n5] ;
# 2101 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t yv6 = domain.yd[n6] ;
# 2102 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t yv7 = domain.yd[n7] ;
# 2103 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2104 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t zv0 = domain.zd[n0] ;
# 2105 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t zv1 = domain.zd[n1] ;
# 2106 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t zv2 = domain.zd[n2] ;
# 2107 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t zv3 = domain.zd[n3] ;
# 2108 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t zv4 = domain.zd[n4] ;
# 2109 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t zv5 = domain.zd[n5] ;
# 2110 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t zv6 = domain.zd[n6] ;
# 2111 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t zv7 = domain.zd[n7] ;
# 2112 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2113 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t vol = domain.volo[i]*domain.vnew[i] ;
# 2114 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t norm = 1.0 / ( vol + ptiny ) ;
# 2115 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2116 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dxj = -0.25*((x0 + x1 + x5 + x4) - (x3 + x2 + x6 + x7)) ;
# 2117 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dyj = -0.25*((y0 + y1 + y5 + y4) - (y3 + y2 + y6 + y7)) ;
# 2118 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dzj = -0.25*((z0 + z1 + z5 + z4) - (z3 + z2 + z6 + z7)) ;
# 2119 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2120 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dxi = 0.25*((x1 + x2 + x6 + x5) - (x0 + x3 + x7 + x4)) ;
# 2121 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dyi = 0.25*((y1 + y2 + y6 + y5) - (y0 + y3 + y7 + y4)) ;
# 2122 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dzi = 0.25*((z1 + z2 + z6 + z5) - (z0 + z3 + z7 + z4)) ;
# 2123 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2124 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dxk = 0.25*((x4 + x5 + x6 + x7) - (x0 + x1 + x2 + x3)) ;
# 2125 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dyk = 0.25*((y4 + y5 + y6 + y7) - (y0 + y1 + y2 + y3)) ;
# 2126 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dzk = 0.25*((z4 + z5 + z6 + z7) - (z0 + z1 + z2 + z3)) ;
# 2127 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2128 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2129 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2130 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax = dyi*dzj - dzi*dyj ;
# 2131 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay = dzi*dxj - dxi*dzj ;
# 2132 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az = dxi*dyj - dyi*dxj ;
# 2133 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2134 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delx_zeta[i] = vol / SQRT_npm(ax*ax + ay*ay + az*az + ptiny) ;
# 2135 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2136 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax *= norm ;
# 2137 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay *= norm ;
# 2138 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az *= norm ;
# 2139 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2140 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dxv = 0.25*((xv4 + xv5 + xv6 + xv7) - (xv0 + xv1 + xv2 + xv3)) ;
# 2141 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dyv = 0.25*((yv4 + yv5 + yv6 + yv7) - (yv0 + yv1 + yv2 + yv3)) ;
# 2142 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dzv = 0.25*((zv4 + zv5 + zv6 + zv7) - (zv0 + zv1 + zv2 + zv3)) ;
# 2143 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2144 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delv_zeta[i] = ax*dxv + ay*dyv + az*dzv ;
# 2145 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2146 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2147 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2148 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax = dyj*dzk - dzj*dyk ;
# 2149 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay = dzj*dxk - dxj*dzk ;
# 2150 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az = dxj*dyk - dyj*dxk ;
# 2151 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2152 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delx_xi[i] = vol / SQRT_npm(ax*ax + ay*ay + az*az + ptiny) ;
# 2153 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2154 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax *= norm ;
# 2155 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay *= norm ;
# 2156 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az *= norm ;
# 2157 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2158 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dxv = 0.25*((xv1 + xv2 + xv6 + xv5) - (xv0 + xv3 + xv7 + xv4)) ;
# 2159 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dyv = 0.25*((yv1 + yv2 + yv6 + yv5) - (yv0 + yv3 + yv7 + yv4)) ;
# 2160 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dzv = 0.25*((zv1 + zv2 + zv6 + zv5) - (zv0 + zv3 + zv7 + zv4)) ;
# 2161 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2162 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delv_xi[i] = ax*dxv + ay*dyv + az*dzv ;
# 2163 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2164 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2165 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2166 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax = dyk*dzi - dzk*dyi ;
# 2167 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay = dzk*dxi - dxk*dzi ;
# 2168 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az = dxk*dyi - dyk*dxi ;
# 2169 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2170 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delx_eta[i] = vol / SQRT_npm(ax*ax + ay*ay + az*az + ptiny) ;
# 2171 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2172 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ax *= norm ;
# 2173 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ay *= norm ;
# 2174 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  az *= norm ;
# 2175 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2176 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dxv = -0.25*((xv0 + xv1 + xv5 + xv4) - (xv3 + xv2 + xv6 + xv7)) ;
# 2177 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dyv = -0.25*((yv0 + yv1 + yv5 + yv4) - (yv3 + yv2 + yv6 + yv7)) ;
# 2178 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dzv = -0.25*((zv0 + zv1 + zv5 + zv4) - (zv3 + zv2 + zv6 + zv7)) ;
# 2179 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2180 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.delv_eta[i] = ax*dxv + ay*dyv + az*dzv ;
# 2181 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2182 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2183 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2185 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2186 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcMonotonicQRegionForElems_npm(
# 2187 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t qlc_monoq,
# 2188 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t qqc_monoq,
# 2189 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t monoq_limiter_mult,
# 2190 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t monoq_max_slope,
# 2191 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Real_t ptiny,
# 2192 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2193 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2194 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
          Index_t elength )
# 2195 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(elength, qlc_monoq, qqc_monoq, monoq_limiter_mult, monoq_max_slope, ptiny)
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2196 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2197 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for ( Index_t ielem = 0 ; ielem < elength; ++ielem ) {
# 2198 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t qlin, qquad ;
# 2199 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t phixi, phieta, phizeta ;
# 2200 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t i = domain.matElemlist[ielem];
# 2201 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Int_t bcMask = domain.elemBC[i] ;
# 2202 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t delvm, delvp ;
# 2203 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2204 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2205 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t norm = 1. / ( domain.delv_xi[i] + ptiny ) ;
# 2206 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2207 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x003) {
# 2208 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvm = domain.delv_xi[domain.lxim[i]] ; break ;
# 2209 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x001: delvm = domain.delv_xi[i] ; break ;
# 2210 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x002: delvm = 0.0 ; break ;
# 2211 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2212 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2213 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x00c) {
# 2214 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvp = domain.delv_xi[domain.lxip[i]] ; break ;
# 2215 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x004: delvp = domain.delv_xi[i] ; break ;
# 2216 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x008: delvp = 0.0 ; break ;
# 2217 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2218 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2219 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2220 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm = delvm * norm ;
# 2221 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp = delvp * norm ;
# 2222 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2223 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  phixi = .5 * ( delvm + delvp ) ;
# 2224 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2225 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm *= monoq_limiter_mult ;
# 2226 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp *= monoq_limiter_mult ;
# 2227 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2228 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvm < phixi) {phixi = delvm; } ;
# 2229 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvp < phixi) {phixi = delvp; } ;
# 2230 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phixi < 0.) {phixi = 0.; } ;
# 2231 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phixi > monoq_max_slope) {phixi = monoq_max_slope; };
# 2232 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2233 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2234 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2235 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  norm = 1. / ( domain.delv_eta[i] + ptiny ) ;
# 2236 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2237 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x030) {
# 2238 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvm = domain.delv_eta[domain.letam[i]] ; break ;
# 2239 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x010: delvm = domain.delv_eta[i] ; break ;
# 2240 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x020: delvm = Real_t(0.0) ; break ;
# 2241 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2242 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2243 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x0c0) {
# 2244 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvp = domain.delv_eta[domain.letap[i]] ; break ;
# 2245 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x040: delvp = domain.delv_eta[i] ; break ;
# 2246 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x080: delvp = Real_t(0.0) ; break ;
# 2247 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2248 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2249 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2250 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm = delvm * norm ;
# 2251 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp = delvp * norm ;
# 2252 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2253 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  phieta = Real_t(.5) * ( delvm + delvp ) ;
# 2254 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2255 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm *= monoq_limiter_mult ;
# 2256 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp *= monoq_limiter_mult ;
# 2257 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2258 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvm < phieta) {phieta = delvm; } ;
# 2259 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvp < phieta) {phieta = delvp; } ;
# 2260 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phieta < Real_t(0.)) {phieta = Real_t(0.); } ;
# 2261 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phieta > monoq_max_slope) {phieta = monoq_max_slope; };
# 2262 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2263 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2264 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  norm = Real_t(1.) / ( domain.delv_zeta[i] + ptiny ) ;
# 2265 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2266 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0x300) {
# 2267 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvm = domain.delv_zeta[domain.lzetam[i]] ; break ;
# 2268 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x100: delvm = domain.delv_zeta[i] ; break ;
# 2269 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x200: delvm = Real_t(0.0) ; break ;
# 2270 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2271 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2272 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  switch (bcMask & 0xc00) {
# 2273 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0: delvp = domain.delv_zeta[domain.lzetap[i]] ; break ;
# 2274 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x400: delvp = domain.delv_zeta[i] ; break ;
# 2275 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   case 0x800: delvp = Real_t(0.0) ; break ;
# 2276 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   default: ; break ;
# 2277 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2278 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2279 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm = delvm * norm ;
# 2280 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp = delvp * norm ;
# 2281 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2282 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  phizeta = Real_t(.5) * ( delvm + delvp ) ;
# 2283 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2284 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvm *= monoq_limiter_mult ;
# 2285 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  delvp *= monoq_limiter_mult ;
# 2286 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2287 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvm < phizeta) {phizeta = delvm; } ;
# 2288 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvp < phizeta) {phizeta = delvp; } ;
# 2289 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phizeta < Real_t(0.)) {phizeta = Real_t(0.); };
# 2290 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (phizeta > monoq_max_slope) {phizeta = monoq_max_slope; };
# 2291 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2292 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2293 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2294 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( domain.vdov[i] > Real_t(0.) ) {
# 2295 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qlin = Real_t(0.) ;
# 2296 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qquad = Real_t(0.) ;
# 2297 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2298 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  else {
# 2299 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t delvxxi = domain.delv_xi[i] * domain.delx_xi[i] ;
# 2300 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t delvxeta = domain.delv_eta[i] * domain.delx_eta[i] ;
# 2301 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t delvxzeta = domain.delv_zeta[i] * domain.delx_zeta[i] ;
# 2302 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2303 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (delvxxi > Real_t(0.)) {delvxxi = Real_t(0.); } ;
# 2304 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (delvxeta > Real_t(0.)) {delvxeta = Real_t(0.); } ;
# 2305 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (delvxzeta > Real_t(0.)) {delvxzeta = Real_t(0.); } ;
# 2306 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2307 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t rho = domain.elemMass[i] / (domain.volo[i] * domain.vnew[i]) ;
# 2308 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2309 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qlin = -qlc_monoq * rho *
# 2310 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            ( delvxxi * (Real_t(1.) - phixi) +
# 2311 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    delvxeta * (Real_t(1.) - phieta) +
# 2312 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    delvxzeta * (Real_t(1.) - phizeta) ) ;
# 2313 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2314 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qquad = qqc_monoq * rho *
# 2315 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            ( delvxxi*delvxxi * (Real_t(1.) - phixi*phixi) +
# 2316 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    delvxeta*delvxeta * (Real_t(1.) - phieta*phieta) +
# 2317 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    delvxzeta*delvxzeta * (Real_t(1.) - phizeta*phizeta) ) ;
# 2318 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2319 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2320 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.qq[i] = qquad ;
# 2321 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.ql[i] = qlin ;
# 2322 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2323 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2325 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2326 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcMonotonicQForElems_npm()
# 2327 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2328 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2329 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2330 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2331 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t ptiny = Real_t(1.e-36) ;
# 2332 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t monoq_max_slope = domain.monoq_max_slope ;
# 2333 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t monoq_limiter_mult = domain.monoq_limiter_mult ;
# 2334 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2335 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2336 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2337 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2338 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t elength = domain.numElem ;
# 2339 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (elength > 0) {
# 2340 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t qlc_monoq = domain.qlc_monoq;
# 2341 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t qqc_monoq = domain.qqc_monoq;
# 2342 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  CalcMonotonicQRegionForElems_npm(qlc_monoq, qqc_monoq, monoq_limiter_mult, monoq_max_slope, ptiny, elength);
# 2351 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2352 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2354 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2355 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcQForElems_npm()
# 2356 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2357 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t qstop = domain.qstop ;
# 2358 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numElem = domain.numElem ;
# 2359 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2360 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2361 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2362 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2363 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2364 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2365 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcMonotonicQGradientsForElems_npm() ;
# 2366 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2367 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2368 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2369 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcMonotonicQForElems_npm() ;
# 2370 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2371 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2372 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (numElem != 0) {
# 2373 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t idx = -1;
# 2374 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (Index_t i=0; i<numElem; ++i) {
# 2375 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if ( domain.q[i] > qstop ) {
# 2376 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    idx = i ;
# 2377 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    break ;
# 2378 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2379 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2380 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2381 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if(idx >= 0) {
# 2382 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   exit(QStopError) ;
# 2383 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2384 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2385 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2387 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2388 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcPressureForElems_npm(Real_t* p_new, Real_t* bvc,
# 2389 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t* pbvc, Real_t* e_old,
# 2390 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t* compression, Real_t *vnewc,
# 2391 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t pmin,
# 2392 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Real_t p_cut, Real_t eosvmax,
# 2393 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                          Index_t length)
# 2394 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2395 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length)
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2396 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2397 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0; i < length ; ++i) {
# 2398 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t c1s = Real_t(2.0)/Real_t(3.0) ;
# 2399 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  bvc[i] = c1s * (compression[i] + Real_t(1.));
# 2400 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  pbvc[i] = c1s;
# 2401 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2402 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, pmin, p_cut, eosvmax)
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2403 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2404 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i){
# 2405 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  p_new[i] = bvc[i] * e_old[i] ;
# 2406 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2407 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (FABS_npm(p_new[i]) < p_cut) {p_new[i] = Real_t(0.0); } ;
# 2409 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2410 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (vnewc[i] >= eosvmax) {p_new[i] = Real_t(0.0); } ;
# 2412 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2413 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (p_new[i] < pmin) {p_new[i] = pmin; } ;
# 2415 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2416 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2418 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2419 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcEnergyForElems_npm(Real_t* p_new, Real_t* e_new, Real_t* q_new,
# 2420 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* bvc, Real_t* pbvc,
# 2421 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* p_old, Real_t* e_old, Real_t* q_old,
# 2422 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* compression, Real_t* compHalfStep,
# 2423 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* vnewc, Real_t* work, Real_t* delvc, Real_t pmin,
# 2424 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t p_cut, Real_t e_cut, Real_t q_cut, Real_t emin,
# 2425 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t* qq, Real_t* ql,
# 2426 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t rho0,
# 2427 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t eosvmax,
# 2428 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Index_t length)
# 2429 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2430 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *pHalfStep = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668695UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2431 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((pHalfStep) ? static_cast<void> (0) : __assert_fail ("pHalfStep", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2431, __PRETTY_FUNCTION__));
# 2432 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, emin)
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2433 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2434 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i) {
# 2435 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  e_new[i] = e_old[i] - Real_t(0.5) * delvc[i] * (p_old[i] + q_old[i])
# 2436 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  + Real_t(0.5) * work[i];
# 2437 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2438 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (e_new[i] < emin ) {
# 2439 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = emin ;
# 2440 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2441 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2442 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2443 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcPressureForElems_npm(pHalfStep, bvc, pbvc, e_new, compHalfStep, vnewc, pmin, p_cut, eosvmax, length);
# 2445 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, rho0)
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2446 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2447 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i) {
# 2448 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t vhalf = Real_t(1.) / (Real_t(1.) + compHalfStep[i]) ;
# 2449 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2450 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( delvc[i] > Real_t(0.) ) {
# 2451 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_new[i] = Real_t(0.) ;
# 2452 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2453 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  else {
# 2454 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t ssc = ( pbvc[i] * e_new[i]
# 2455 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + vhalf * vhalf * bvc[i] * pHalfStep[i] ) / rho0 ;
# 2456 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2457 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if ( ssc <= Real_t(.111111e-36) ) {
# 2458 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ssc =Real_t(.333333e-18) ;
# 2459 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } else {
# 2460 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ssc = SQRT_npm(ssc) ;
# 2461 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2462 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2463 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_new[i] = (ssc*ql[i] + qq[i]) ;
# 2464 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2465 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2466 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  e_new[i] = e_new[i] + Real_t(0.5) * delvc[i]
# 2467 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  * ( Real_t(3.0)*(p_old[i] + q_old[i])
# 2468 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     - Real_t(4.0)*(pHalfStep[i] + q_new[i])) ;
# 2469 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2470 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, emin, e_cut)
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2471 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2472 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i) {
# 2473 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2474 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  e_new[i] += Real_t(0.5) * work[i];
# 2475 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2476 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (FABS_npm(e_new[i]) < e_cut) {
# 2477 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = Real_t(0.) ;
# 2478 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2479 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( e_new[i] < emin ) {
# 2480 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = emin ;
# 2481 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2482 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2483 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2484 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcPressureForElems_npm(p_new, bvc, pbvc, e_new, compression, vnewc, pmin, p_cut, eosvmax, length);
# 2486 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, rho0, emin, e_cut)
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2487 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2488 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i){
# 2489 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t sixth = Real_t(1.0) / Real_t(6.0) ;
# 2490 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t q_tilde ;
# 2491 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2492 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (delvc[i] > Real_t(0.)) {
# 2493 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_tilde = Real_t(0.) ;
# 2494 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2495 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  else {
# 2496 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t ssc = ( pbvc[i] * e_new[i]
# 2497 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + vnewc[i] * vnewc[i] * bvc[i] * p_new[i] ) / rho0 ;
# 2498 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2499 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if ( ssc <= Real_t(.111111e-36) ) {
# 2500 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ssc = Real_t(.333333e-18) ;
# 2501 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } else {
# 2502 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ssc = SQRT_npm(ssc) ;
# 2503 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2504 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2505 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_tilde = (ssc*ql[i] + qq[i]) ;
# 2506 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2507 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2508 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  e_new[i] = e_new[i] - ( Real_t(7.0)*(p_old[i] + q_old[i])
# 2509 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                               - Real_t(8.0)*(pHalfStep[i] + q_new[i])
# 2510 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                               + (p_new[i] + q_tilde)) * delvc[i]*sixth ;
# 2511 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2512 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (FABS_npm(e_new[i]) < e_cut) {
# 2513 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = Real_t(0.) ;
# 2514 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2515 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( e_new[i] < emin ) {
# 2516 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_new[i] = emin ;
# 2517 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2518 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2519 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2520 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcPressureForElems_npm(p_new, bvc, pbvc, e_new, compression, vnewc, pmin, p_cut, eosvmax, length);
# 2522 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length, rho0, q_cut)
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2523 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2524 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i){
# 2525 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2526 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( delvc[i] <= Real_t(0.) ) {
# 2527 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t ssc = ( pbvc[i] * e_new[i]
# 2528 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        + vnewc[i] * vnewc[i] * bvc[i] * p_new[i] ) / rho0 ;
# 2529 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2530 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if ( ssc <= Real_t(.111111e-36) ) {
# 2531 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ssc = Real_t(.333333e-18) ;
# 2532 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   } else {
# 2533 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ssc = SQRT_npm(ssc) ;
# 2534 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2535 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2536 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_new[i] = (ssc*ql[i] + qq[i]) ;
# 2537 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2538 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (FABS_npm(q_new[i]) < q_cut) {q_new[i] = Real_t(0.); } ;
# 2539 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2540 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2541 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2542 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)pHalfStep) - sizeof(void *)), 2224956529753668695UL);free((((unsigned char *)pHalfStep) - sizeof(void *))); }) ;
# 2543 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2544 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 return ;
# 2545 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2547 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2548 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcSoundSpeedForElems_npm(Real_t *vnewc, Real_t rho0, Real_t *enewc,
# 2549 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                            Real_t *pnewc, Real_t *pbvc,
# 2550 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                            Real_t *bvc, Real_t ss4o3, Index_t nz)
# 2551 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(nz, rho0, ss4o3)
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2552 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2553 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0; i < nz ; ++i) {
# 2554 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t iz = domain.matElemlist[i];
# 2555 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t ssTmp = (pbvc[i] * enewc[i] + vnewc[i] * vnewc[i] *
# 2556 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
      bvc[i] * pnewc[i]) / rho0;
# 2557 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (ssTmp <= Real_t(.111111e-36)) {
# 2558 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ssTmp = Real_t(.333333e-18);
# 2559 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2560 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  else {
# 2561 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ssTmp = SQRT_npm(ssTmp);
# 2562 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2563 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.ss[iz] = ssTmp;
# 2564 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2565 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2567 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2568 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void EvalEOSForElems_npm(Real_t *vnewc, Index_t length)
# 2569 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2570 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t e_cut = domain.e_cut;
# 2571 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t p_cut = domain.p_cut;
# 2572 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t ss4o3 = domain.ss4o3;
# 2573 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t q_cut = domain.q_cut;
# 2574 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2575 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t eosvmax = domain.eosvmax ;
# 2576 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t eosvmin = domain.eosvmin ;
# 2577 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t pmin = domain.pmin ;
# 2578 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t emin = domain.emin ;
# 2579 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t rho0 = domain.refdens ;
# 2580 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2581 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *e_old = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753667971UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2582 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *delvc = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668072UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2583 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *p_old = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668079UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2584 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *q_old = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668086UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2585 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *compression = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668093UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2586 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *compHalfStep = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668100UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2587 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *qq = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668107UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2588 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *ql = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668114UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2589 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *work = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668121UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2590 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *p_new = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668128UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2591 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *e_new = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668135UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2592 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *q_new = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668142UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2593 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *bvc = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668149UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2594 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t *pbvc = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753668156UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2595 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((e_old) ? static_cast<void> (0) : __assert_fail ("e_old", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2595, __PRETTY_FUNCTION__)); ((delvc) ? static_cast<void> (0) : __assert_fail ("delvc", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2595, __PRETTY_FUNCTION__)); ((p_old) ? static_cast<void> (0) : __assert_fail ("p_old", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2595, __PRETTY_FUNCTION__)); ((q_old) ? static_cast<void> (0) : __assert_fail ("q_old", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2595, __PRETTY_FUNCTION__));
# 2596 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((compression) ? static_cast<void> (0) : __assert_fail ("compression", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2596, __PRETTY_FUNCTION__)); ((compHalfStep) ? static_cast<void> (0) : __assert_fail ("compHalfStep", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2596, __PRETTY_FUNCTION__)); ((qq) ? static_cast<void> (0) : __assert_fail ("qq", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2596, __PRETTY_FUNCTION__));
# 2597 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((ql) ? static_cast<void> (0) : __assert_fail ("ql", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2597, __PRETTY_FUNCTION__)); ((work) ? static_cast<void> (0) : __assert_fail ("work", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2597, __PRETTY_FUNCTION__)); ((p_new) ? static_cast<void> (0) : __assert_fail ("p_new", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2597, __PRETTY_FUNCTION__)); ((e_new) ? static_cast<void> (0) : __assert_fail ("e_new", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2597, __PRETTY_FUNCTION__));
# 2598 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    ((q_new) ? static_cast<void> (0) : __assert_fail ("q_new", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2598, __PRETTY_FUNCTION__)); ((bvc) ? static_cast<void> (0) : __assert_fail ("bvc", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2598, __PRETTY_FUNCTION__)); ((pbvc) ? static_cast<void> (0) : __assert_fail ("pbvc", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2598, __PRETTY_FUNCTION__));
# 2599 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2600 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2601 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2602 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 {
# 2603 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t i;
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2604 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2605 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (i=0; i<length; ++i) {
# 2606 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t zidx = domain.matElemlist[i] ;
# 2607 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   e_old[i] = domain.e[zidx] ;
# 2608 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2609 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2610 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t j;
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2611 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2612 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (j=0; j<length; ++j) {
# 2613 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t zidx = domain.matElemlist[j] ;
# 2614 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   delvc[j] = domain.delv[zidx] ;
# 2615 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2616 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2617 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t k;
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2618 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2619 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (k=0; k<length; ++k) {
# 2620 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t zidx = domain.matElemlist[k] ;
# 2621 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   p_old[k] = domain.p[zidx] ;
# 2622 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2623 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2624 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t l;
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2625 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2626 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (l=0; l<length; ++l) {
# 2627 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t zidx = domain.matElemlist[l] ;
# 2628 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   q_old[l] = domain.q[zidx] ;
# 2629 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2630 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2631 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t m;
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2632 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2633 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (m = 0; m < length ; ++m) {
# 2634 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t vchalf ;
# 2635 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   compression[m] = Real_t(1.) / vnewc[m] - Real_t(1.);
# 2636 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   vchalf = vnewc[m] - delvc[m] * Real_t(.5);
# 2637 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   compHalfStep[m] = Real_t(1.) / vchalf - Real_t(1.);
# 2638 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2639 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2640 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2641 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( eosvmin != Real_t(0.) ) {
# 2642 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t n;
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmin)
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2643 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2644 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for(n=0 ; n<length ; ++n) {
# 2645 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (vnewc[n] <= eosvmin) {
# 2646 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     compHalfStep[n] = compression[n] ;
# 2647 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2648 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2649 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2650 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( eosvmax != Real_t(0.) ) {
# 2651 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t p;
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmax)
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2652 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2653 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for(p=0 ; p<length ; ++p) {
# 2654 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (vnewc[p] >= eosvmax) {
# 2655 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     p_old[p] = Real_t(0.) ;
# 2656 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     compression[p] = Real_t(0.) ;
# 2657 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     compHalfStep[p] = Real_t(0.) ;
# 2658 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2659 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2660 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2661 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2662 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t q;
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2663 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2664 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (q = 0 ; q < length ; ++q) {
# 2665 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t zidx = domain.matElemlist[q] ;
# 2666 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   qq[q] = domain.qq[zidx] ;
# 2667 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ql[q] = domain.ql[zidx] ;
# 2668 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   work[q] = Real_t(0.) ;
# 2669 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2670 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2671 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2672 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcEnergyForElems_npm(p_new, e_new, q_new, bvc, pbvc, p_old, e_old, q_old, compression, compHalfStep, vnewc, work, delvc, pmin, p_cut, e_cut, q_cut, emin, qq, ql, rho0, eosvmax, length);
# 2677 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2678 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2679 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2680 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 {
# 2681 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t i;
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2682 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2683 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (i=0; i<length; ++i) {
# 2684 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t zidx = domain.matElemlist[i] ;
# 2685 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.p[zidx] = p_new[i] ;
# 2686 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2687 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2688 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t j;
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2689 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2690 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (j=0; j<length; ++j) {
# 2691 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t zidx = domain.matElemlist[j] ;
# 2692 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.e[zidx] = e_new[j] ;
# 2693 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2694 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2695 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t k;
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2696 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2697 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for (k=0; k<length; ++k) {
# 2698 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Index_t zidx = domain.matElemlist[k] ;
# 2699 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.q[zidx] = q_new[k] ;
# 2700 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2701 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2702 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2703 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcSoundSpeedForElems_npm(vnewc, rho0, e_new, p_new, pbvc, bvc, ss4o3, length) ;
# 2705 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2706 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)pbvc) - sizeof(void *)), 2224956529753668156UL);free((((unsigned char *)pbvc) - sizeof(void *))); }) ;
# 2707 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)bvc) - sizeof(void *)), 2224956529753668149UL);free((((unsigned char *)bvc) - sizeof(void *))); }) ;
# 2708 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)q_new) - sizeof(void *)), 2224956529753668142UL);free((((unsigned char *)q_new) - sizeof(void *))); }) ;
# 2709 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)e_new) - sizeof(void *)), 2224956529753668135UL);free((((unsigned char *)e_new) - sizeof(void *))); }) ;
# 2710 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)p_new) - sizeof(void *)), 2224956529753668128UL);free((((unsigned char *)p_new) - sizeof(void *))); }) ;
# 2711 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)work) - sizeof(void *)), 2224956529753668121UL);free((((unsigned char *)work) - sizeof(void *))); }) ;
# 2712 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)ql) - sizeof(void *)), 2224956529753668114UL);free((((unsigned char *)ql) - sizeof(void *))); }) ;
# 2713 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)qq) - sizeof(void *)), 2224956529753668107UL);free((((unsigned char *)qq) - sizeof(void *))); }) ;
# 2714 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)compHalfStep) - sizeof(void *)), 2224956529753668100UL);free((((unsigned char *)compHalfStep) - sizeof(void *))); }) ;
# 2715 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)compression) - sizeof(void *)), 2224956529753668093UL);free((((unsigned char *)compression) - sizeof(void *))); }) ;
# 2716 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)q_old) - sizeof(void *)), 2224956529753668086UL);free((((unsigned char *)q_old) - sizeof(void *))); }) ;
# 2717 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)p_old) - sizeof(void *)), 2224956529753668079UL);free((((unsigned char *)p_old) - sizeof(void *))); }) ;
# 2718 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)delvc) - sizeof(void *)), 2224956529753668072UL);free((((unsigned char *)delvc) - sizeof(void *))); }) ;
# 2719 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  ({ free_helper((((unsigned char *)e_old) - sizeof(void *)), 2224956529753667971UL);free((((unsigned char *)e_old) - sizeof(void *))); }) ;
# 2720 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2722 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2723 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void ApplyMaterialPropertiesForElems_npm()
# 2724 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2725 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t length = domain.numElem ;
# 2726 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2727 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (length != 0) {
# 2728 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2729 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t eosvmin = domain.eosvmin ;
# 2730 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t eosvmax = domain.eosvmax ;
# 2731 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t *vnewc = (Real_t*) ({ void *____chimes_tmp_ptr = malloc((sizeof(Real_t) * length) + sizeof(void *)); malloc_helper(____chimes_tmp_ptr, sizeof(Real_t) * length, 2224956529753667708UL, 0, 0); (____chimes_tmp_ptr ? (void *)(((unsigned char *)____chimes_tmp_ptr) + sizeof(void *)) : ____chimes_tmp_ptr); }) ;
# 2732 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        ((vnewc) ? static_cast<void> (0) : __assert_fail ("vnewc", "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc", 2732, __PRETTY_FUNCTION__));
# 2733 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2734 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2735 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  {
# 2736 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t i;
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length)
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2737 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2738 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for (i=0 ; i<length ; ++i) {
# 2739 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zn = domain.matElemlist[i] ;
# 2740 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    vnewc[i] = domain.vnew[zn] ;
# 2741 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2742 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2743 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (eosvmin != Real_t(0.)) {
# 2744 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                Index_t j;
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmin)
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2745 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2746 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    for(j=0 ; j<length ; ++j) {
# 2747 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     if (vnewc[j] < eosvmin) {vnewc[j] = eosvmin; } ;
# 2749 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2750 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2751 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2752 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (eosvmax != Real_t(0.)) {
# 2753 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                Index_t k;
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmax)
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2754 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2755 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    for(k=0 ; k<length ; ++k) {
# 2756 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     if (vnewc[k] > eosvmax) {vnewc[k] = eosvmax; } ;
# 2758 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2759 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2760 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2761 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            Index_t l;
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp for firstprivate(length,eosvmin,eosvmax)
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2762 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2763 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   for (l=0; l<length; ++l) {
# 2764 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t zn = domain.matElemlist[l] ;
# 2765 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Real_t vc = domain.v[zn] ;
# 2766 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (eosvmin != Real_t(0.)) {
# 2767 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     if (vc < eosvmin) {vc = eosvmin; } ;
# 2769 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2770 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (eosvmax != Real_t(0.)) {
# 2771 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     if (vc > eosvmax) {vc = eosvmax; } ;
# 2773 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2774 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    if (vc <= 0.) {
# 2775 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     exit(VolumeError) ;
# 2776 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2777 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2778 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2779 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2780 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  EvalEOSForElems_npm(vnewc, length);
# 2781 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2782 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   ({ free_helper((((unsigned char *)vnewc) - sizeof(void *)), 2224956529753667708UL);free((((unsigned char *)vnewc) - sizeof(void *))); }) ;
# 2783 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2784 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2785 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2787 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2788 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void UpdateVolumesForElems_npm()
# 2789 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2790 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t numElem = domain.numElem;
# 2791 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (numElem != 0) {
# 2792 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t v_cut = domain.v_cut;
# 2793 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(numElem,v_cut)
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2794 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2795 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  for(Index_t i=0 ; i<numElem ; ++i) {
# 2796 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   Real_t tmpV ;
# 2797 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   tmpV = domain.vnew[i] ;
# 2798 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2799 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   if (FABS_npm(tmpV - Real_t(1.0)) < v_cut) {tmpV = Real_t(1.0); } ;
# 2801 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   domain.v[i] = tmpV ;
# 2802 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2803 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2804 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2805 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 return ;
# 2806 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2808 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2809 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void LagrangeElements_npm()
# 2810 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2811 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t deltatime = domain.deltatime ;
# 2812 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2813 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcLagrangeElements_npm(deltatime) ;
# 2814 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2815 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2816 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcQForElems_npm() ;
# 2817 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2818 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 ApplyMaterialPropertiesForElems_npm() ;
# 2819 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2820 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 UpdateVolumesForElems_npm() ;
# 2821 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2823 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static int get_num_threads_npm() {
# 2824 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    int nthreads;
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2825 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2826 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    {
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp single
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2827 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2828 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        {
# 2829 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            nthreads = omp_get_num_threads();
# 2830 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        }
# 2831 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    }
# 2832 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
     int ____chimes_ret_var_7; ____chimes_ret_var_7 = (nthreads); return ____chimes_ret_var_7; ;
# 2833 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2835 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2836 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcCourantConstraintForElems_npm()
# 2837 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2838 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dtcourant = Real_t(1.0e+20) ;
# 2839 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t courant_elem = -1 ;
# 2840 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t qqc = domain.qqc ;
# 2841 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t length = domain.numElem ;
# 2842 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2843 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t qqc2 = Real_t(64.0) * qqc * qqc ;
# 2844 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2845 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2846 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t threads = get_num_threads_npm();
# 2855 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2855 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t courant_elem_per_thread[threads];
# 2856 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Real_t dtcourant_per_thread[threads];
# 2857 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2858 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (Index_t i = 0; i < threads; i++) {
# 2859 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                courant_elem_per_thread[i] = -1;
# 2860 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                dtcourant_per_thread[i] = Real_t(1.0e+20);
# 2861 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        }
# 2862 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2863 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
#pragma omp parallel for firstprivate(length,qqc2), shared(dtcourant,courant_elem)
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2864 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2865 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0 ; i < length ; ++i) {
# 2866 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Index_t indx = domain.matElemlist[i] ;
# 2867 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2868 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  Real_t dtf = domain.ss[indx] * domain.ss[indx] ;
# 2869 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2870 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if ( domain.vdov[indx] < Real_t(0.) ) {
# 2871 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2872 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   dtf = dtf
# 2873 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            + qqc2 * domain.arealg[indx] * domain.arealg[indx]
# 2874 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
            * domain.vdov[indx] * domain.vdov[indx] ;
# 2875 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2876 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2877 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dtf = SQRT_npm(dtf) ;
# 2878 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2879 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  dtf = domain.arealg[indx] / dtf ;
# 2880 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2881 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2882 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  if (domain.vdov[indx] != Real_t(0.)) {
# 2883 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   {
# 2884 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2885 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
    Index_t thread_num = omp_get_thread_num();
# 2894 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2894 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         if ( dtf < dtcourant_per_thread[thread_num] ) {
# 2895 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                         {
# 2896 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                 dtcourant_per_thread[thread_num] = dtf ;
# 2897 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                        courant_elem_per_thread[thread_num] = indx ;
# 2898 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                }
# 2899 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        }
# 2900 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2901 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
   }
# 2902 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  }
# 2903 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2904 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 for (Index_t i = 0; i < threads; i++) {
# 2905 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                if(dtcourant_per_thread[i] < dtcourant) {
# 2906 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        dtcourant = dtcourant_per_thread[i];
# 2907 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        courant_elem = courant_elem_per_thread[i];
# 2908 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                }
# 2909 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        }
# 2910 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2911 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2912 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2913 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2914 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (courant_elem != -1) {
# 2915 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dtcourant = dtcourant ;
# 2916 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2917 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2918 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 return ;
# 2919 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2921 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2922 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcHydroConstraintForElems_npm()
# 2923 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2924 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dthydro = Real_t(1.0e+20) ;
# 2925 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t hydro_elem = -1 ;
# 2926 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Real_t dvovmax = domain.dvovmax ;
# 2927 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t length = domain.numElem ;
# 2928 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2929 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2930 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 Index_t threads = get_num_threads_npm();
# 2931 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2932 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2933 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2934 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2935 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2936 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2937 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2938 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Real_t dthydro_per_thread[threads];
# 2939 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        Index_t hydro_elem_per_thread[threads];
# 2940 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2941 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (Index_t i = 0; i < threads; i++) {
# 2942 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                hydro_elem_per_thread[i] = -1;
# 2943 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                dthydro_per_thread[i] = Real_t(1.0e+20);
# 2944 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        }
# 2945 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2946 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2947 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (Index_t i = 0 ; i < length ; ++i) {
# 2948 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                Index_t indx = domain.matElemlist[i] ;
# 2949 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2950 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                if (domain.vdov[indx] != Real_t(0.)) {
# 2951 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Real_t dtdvov = dvovmax / (FABS_npm(domain.vdov[indx])+Real_t(1.e-20)) ;
# 2952 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2953 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2954 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        Index_t thread_num = omp_get_thread_num();
# 2955 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2956 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2957 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2958 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2959 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2960 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2961 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2962 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        if ( dthydro_per_thread[thread_num] > dtdvov ) {
# 2963 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                {
# 2964 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                        dthydro_per_thread[thread_num] = dtdvov ;
# 2965 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                        hydro_elem_per_thread[thread_num] = indx ;
# 2966 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                                }
# 2967 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        }
# 2968 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                }
# 2969 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        }
# 2970 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2971 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        for (Index_t i = 0; i < threads; i++) {
# 2972 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                if(dthydro_per_thread[i] < dthydro) {
# 2973 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        dthydro = dthydro_per_thread[i];
# 2974 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                        hydro_elem = hydro_elem_per_thread[i];
# 2975 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
                }
# 2976 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
        }
# 2977 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2978 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 if (hydro_elem != -1) {
# 2979 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
  domain.dthydro = dthydro ;
# 2980 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 }
# 2981 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2982 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 return ;
# 2983 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2985 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2986 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void CalcTimeConstraintsForElems_npm() {
# 2987 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2988 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcCourantConstraintForElems_npm() ;
# 2989 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2990 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2991 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcHydroConstraintForElems_npm() ;
# 2992 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}
# 2994 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
static inline
# 2995 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
void LagrangeLeapFrog_npm()
# 2996 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
{
# 2997 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2998 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 2999 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 LagrangeNodal_npm();
# 3000 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3001 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3002 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3003 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 LagrangeElements_npm();
# 3004 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3005 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
 CalcTimeConstraintsForElems_npm();
# 3006 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3007 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
# 3008 "/home/mg1/chimes/src/examples/openmp/./lulesh/LULESH_OMP.cc"
}





static int module_init() {
    init_module(2224956529753665115UL, 170, 52, 6, 51, 51, 0, 51, 90, 0, 2,
                           &____alias_loc_id_0, (unsigned)46, (unsigned)0, (unsigned)0, (2224956529753665115UL + 782UL), (2224956529753665115UL + 783UL), (2224956529753665115UL + 784UL), (2224956529753665115UL + 785UL), (2224956529753665115UL + 787UL), (2224956529753665115UL + 788UL), (2224956529753665115UL + 789UL), (2224956529753665115UL + 790UL), (2224956529753665115UL + 791UL), (2224956529753665115UL + 792UL), (2224956529753665115UL + 793UL), (2224956529753665115UL + 794UL), (2224956529753665115UL + 795UL), (2224956529753665115UL + 796UL), (2224956529753665115UL + 797UL), (2224956529753665115UL + 798UL), (2224956529753665115UL + 799UL), (2224956529753665115UL + 800UL), (2224956529753665115UL + 801UL), (2224956529753665115UL + 802UL), (2224956529753665115UL + 803UL), (2224956529753665115UL + 804UL), (2224956529753665115UL + 805UL), (2224956529753665115UL + 806UL), (2224956529753665115UL + 807UL), (2224956529753665115UL + 808UL), (2224956529753665115UL + 809UL), (2224956529753665115UL + 810UL), (2224956529753665115UL + 811UL), (2224956529753665115UL + 812UL), (2224956529753665115UL + 813UL), (2224956529753665115UL + 814UL), (2224956529753665115UL + 815UL), (2224956529753665115UL + 816UL), (2224956529753665115UL + 817UL), (2224956529753665115UL + 818UL), (2224956529753665115UL + 819UL), (2224956529753665115UL + 820UL), (2224956529753665115UL + 821UL), (2224956529753665115UL + 822UL), (2224956529753665115UL + 823UL), (2224956529753665115UL + 824UL), (2224956529753665115UL + 825UL), (2224956529753665115UL + 826UL), (2224956529753665115UL + 2514UL), (2224956529753665115UL + 14912UL),
                           &____alias_loc_id_1, (unsigned)3, (unsigned)0, (unsigned)0, (2224956529753665115UL + 1UL), (2224956529753665115UL + 2UL), (2224956529753665115UL + 148UL),
                           &____alias_loc_id_2, (unsigned)5, (unsigned)0, (unsigned)0, (2224956529753665115UL + 158UL), (2224956529753665115UL + 159UL), (2224956529753665115UL + 160UL), (2224956529753665115UL + 167UL), (2224956529753665115UL + 347UL),
                           &____alias_loc_id_3, (unsigned)3, (unsigned)0, (unsigned)0, (2224956529753665115UL + 349UL), (2224956529753665115UL + 350UL), (2224956529753665115UL + 426UL),
                           &____alias_loc_id_4, (unsigned)3, (unsigned)0, (unsigned)0, (2224956529753665115UL + 428UL), (2224956529753665115UL + 429UL), (2224956529753665115UL + 456UL),
                           &____alias_loc_id_5, (unsigned)20, (unsigned)0, (unsigned)0, (2224956529753665115UL + 458UL), (2224956529753665115UL + 460UL), (2224956529753665115UL + 461UL), (2224956529753665115UL + 462UL), (2224956529753665115UL + 463UL), (2224956529753665115UL + 464UL), (2224956529753665115UL + 465UL), (2224956529753665115UL + 466UL), (2224956529753665115UL + 467UL), (2224956529753665115UL + 468UL), (2224956529753665115UL + 469UL), (2224956529753665115UL + 470UL), (2224956529753665115UL + 471UL), (2224956529753665115UL + 472UL), (2224956529753665115UL + 473UL), (2224956529753665115UL + 474UL), (2224956529753665115UL + 475UL), (2224956529753665115UL + 476UL), (2224956529753665115UL + 541UL), (2224956529753665115UL + 778UL),
                           &____alias_loc_id_6, (unsigned)57, (unsigned)0, (unsigned)0, (2224956529753665115UL + 782UL), (2224956529753665115UL + 783UL), (2224956529753665115UL + 784UL), (2224956529753665115UL + 785UL), (2224956529753665115UL + 786UL), (2224956529753665115UL + 787UL), (2224956529753665115UL + 788UL), (2224956529753665115UL + 789UL), (2224956529753665115UL + 790UL), (2224956529753665115UL + 791UL), (2224956529753665115UL + 792UL), (2224956529753665115UL + 793UL), (2224956529753665115UL + 794UL), (2224956529753665115UL + 795UL), (2224956529753665115UL + 796UL), (2224956529753665115UL + 797UL), (2224956529753665115UL + 798UL), (2224956529753665115UL + 799UL), (2224956529753665115UL + 800UL), (2224956529753665115UL + 801UL), (2224956529753665115UL + 802UL), (2224956529753665115UL + 803UL), (2224956529753665115UL + 804UL), (2224956529753665115UL + 805UL), (2224956529753665115UL + 806UL), (2224956529753665115UL + 807UL), (2224956529753665115UL + 808UL), (2224956529753665115UL + 809UL), (2224956529753665115UL + 810UL), (2224956529753665115UL + 811UL), (2224956529753665115UL + 812UL), (2224956529753665115UL + 813UL), (2224956529753665115UL + 814UL), (2224956529753665115UL + 815UL), (2224956529753665115UL + 816UL), (2224956529753665115UL + 817UL), (2224956529753665115UL + 818UL), (2224956529753665115UL + 819UL), (2224956529753665115UL + 820UL), (2224956529753665115UL + 821UL), (2224956529753665115UL + 822UL), (2224956529753665115UL + 823UL), (2224956529753665115UL + 824UL), (2224956529753665115UL + 825UL), (2224956529753665115UL + 826UL), (2224956529753665115UL + 827UL), (2224956529753665115UL + 828UL), (2224956529753665115UL + 829UL), (2224956529753665115UL + 830UL), (2224956529753665115UL + 831UL), (2224956529753665115UL + 832UL), (2224956529753665115UL + 833UL), (2224956529753665115UL + 834UL), (2224956529753665115UL + 835UL), (2224956529753665115UL + 836UL), (2224956529753665115UL + 2514UL), (2224956529753665115UL + 14912UL),
                           &____alias_loc_id_7, (unsigned)4, (unsigned)0, (unsigned)0, (2224956529753665115UL + 1766UL), (2224956529753665115UL + 1767UL), (2224956529753665115UL + 1768UL), (2224956529753665115UL + 1769UL),
                           &____alias_loc_id_8, (unsigned)5, (unsigned)0, (unsigned)0, (2224956529753665115UL + 1856UL), (2224956529753665115UL + 1857UL), (2224956529753665115UL + 1858UL), (2224956529753665115UL + 1859UL), (2224956529753665115UL + 14912UL),
                           &____alias_loc_id_9, (unsigned)2, (unsigned)0, (unsigned)0, (2224956529753665115UL + 1964UL), (2224956529753665115UL + 1965UL),
                            &____alias_loc_id_10, (unsigned)2, (unsigned)0, (unsigned)0, (2224956529753665115UL + 1976UL), (2224956529753665115UL + 1977UL),
                            &____alias_loc_id_11, (unsigned)1, (unsigned)0, (unsigned)0, (2224956529753665115UL + 1993UL),
                            &____alias_loc_id_12, (unsigned)17, (unsigned)0, (unsigned
                            &____alias_loc_id_13, (unsigned)16, (unsigned)0, (unsigned
                            &____alias_loc_id_14, (unsigned)2, (unsigned)0, (unsigned)0, (2224956529753665115UL + 2372UL), (2224956529753665115UL + 2373UL),
                            &____alias_loc_id_15, (unsigned)2, (unsigned)0, (unsigned)0, (2224956529753665115UL + 2383UL), (2224956529753665115UL + 2384UL),
                            &____alias_loc_id_16, (unsigned)6, (unsigned)0, (unsigned)0, (2224956529753665115UL + 2395UL), (2224956529753665115UL + 2396UL), (2224956529753665115UL + 2397UL), (2224956529753665115UL + 2398UL), (2224956529753665115UL + 2399UL), (2224956529753665115UL + 2514UL),
                            &____alias_loc_id_17, (unsigned)4, (unsigned)0, (unsigned)0, (2224956529753665115UL + 2488UL), (2224956529753665115UL + 2489UL), (2224956529753665115UL + 2490UL), (2224956529753665115UL + 2491UL),
                            &____alias_loc_id_18, (unsigned)12, (unsigned)0, (unsigned)0, (2224956529753665115UL + 2535UL), (2224956529753665115UL + 2536UL), (2224956529753665115UL + 2537UL), (2224956529753665115UL + 2538UL), (2224956529753665115UL + 2539UL), (2224956529753665115UL + 2540UL), (2224956529753665115UL + 2541UL), (2224956529753665115UL + 2542UL), (2224956529753665115UL + 2543UL), (2224956529753665115UL + 2544UL), (2224956529753665115UL + 2545UL), (2224956529753665115UL + 2593UL),
                            &____alias_loc_id_19, (unsigned)5, (unsigned)0, (unsigned)0, (2224956529753665115UL + 2514UL), (2224956529753665115UL + 2724UL), (2224956529753665115UL + 2725UL), (2224956529753665115UL + 2726UL), (2224956529753665115UL + 2727UL),
                            &____alias_loc_id_20, (unsigned)55, (unsigned)0, (unsigned
                            &____alias_loc_id_21, (unsigned)37, (unsigned)0, (unsigned
                            &____alias_loc_id_22, (unsigned)12, (unsigned)0, (unsigned)0, (2224956529753665115UL + 2514UL), (2224956529753665115UL + 4174UL), (2224956529753665115UL + 4175UL), (2224956529753665115UL + 4176UL), (2224956529753665115UL + 4177UL), (2224956529753665115UL + 4178UL), (2224956529753665115UL + 4179UL), (2224956529753665115UL + 4180UL), (2224956529753665115UL + 4181UL), (2224956529753665115UL + 4182UL), (2224956529753665115UL + 4183UL), (2224956529753665115UL + 4184UL),
                            &____alias_loc_id_23, (unsigned)16, (unsigned)0, (unsigned
                            &____alias_loc_id_24, (unsigned)78, (unsigned)0, (unsigned
                            &____alias_loc_id_25, (unsigned)6, (unsigned)0, (unsigned)0, (2224956529753665115UL + 5469UL), (2224956529753665115UL + 5470UL), (2224956529753665115UL + 5471UL), (2224956529753665115UL + 5472UL), (2224956529753665115UL + 5473UL), (2224956529753665115UL + 5474UL),
                            &____alias_loc_id_26, (unsigned)22, (unsigned)0, (unsigned
                            &____alias_loc_id_27, (unsigned)20, (unsigned)0, (unsigned
                            &____alias_loc_id_28, (unsigned)7, (unsigned)0, (unsigned)0, (2224956529753665115UL + 6311UL), (2224956529753665115UL + 6312UL), (2224956529753665115UL + 6313UL), (2224956529753665115UL + 6314UL), (2224956529753665115UL + 6315UL), (2224956529753665115UL + 6316UL), (2224956529753665115UL + 6317UL),
                            &____alias_loc_id_29, (unsigned)49, (unsigned)0, (unsigned
                            &____alias_loc_id_30, (unsigned)17, (unsigned)0, (unsigned
                            &____alias_loc_id_31, (unsigned)20, (unsigned)0, (unsigned
                            &____alias_loc_id_32, (unsigned)3, (unsigned)0, (unsigned)0, (2224956529753665115UL + 2514UL), (2224956529753665115UL + 7965UL), (2224956529753665115UL + 7966UL),
                            &____alias_loc_id_33, (unsigned)3, (unsigned)0, (unsigned)0, (2224956529753665115UL + 2514UL), (2224956529753665115UL + 7999UL), (2224956529753665115UL + 8000UL),
                            &____alias_loc_id_34, (unsigned)5, (unsigned)0, (unsigned)0, (2224956529753665115UL + 2514UL), (2224956529753665115UL + 8065UL), (2224956529753665115UL + 8066UL), (2224956529753665115UL + 8067UL), (2224956529753665115UL + 8068UL),
                            &____alias_loc_id_35, (unsigned)8, (unsigned)0, (unsigned)0, (2224956529753665115UL + 2514UL), (2224956529753665115UL + 8140UL), (2224956529753665115UL + 8141UL), (2224956529753665115UL + 8142UL), (2224956529753665115UL + 8143UL), (2224956529753665115UL + 8144UL), (2224956529753665115UL + 8145UL), (2224956529753665115UL + 8146UL),
                            &____alias_loc_id_36, (unsigned)4, (unsigned)0, (unsigned)0, (2224956529753665115UL + 2514UL), (2224956529753665115UL + 8253UL), (2224956529753665115UL + 8254UL), (2224956529753665115UL + 8255UL),
                            &____alias_loc_id_37, (unsigned)7, (unsigned)0, (unsigned)0, (2224956529753665115UL + 8317UL), (2224956529753665115UL + 8318UL), (2224956529753665115UL + 8319UL), (2224956529753665115UL + 8320UL), (2224956529753665115UL + 8321UL), (2224956529753665115UL + 8322UL), (2224956529753665115UL + 8323UL),
                            &____alias_loc_id_38, (unsigned)8, (unsigned)0, (unsigned)0, (2224956529753665115UL + 8438UL), (2224956529753665115UL + 8439UL), (2224956529753665115UL + 8440UL), (2224956529753665115UL + 8441UL), (2224956529753665115UL + 8442UL), (2224956529753665115UL + 8492UL), (2224956529753665115UL + 8493UL), (2224956529753665115UL + 8494UL),
                            &____alias_loc_id_39, (unsigned)26, (unsigned)0, (unsigned
                            &____alias_loc_id_40, (unsigned)21, (unsigned)0, (unsigned
                            &____alias_loc_id_41, (unsigned)15, (unsigned)0, (unsigned)0, (2224956529753665115UL + 9091UL), (2224956529753665115UL + 9092UL), (2224956529753665115UL + 9093UL), (2224956529753665115UL + 9094UL), (2224956529753665115UL + 9095UL), (2224956529753665115UL + 9096UL), (2224956529753665115UL + 9097UL), (2224956529753665115UL + 9098UL), (2224956529753665115UL + 9099UL), (2224956529753665115UL + 9100UL), (2224956529753665115UL + 9101UL), (2224956529753665115UL + 9102UL), (2224956529753665115UL + 9345UL), (2224956529753665115UL + 9346UL), (2224956529753665115UL + 9347UL),
                            &____alias_loc_id_42, (unsigned)6, (unsigned)0, (unsigned)0, (2224956529753665115UL + 9348UL), (2224956529753665115UL + 9349UL), (2224956529753665115UL + 9350UL), (2224956529753665115UL + 9351UL), (2224956529753665115UL + 9352UL), (2224956529753665115UL + 9353UL),
                            &____alias_loc_id_43, (unsigned)61, (unsigned)0, (unsigned
                            &____alias_loc_id_44, (unsigned)2, (unsigned)0, (unsigned)0, (2224956529753665115UL + 11269UL), (2224956529753665115UL + 11270UL),
                            &____alias_loc_id_45, (unsigned)26, (unsigned)0, (unsigned
                            &____alias_loc_id_46, (unsigned)25, (unsigned)0, (unsigned
                            &____alias_loc_id_47, (unsigned)10, (unsigned)0, (unsigned)0, (2224956529753665115UL + 13438UL), (2224956529753665115UL + 13439UL), (2224956529753665115UL + 13440UL), (2224956529753665115UL + 13441UL), (2224956529753665115UL + 13442UL), (2224956529753665115UL + 13443UL), (2224956529753665115UL + 13444UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL),
                            &____alias_loc_id_48, (unsigned)34, (unsigned)0, (unsigned
                            &____alias_loc_id_49, (unsigned)45, (unsigned)0, (unsigned
                            &____alias_loc_id_50, (unsigned)63, (unsigned)0, (unsigned)0, (2224956529753665115UL + 14477UL), (2224956529753665115UL + 14478UL), (2224956529753665115UL + 14479UL), (2224956529753665115UL + 14480UL), (2224956529753665115UL + 14481UL), (2224956529753665115UL + 14482UL), (2224956529753665115UL + 14483UL), (2224956529753665115UL + 14484UL), (2224956529753665115UL + 14485UL), (2224956529753665115UL + 14486UL), (2224956529753665115UL + 14487UL), (2224956529753665115UL + 14488UL), (2224956529753665115UL + 14489UL), (2224956529753665115UL + 14490UL), (2224956529753665115UL + 14491UL), (2224956529753665115UL + 14492UL), (2224956529753665115UL + 14493UL), (2224956529753665115UL + 14494UL), (2224956529753665115UL + 14495UL), (2224956529753665115UL + 14496UL), (2224956529753665115UL + 14497UL), (2224956529753665115UL + 14498UL), (2224956529753665115UL + 14499UL), (2224956529753665115UL + 14500UL), (2224956529753665115UL + 14501UL), (2224956529753665115UL + 14502UL), (2224956529753665115UL + 14503UL), (2224956529753665115UL + 14504UL), (2224956529753665115UL + 14505UL), (2224956529753665115UL + 14506UL), (2224956529753665115UL + 14507UL), (2224956529753665115UL + 14508UL), (2224956529753665115UL + 14509UL), (2224956529753665115UL + 14510UL), (2224956529753665115UL + 14511UL), (2224956529753665115UL + 14512UL), (2224956529753665115UL + 14513UL), (2224956529753665115UL + 14514UL), (2224956529753665115UL + 14515UL), (2224956529753665115UL + 14516UL), (2224956529753665115UL + 14517UL), (2224956529753665115UL + 14518UL), (2224956529753665115UL + 14519UL), (2224956529753665115UL + 14520UL), (2224956529753665115UL + 14521UL), (2224956529753665115UL + 14522UL), (2224956529753665115UL + 14523UL), (2224956529753665115UL + 14524UL), (2224956529753665115UL + 14525UL), (2224956529753665115UL + 14526UL), (2224956529753665115UL + 14527UL), (2224956529753665115UL + 14528UL), (2224956529753665115UL + 14529UL), (2224956529753665115UL + 14530UL), (2224956529753665115UL + 14531UL), (2224956529753665115UL + 14532UL), (2224956529753665115UL + 14533UL), (2224956529753665115UL + 14534UL), (2224956529753665115UL + 14535UL), (2224956529753665115UL + 14536UL), (2224956529753665115UL + 14537UL), (2224956529753665115UL + 14538UL), (2224956529753665115UL + 14539UL),
                            "CalcVolumeForceForElems", 1, (void *)(&CalcVolumeForceForElems_npm), (void *)__null, 0, 0, 0UL, 16, "malloc", 1, 0UL, (2224956529753665115UL + 8390UL), "malloc", 1, 0UL, (2224956529753665115UL + 8368UL), "malloc", 1, 0UL, (2224956529753665115UL + 8375UL), "malloc", 1, 0UL, (2224956529753665115UL + 8382UL), "__assert_fail", 4, (2224956529753665115UL + 14924UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14917UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14924UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14917UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14924UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14917UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14948UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14917UL), 0UL, "InitStressTermsForElems", 4, 0UL, (2224956529753665115UL + 8390UL), (2224956529753665115UL + 8368UL), (2224956529753665115UL + 8375UL), 0UL, "IntegrateStressForElems", 5, 0UL, (2224956529753665115UL + 8390UL), (2224956529753665115UL + 8368UL), (2224956529753665115UL + 8375UL), (2224956529753665115UL + 8382UL), 0UL, "exit", 1, 0UL, 0UL, "CalcHourglassControlForElems", 2, (2224956529753665115UL + 8382UL), 0UL, 0UL, "free", 1, (2224956529753665115UL + 8382UL), 0UL, "free", 1, (2224956529753665115UL + 8375UL), 0UL, "free", 1, (2224956529753665115UL + 8368UL), 0UL, "free", 1, (2224956529753665115UL + 8390UL), 0UL,
                            "AllocateElemTemporary", 0, "_Z21AllocateElemTemporaryP6Domainm", "_Z25AllocateElemTemporary_npmP6Domainm", 0, 2, (2224956529753665115UL + 426UL), 0UL, 0UL, 10, "malloc", 1, 0UL, (2224956529753665115UL + 357UL), "malloc", 1, 0UL, (2224956529753665115UL + 357UL), "malloc", 1, 0UL, (2224956529753665115UL + 357UL), "malloc", 1, 0UL, (2224956529753665115UL + 357UL), "malloc", 1, 0UL, (2224956529753665115UL + 357UL), "malloc", 1, 0UL, (2224956529753665115UL + 357UL), "malloc", 1, 0UL, (2224956529753665115UL + 357UL), "malloc", 1, 0UL, (2224956529753665115UL + 357UL), "malloc", 1, 0UL, (2224956529753665115UL + 357UL), "malloc", 1, 0UL, (2224956529753665115UL + 357UL),
                            "IntegrateStressForElems", 1, (void *)(&IntegrateStressForElems_npm), (void *)__null, 0, 5, 0UL, (2224956529753665115UL + 8805UL), (2224956529753665115UL + 8806UL), (2224956529753665115UL + 8807UL), (2224956529753665115UL + 8808UL), 0UL, 12, "malloc", 1, 0UL, (2224956529753665115UL + 8539UL), "malloc", 1, 0UL, (2224956529753665115UL + 8563UL), "malloc", 1, 0UL, (2224956529753665115UL + 8570UL), "__assert_fail", 4, (2224956529753665115UL + 14956UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14960UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14956UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14960UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14956UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14960UL), 0UL, "CalcElemShapeFunctionDerivatives", 5, (2224956529753665115UL + 8506UL), (2224956529753665115UL + 8507UL), (2224956529753665115UL + 8508UL), (2224956529753665115UL + 8505UL), (2224956529753665115UL + 8808UL), 0UL, "CalcElemNodeNormals", 6, (2224956529753665115UL + 8505UL), (2224956529753665115UL + 8505UL), (2224956529753665115UL + 8505UL), (2224956529753665115UL + 8506UL), (2224956529753665115UL + 8507UL), (2224956529753665115UL + 8508UL), 0UL, "SumElemStressesToNodeForces", 7, (2224956529753665115UL + 8505UL), 0UL, 0UL, 0UL, (2224956529753665115UL + 8539UL), (2224956529753665115UL + 8563UL), (2224956529753665115UL + 8570UL), 0UL, "free", 1, (2224956529753665115UL + 8570UL), 0UL, "free", 1, (2224956529753665115UL + 8563UL), 0UL, "free", 1, (2224956529753665115UL + 8539UL), 0UL,
                            "CalcElemVolumeScalar", 1, (void *)(&CalcElemVolumeScalar_npm), (void *)__null, 0, 24, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0,
                            "LagrangeLeapFrog", 1, (void *)(&LagrangeLeapFrog_npm), (void *)__null, 0, 0, 0UL, 3, "LagrangeNodal", 0, 0UL, "LagrangeElements", 0, 0UL, "CalcTimeConstraintsForElems", 0, 0UL,
                            "CalcKinematicsForElems", 1, (void *)(&CalcKinematicsForElems_npm), (void *)__null, 0, 2, 0UL, 0UL, 0UL, 4, "CalcElemVolume", 3, (2224956529753665115UL + 6042UL), (2224956529753665115UL + 6043UL), (2224956529753665115UL + 6044UL), 0UL, "CalcElemCharacteristicLength", 4, (2224956529753665115UL + 6042UL), (2224956529753665115UL + 6043UL), (2224956529753665115UL + 6044UL), 0UL, 0UL, "CalcElemShapeFunctionDerivatives", 5, (2224956529753665115UL + 6042UL), (2224956529753665115UL + 6043UL), (2224956529753665115UL + 6044UL), (2224956529753665115UL + 6040UL), (2224956529753665115UL + 6048UL), 0UL, "CalcElemVelocityGrandient", 6, (2224956529753665115UL + 6045UL), (2224956529753665115UL + 6046UL), (2224956529753665115UL + 6047UL), (2224956529753665115UL + 6040UL), 0UL, (2224956529753665115UL + 6041UL), 0UL,
                            "CalcHourglassControlForElems", 1, (void *)(&CalcHourglassControlForElems_npm), (void *)__null, 0, 2, (2224956529753665115UL + 9089UL), 0UL, 0UL, 22, "malloc", 1, 0UL, (2224956529753665115UL + 8844UL), "malloc", 1, 0UL, (2224956529753665115UL + 8889UL), "malloc", 1, 0UL, (2224956529753665115UL + 8896UL), "malloc", 1, 0UL, (2224956529753665115UL + 8903UL), "malloc", 1, 0UL, (2224956529753665115UL + 8910UL), "malloc", 1, 0UL, (2224956529753665115UL + 8917UL), "__assert_fail", 4, (2224956529753665115UL + 14936UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14950UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14936UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14950UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14936UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14950UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14940UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14950UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14940UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14950UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14940UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14950UL), 0UL, "CollectDomainNodesToElemNodes", 4, (2224956529753665115UL + 2514UL), (2224956529753665115UL + 8820UL), (2224956529753665115UL + 8821UL), (2224956529753665115UL + 8822UL), 0UL, "CalcElemVolumeDerivative", 6, (2224956529753665115UL + 8823UL), (2224956529753665115UL + 8824UL), (2224956529753665115UL + 8825UL), (2224956529753665115UL + 8820UL), (2224956529753665115UL + 8821UL), (2224956529753665115UL + 8822UL), 0UL, "exit", 1, 0UL, 0UL, "CalcFBHourglassForceForElems", 8, (2224956529753665115UL + 9089UL), (2224956529753665115UL + 8903UL), (2224956529753665115UL + 8910UL), (2224956529753665115UL + 8917UL), (2224956529753665115UL + 8844UL), (2224956529753665115UL + 8889UL), (2224956529753665115UL + 8896UL), 0UL, 0UL, "free", 1, (2224956529753665115UL + 8917UL), 0UL, "free", 1, (2224956529753665115UL + 8910UL), 0UL, "free", 1, (2224956529753665115UL + 8903UL), 0UL, "free", 1, (2224956529753665115UL + 8896UL), 0UL, "free", 1, (2224956529753665115UL + 8889UL), 0UL, "free", 1, (2224956529753665115UL + 8844UL), 0UL,
                            "CalcElemVolumeDerivative", 1, (void *)(&CalcElemVolumeDerivative_npm), (void *)__null, 0, 6, (2224956529753665115UL + 9855UL), (2224956529753665115UL + 9856UL), (2224956529753665115UL + 9857UL), (2224956529753665115UL + 9858UL), (2224956529753665115UL + 9859UL), (2224956529753665115UL + 9860UL), 0UL, 8, "VoluDer", 21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, (2224956529753665115UL + 9855UL), (2224956529753665115UL + 9856UL), (2224956529753665115UL + 9857UL), 0UL, "VoluDer", 21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, (2224956529753665115UL + 9855UL), (2224956529753665115UL + 9856UL), (2224956529753665115UL + 9857UL), 0UL, "VoluDer", 21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, (2224956529753665115UL + 9855UL), (2224956529753665115UL + 9856UL), (2224956529753665115UL + 9857UL), 0UL, "VoluDer", 21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, (2224956529753665115UL + 9855UL), (2224956529753665115UL + 9856UL), (2224956529753665115UL + 9857UL), 0UL, "VoluDer", 21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, (2224956529753665115UL + 9855UL), (2224956529753665115UL + 9856UL), (2224956529753665115UL + 9857UL), 0UL, "VoluDer", 21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, (2224956529753665115UL + 9855UL), (2224956529753665115UL + 9856UL), (2224956529753665115UL + 9857UL), 0UL, "VoluDer", 21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, (2224956529753665115UL + 9855UL), (2224956529753665115UL + 9856UL), (2224956529753665115UL + 9857UL), 0UL, "VoluDer", 21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, (2224956529753665115UL + 9855UL), (2224956529753665115UL + 9856UL), (2224956529753665115UL + 9857UL), 0UL,
                            "CalcPressureForElems", 1, (void *)(&CalcPressureForElems_npm), (void *)__null, 0, 10, (2224956529753665115UL + 4422UL), (2224956529753665115UL + 4423UL), (2224956529753665115UL + 4424UL), (2224956529753665115UL + 4425UL), (2224956529753665115UL + 4426UL), (2224956529753665115UL + 4427UL), 0UL, 0UL, 0UL, 0UL, 0UL, 1, "FABS", 1, 0UL, 0UL,
                            "AllocateNodeElemIndexes", 0, "_Z23AllocateNodeElemIndexesP6Domain", "_Z27AllocateNodeElemIndexes_npmP6Domain", 0, 1, (2224956529753665115UL + 778UL), 0UL, 5, "malloc", 1, 0UL, (2224956529753665115UL + 541UL), "malloc", 1, 0UL, (2224956529753665115UL + 541UL), "malloc", 1, 0UL, (2224956529753665115UL + 541UL), "fprintf", 2, (2224956529753665115UL + 768UL), (2224956529753665115UL + 14914UL), 0UL, "exit", 1, 0UL, 0UL,
                            "CalcAccelerationForNodes", 1, (void *)(&CalcAccelerationForNodes_npm), (void *)__null, 0, 0, 0UL, 0,
                            "ApplyAccelerationBoundaryConditionsForNodes", 1, (void *)(&ApplyAccelerationBoundaryConditionsForNodes_npm), (void *)__null, 0, 0, 0UL, 0,
                            "CalcHydroConstraintForElems", 1, (void *)(&CalcHydroConstraintForElems_npm), (void *)__null, 0, 0, 0UL, 3, "get_num_threads", 0, 0UL, "FABS", 1, 0UL, 0UL, "omp_get_thread_num", 0, 0UL,
                            "EvalEOSForElems", 1, (void *)(&EvalEOSForElems_npm), (void *)__null, 0, 2, (2224956529753665115UL + 3492UL), 0UL, 0UL, 44, "malloc", 1, 0UL, (2224956529753665115UL + 2856UL), "malloc", 1, 0UL, (2224956529753665115UL + 2957UL), "malloc", 1, 0UL, (2224956529753665115UL + 2964UL), "malloc", 1, 0UL, (2224956529753665115UL + 2971UL), "malloc", 1, 0UL, (2224956529753665115UL + 2978UL), "malloc", 1, 0UL, (2224956529753665115UL + 2985UL), "malloc", 1, 0UL, (2224956529753665115UL + 2992UL), "malloc", 1, 0UL, (2224956529753665115UL + 2999UL), "malloc", 1, 0UL, (2224956529753665115UL + 3006UL), "malloc", 1, 0UL, (2224956529753665115UL + 3013UL), "malloc", 1, 0UL, (2224956529753665115UL + 3020UL), "malloc", 1, 0UL, (2224956529753665115UL + 3027UL), "malloc", 1, 0UL, (2224956529753665115UL + 3034UL), "malloc", 1, 0UL, (2224956529753665115UL + 3041UL), "__assert_fail", 4, (2224956529753665115UL + 14924UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14924UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14924UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14924UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14932UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14933UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14934UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14934UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14936UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14924UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14924UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14924UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14940UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14936UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14928UL), 0UL, "CalcEnergyForElems", 23, (2224956529753665115UL + 3013UL), (2224956529753665115UL + 3020UL), (2224956529753665115UL + 3027UL), (2224956529753665115UL + 3034UL), (2224956529753665115UL + 3041UL), (2224956529753665115UL + 2964UL), (2224956529753665115UL + 2856UL), (2224956529753665115UL + 2971UL), (2224956529753665115UL + 2978UL), (2224956529753665115UL + 2985UL), (2224956529753665115UL + 3492UL), (2224956529753665115UL + 3006UL), (2224956529753665115UL + 2957UL), 0UL, 0UL, 0UL, 0UL, 0UL, (2224956529753665115UL + 2992UL), (2224956529753665115UL + 2999UL), 0UL, 0UL, 0UL, 0UL, "CalcSoundSpeedForElems", 8, (2224956529753665115UL + 3492UL), 0UL, (2224956529753665115UL + 3020UL), (2224956529753665115UL + 3013UL), (2224956529753665115UL + 3041UL), (2224956529753665115UL + 3034UL), 0UL, 0UL, 0UL, "free", 1, (2224956529753665115UL + 3041UL), 0UL, "free", 1, (2224956529753665115UL + 3034UL), 0UL, "free", 1, (2224956529753665115UL + 3027UL), 0UL, "free", 1, (2224956529753665115UL + 3020UL), 0UL, "free", 1, (2224956529753665115UL + 3013UL), 0UL, "free", 1, (2224956529753665115UL + 3006UL), 0UL, "free", 1, (2224956529753665115UL + 2999UL), 0UL, "free", 1, (2224956529753665115UL + 2992UL), 0UL, "free", 1, (2224956529753665115UL + 2985UL), 0UL, "free", 1, (2224956529753665115UL + 2978UL), 0UL, "free", 1, (2224956529753665115UL + 2971UL), 0UL, "free", 1, (2224956529753665115UL + 2964UL), 0UL, "free", 1, (2224956529753665115UL + 2957UL), 0UL, "free", 1, (2224956529753665115UL + 2856UL), 0UL,
                            "FABS", 1, (void *)(&FABS_npm), (void *)__null, 0, 1, 0UL, 0UL, 1, "fabs", 1, 0UL, 0UL,
                            "CalcLagrangeElements", 1, (void *)(&CalcLagrangeElements_npm), (void *)__null, 0, 1, 0UL, 0UL, 2, "CalcKinematicsForElems", 2, 0UL, 0UL, 0UL, "exit", 1, 0UL, 0UL,
                            "UpdateVolumesForElems", 1, (void *)(&UpdateVolumesForElems_npm), (void *)__null, 0, 0, 0UL, 1, "FABS", 1, 0UL, 0UL,
                            "CalcTimeConstraintsForElems", 1, (void *)(&CalcTimeConstraintsForElems_npm), (void *)__null, 0, 0, 0UL, 2, "CalcCourantConstraintForElems", 0, 0UL, "CalcHydroConstraintForElems", 0, 0UL,
                            "VoluDer", 1, (void *)(&VoluDer_npm), (void *)__null, 0, 21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, (2224956529753665115UL + 13435UL), (2224956529753665115UL + 13436UL), (2224956529753665115UL + 13437UL), 0UL, 0,
                            "get_num_threads", 1, (void *)(&get_num_threads_npm), (void *)__null, 0, 0, 0UL, 1, "omp_get_num_threads", 0, 0UL,
                            "CalcElemShapeFunctionDerivatives", 1, (void *)(&CalcElemShapeFunctionDerivatives_npm), (void *)__null, 0, 5, (2224956529753665115UL + 7257UL), (2224956529753665115UL + 7258UL), (2224956529753665115UL + 7259UL), (2224956529753665115UL + 7260UL), (2224956529753665115UL + 7261UL), 0UL, 0,
                            "CalcMonotonicQGradientsForElems", 1, (void *)(&CalcMonotonicQGradientsForElems_npm), (void *)__null, 0, 0, 0UL, 3, "SQRT", 1, 0UL, 0UL, "SQRT", 1, 0UL, 0UL, "SQRT", 1, 0UL, 0UL,
                            "CalcMonotonicQRegionForElems", 1, (void *)(&CalcMonotonicQRegionForElems_npm), (void *)__null, 0, 6, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0,
                            "TimeIncrement", 1, (void *)(&TimeIncrement_npm), (void *)__null, 0, 0, 0UL, 0,
                            "SumElemStressesToNodeForces", 1, (void *)(&SumElemStressesToNodeForces_npm), (void *)__null, 0, 7, (2224956529753665115UL + 14214UL), 0UL, 0UL, 0UL, (2224956529753665115UL + 14218UL), (2224956529753665115UL + 14219UL), (2224956529753665115UL + 14220UL), 0UL, 0,
                            "CBRT", 1, (void *)(&CBRT_npm), (void *)__null, 0, 1, 0UL, 0UL, 1, "cbrt", 1, 0UL, 0UL,
                            "LagrangeElements", 1, (void *)(&LagrangeElements_npm), (void *)__null, 0, 0, 0UL, 4, "CalcLagrangeElements", 1, 0UL, 0UL, "CalcQForElems", 0, 0UL, "ApplyMaterialPropertiesForElems", 0, 0UL, "UpdateVolumesForElems", 0, 0UL,
                            "AllocateNodesets", 0, "_Z16AllocateNodesetsP6Domainm", "_Z20AllocateNodesets_npmP6Domainm", 0, 2, (2224956529753665115UL + 456UL), 0UL, 0UL, 3, "malloc", 1, 0UL, (2224956529753665115UL + 436UL), "malloc", 1, 0UL, (2224956529753665115UL + 436UL), "malloc", 1, 0UL, (2224956529753665115UL + 436UL),
                            "CalcCourantConstraintForElems", 1, (void *)(&CalcCourantConstraintForElems_npm), (void *)__null, 0, 0, 0UL, 3, "get_num_threads", 0, 0UL, "SQRT", 1, 0UL, 0UL, "omp_get_thread_num", 0, 0UL,
                            "AreaFace", 1, (void *)(&AreaFace_npm), (void *)__null, 0, 12, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0,
                            "CalcElemVolume", 1, (void *)(&CalcElemVolume_npm), (void *)__null, 0, 3, (2224956529753665115UL + 1853UL), (2224956529753665115UL + 1854UL), (2224956529753665115UL + 1855UL), 0UL, 1, "CalcElemVolumeScalar", 24, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
                            "CalcElemVelocityGrandient", 1, (void *)(&CalcElemVelocityGrandient_npm), (void *)__null, 0, 6, (2224956529753665115UL + 7793UL), (2224956529753665115UL + 7794UL), (2224956529753665115UL + 7795UL), (2224956529753665115UL + 7796UL), 0UL, (2224956529753665115UL + 7798UL), 0UL, 0,
                            "CollectDomainNodesToElemNodes", 1, (void *)(&CollectDomainNodesToElemNodes_npm), (void *)__null, 0, 4, (2224956529753665115UL + 9344UL), (2224956529753665115UL + 9345UL), (2224956529753665115UL + 9346UL), (2224956529753665115UL + 9347UL), 0UL, 0,
                            "CalcMonotonicQForElems", 1, (void *)(&CalcMonotonicQForElems_npm), (void *)__null, 0, 0, 0UL, 1, "CalcMonotonicQRegionForElems", 6, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
                            "AllocateElemPersistent", 0, "_Z22AllocateElemPersistentP6Domainm", "_Z26AllocateElemPersistent_npmP6Domainm", 0, 2, (2224956529753665115UL + 347UL), 0UL, 0UL, 23, "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "memset", 3, (2224956529753665115UL + 167UL), 0UL, 0UL, 0UL, "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "memset", 3, (2224956529753665115UL + 167UL), 0UL, 0UL, 0UL, "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL), "malloc", 1, 0UL, (2224956529753665115UL + 167UL),
                            "CalcPositionForNodes", 1, (void *)(&CalcPositionForNodes_npm), (void *)__null, 0, 1, 0UL, 0UL, 0,
                            "CalcForceForNodes", 1, (void *)(&CalcForceForNodes_npm), (void *)__null, 0, 0, 0UL, 1, "CalcVolumeForceForElems", 0, 0UL,
                            "SumElemFaceNormal", 1, (void *)(&SumElemFaceNormal_npm), (void *)__null, 0, 24, (2224956529753665115UL + 14453UL), (2224956529753665115UL + 14454UL), (2224956529753665115UL + 14455UL), (2224956529753665115UL + 14456UL), (2224956529753665115UL + 14457UL), (2224956529753665115UL + 14458UL), (2224956529753665115UL + 14459UL), (2224956529753665115UL + 14460UL), (2224956529753665115UL + 14461UL), (2224956529753665115UL + 14462UL), (2224956529753665115UL + 14463UL), (2224956529753665115UL + 14464UL), 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0,
                            "ApplyMaterialPropertiesForElems", 1, (void *)(&ApplyMaterialPropertiesForElems_npm), (void *)__null, 0, 0, 0UL, 5, "malloc", 1, 0UL, (2224956529753665115UL + 2593UL), "__assert_fail", 4, (2224956529753665115UL + 14924UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14926UL), 0UL, "exit", 1, 0UL, 0UL, "EvalEOSForElems", 2, (2224956529753665115UL + 2593UL), 0UL, 0UL, "free", 1, (2224956529753665115UL + 2593UL), 0UL,
                            "CalcVelocityForNodes", 1, (void *)(&CalcVelocityForNodes_npm), (void *)__null, 0, 2, 0UL, 0UL, 0UL, 3, "FABS", 1, 0UL, 0UL, "FABS", 1, 0UL, 0UL, "FABS", 1, 0UL, 0UL,
                            "AllocateNodalPersistent", 0, "_Z23AllocateNodalPersistentP6Domainm", "_Z27AllocateNodalPersistent_npmP6Domainm", 0, 2, (2224956529753665115UL + 148UL), 0UL, 0UL, 20, "malloc", 1, 0UL, (2224956529753665115UL + 9UL), "malloc", 1, 0UL, (2224956529753665115UL + 9UL), "malloc", 1, 0UL, (2224956529753665115UL + 9UL), "malloc", 1, 0UL, (2224956529753665115UL + 9UL), "malloc", 1, 0UL, (2224956529753665115UL + 9UL), "malloc", 1, 0UL, (2224956529753665115UL + 9UL), "memset", 3, (2224956529753665115UL + 9UL), 0UL, 0UL, 0UL, "memset", 3, (2224956529753665115UL + 9UL), 0UL, 0UL, 0UL, "memset", 3, (2224956529753665115UL + 9UL), 0UL, 0UL, 0UL, "malloc", 1, 0UL, (2224956529753665115UL + 9UL), "malloc", 1, 0UL, (2224956529753665115UL + 9UL), "malloc", 1, 0UL, (2224956529753665115UL + 9UL), "memset", 3, (2224956529753665115UL + 9UL), 0UL, 0UL, 0UL, "memset", 3, (2224956529753665115UL + 9UL), 0UL, 0UL, 0UL, "memset", 3, (2224956529753665115UL + 9UL), 0UL, 0UL, 0UL, "malloc", 1, 0UL, (2224956529753665115UL + 9UL), "malloc", 1, 0UL, (2224956529753665115UL + 9UL), "malloc", 1, 0UL, (2224956529753665115UL + 9UL), "malloc", 1, 0UL, (2224956529753665115UL + 9UL), "memset", 3, (2224956529753665115UL + 9UL), 0UL, 0UL, 0UL,
                            "InitStressTermsForElems", 1, (void *)(&InitStressTermsForElems_npm), (void *)__null, 0, 4, 0UL, (2224956529753665115UL + 8492UL), (2224956529753665115UL + 8493UL), (2224956529753665115UL + 8494UL), 0UL, 0,
                            "CalcElemNodeNormals", 1, (void *)(&CalcElemNodeNormals_npm), (void *)__null, 0, 6, (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13853UL), (2224956529753665115UL + 13854UL), (2224956529753665115UL + 13855UL), 0UL, 6, "SumElemFaceNormal", 24, (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, "SumElemFaceNormal", 24, (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, "SumElemFaceNormal", 24, (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, "SumElemFaceNormal", 24, (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, "SumElemFaceNormal", 24, (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, "SumElemFaceNormal", 24, (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), (2224956529753665115UL + 13850UL), (2224956529753665115UL + 13851UL), (2224956529753665115UL + 13852UL), 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
                            "SQRT", 1, (void *)(&SQRT_npm), (void *)__null, 0, 1, 0UL, 0UL, 1, "sqrt", 1, 0UL, 0UL,
                            "CalcSoundSpeedForElems", 1, (void *)(&CalcSoundSpeedForElems_npm), (void *)__null, 0, 8, (2224956529753665115UL + 4275UL), 0UL, (2224956529753665115UL + 4277UL), (2224956529753665115UL + 4278UL), (2224956529753665115UL + 4279UL), (2224956529753665115UL + 4280UL), 0UL, 0UL, 0UL, 1, "SQRT", 1, 0UL, 0UL,
                            "CalcElemCharacteristicLength", 1, (void *)(&CalcElemCharacteristicLength_npm), (void *)__null, 0, 4, (2224956529753665115UL + 6592UL), (2224956529753665115UL + 6593UL), (2224956529753665115UL + 6594UL), 0UL, 0UL, 13, "AreaFace", 12, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, "fmax", 2, 0UL, 0UL, 0UL, "AreaFace", 12, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, "fmax", 2, 0UL, 0UL, 0UL, "AreaFace", 12, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, "fmax", 2, 0UL, 0UL, 0UL, "AreaFace", 12, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, "fmax", 2, 0UL, 0UL, 0UL, "AreaFace", 12, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, "fmax", 2, 0UL, 0UL, 0UL, "AreaFace", 12, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, "fmax", 2, 0UL, 0UL, 0UL, "SQRT", 1, 0UL, 0UL,
                            "CalcEnergyForElems", 1, (void *)(&CalcEnergyForElems_npm), (void *)__null, 0, 23, (2224956529753665115UL + 4151UL), (2224956529753665115UL + 4152UL), (2224956529753665115UL + 4153UL), (2224956529753665115UL + 4154UL), (2224956529753665115UL + 4155UL), (2224956529753665115UL + 4156UL), (2224956529753665115UL + 4157UL), (2224956529753665115UL + 4158UL), (2224956529753665115UL + 4159UL), (2224956529753665115UL + 4160UL), (2224956529753665115UL + 4161UL), (2224956529753665115UL + 4162UL), (2224956529753665115UL + 4163UL), 0UL, 0UL, 0UL, 0UL, 0UL, (2224956529753665115UL + 4169UL), (2224956529753665115UL + 4170UL), 0UL, 0UL, 0UL, 0UL, 12, "malloc", 1, 0UL, (2224956529753665115UL + 3580UL), "__assert_fail", 4, (2224956529753665115UL + 14942UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14943UL), 0UL, "CalcPressureForElems", 10, (2224956529753665115UL + 3580UL), (2224956529753665115UL + 4154UL), (2224956529753665115UL + 4155UL), (2224956529753665115UL + 4152UL), (2224956529753665115UL + 4160UL), (2224956529753665115UL + 4161UL), 0UL, 0UL, 0UL, 0UL, 0UL, "SQRT", 1, 0UL, 0UL, "FABS", 1, 0UL, 0UL, "CalcPressureForElems", 10, (2224956529753665115UL + 4151UL), (2224956529753665115UL + 4154UL), (2224956529753665115UL + 4155UL), (2224956529753665115UL + 4152UL), (2224956529753665115UL + 4159UL), (2224956529753665115UL + 4161UL), 0UL, 0UL, 0UL, 0UL, 0UL, "SQRT", 1, 0UL, 0UL, "FABS", 1, 0UL, 0UL, "CalcPressureForElems", 10, (2224956529753665115UL + 4151UL), (2224956529753665115UL + 4154UL), (2224956529753665115UL + 4155UL), (2224956529753665115UL + 4152UL), (2224956529753665115UL + 4159UL), (2224956529753665115UL + 4161UL), 0UL, 0UL, 0UL, 0UL, 0UL, "SQRT", 1, 0UL, 0UL, "FABS", 1, 0UL, 0UL, "free", 1, (2224956529753665115UL + 3580UL), 0UL,
                            "CalcQForElems", 1, (void *)(&CalcQForElems_npm), (void *)__null, 0, 0, 0UL, 3, "CalcMonotonicQGradientsForElems", 0, 0UL, "CalcMonotonicQForElems", 0, 0UL, "exit", 1, 0UL, 0UL,
                            "LagrangeNodal", 1, (void *)(&LagrangeNodal_npm), (void *)__null, 0, 0, 0UL, 5, "CalcForceForNodes", 0, 0UL, "CalcAccelerationForNodes", 0, 0UL, "ApplyAccelerationBoundaryConditionsForNodes", 0, 0UL, "CalcVelocityForNodes", 2, 0UL, 0UL, 0UL, "CalcPositionForNodes", 1, 0UL, 0UL,
                            "CalcFBHourglassForceForElems", 1, (void *)(&CalcFBHourglassForceForElems_npm), (void *)__null, 0, 8, (2224956529753665115UL + 11261UL), (2224956529753665115UL + 11262UL), (2224956529753665115UL + 11263UL), (2224956529753665115UL + 11264UL), (2224956529753665115UL + 11265UL), (2224956529753665115UL + 11266UL), (2224956529753665115UL + 11267UL), 0UL, 0UL, 11, "malloc", 1, 0UL, (2224956529753665115UL + 9948UL), "malloc", 1, 0UL, (2224956529753665115UL + 9972UL), "malloc", 1, 0UL, (2224956529753665115UL + 9979UL), "__assert_fail", 4, (2224956529753665115UL + 14956UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14957UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14956UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14957UL), 0UL, "__assert_fail", 4, (2224956529753665115UL + 14956UL), (2224956529753665115UL + 14925UL), 0UL, (2224956529753665115UL + 14957UL), 0UL, "CBRT", 1, 0UL, 0UL, "CalcElemFBHourglassForce", 15, (2224956529753665115UL + 9891UL), (2224956529753665115UL + 9892UL), (2224956529753665115UL + 9893UL), (2224956529753665115UL + 9883UL), (2224956529753665115UL + 9884UL), (2224956529753665115UL + 9885UL), (2224956529753665115UL + 9886UL), (2224956529753665115UL + 9887UL), (2224956529753665115UL + 9888UL), (2224956529753665115UL + 9889UL), (2224956529753665115UL + 9890UL), 0UL, (2224956529753665115UL + 9879UL), (2224956529753665115UL + 9880UL), (2224956529753665115UL + 9881UL), 0UL, "free", 1, (2224956529753665115UL + 9979UL), 0UL, "free", 1, (2224956529753665115UL + 9972UL), 0UL, "free", 1, (2224956529753665115UL + 9948UL), 0UL,
                            "CalcElemFBHourglassForce", 1, (void *)(&CalcElemFBHourglassForce_npm), (void *)__null, 0, 15, (2224956529753665115UL + 13170UL), (2224956529753665115UL + 13171UL), (2224956529753665115UL + 13172UL), (2224956529753665115UL + 13173UL), (2224956529753665115UL + 13174UL), (2224956529753665115UL + 13175UL), (2224956529753665115UL + 13176UL), (2224956529753665115UL + 13177UL), (2224956529753665115UL + 13178UL), (2224956529753665115UL + 13179UL), (2224956529753665115UL + 13180UL), 0UL, (2224956529753665115UL + 13182UL), (2224956529753665115UL + 13183UL), (2224956529753665115UL + 13184UL), 0UL, 0,
                           "CalcVolumeForceForElems", &(____chimes_does_checkpoint_CalcVolumeForceForElems_npm),
                           "AllocateElemTemporary", &(____chimes_does_checkpoint_AllocateElemTemporary_npm),
                           "IntegrateStressForElems", &(____chimes_does_checkpoint_IntegrateStressForElems_npm),
                           "CalcElemVolumeScalar", &(____chimes_does_checkpoint_CalcElemVolumeScalar_npm),
                           "LagrangeLeapFrog", &(____chimes_does_checkpoint_LagrangeLeapFrog_npm),
                           "CalcKinematicsForElems", &(____chimes_does_checkpoint_CalcKinematicsForElems_npm),
                           "CalcHourglassControlForElems", &(____chimes_does_checkpoint_CalcHourglassControlForElems_npm),
                           "CalcElemVolumeDerivative", &(____chimes_does_checkpoint_CalcElemVolumeDerivative_npm),
                           "CalcPressureForElems", &(____chimes_does_checkpoint_CalcPressureForElems_npm),
                           "AllocateNodeElemIndexes", &(____chimes_does_checkpoint_AllocateNodeElemIndexes_npm),
                           "CalcAccelerationForNodes", &(____chimes_does_checkpoint_CalcAccelerationForNodes_npm),
                           "ApplyAccelerationBoundaryConditionsForNodes", &(____chimes_does_checkpoint_ApplyAccelerationBoundaryConditionsForNodes_npm),
                           "CalcHydroConstraintForElems", &(____chimes_does_checkpoint_CalcHydroConstraintForElems_npm),
                           "EvalEOSForElems", &(____chimes_does_checkpoint_EvalEOSForElems_npm),
                           "FABS", &(____chimes_does_checkpoint_FABS_npm),
                           "CalcLagrangeElements", &(____chimes_does_checkpoint_CalcLagrangeElements_npm),
                           "UpdateVolumesForElems", &(____chimes_does_checkpoint_UpdateVolumesForElems_npm),
                           "CalcTimeConstraintsForElems", &(____chimes_does_checkpoint_CalcTimeConstraintsForElems_npm),
                           "VoluDer", &(____chimes_does_checkpoint_VoluDer_npm),
                           "get_num_threads", &(____chimes_does_checkpoint_get_num_threads_npm),
                           "CalcElemShapeFunctionDerivatives", &(____chimes_does_checkpoint_CalcElemShapeFunctionDerivatives_npm),
                           "CalcMonotonicQGradientsForElems", &(____chimes_does_checkpoint_CalcMonotonicQGradientsForElems_npm),
                           "CalcMonotonicQRegionForElems", &(____chimes_does_checkpoint_CalcMonotonicQRegionForElems_npm),
                           "TimeIncrement", &(____chimes_does_checkpoint_TimeIncrement_npm),
                           "SumElemStressesToNodeForces", &(____chimes_does_checkpoint_SumElemStressesToNodeForces_npm),
                           "CBRT", &(____chimes_does_checkpoint_CBRT_npm),
                           "LagrangeElements", &(____chimes_does_checkpoint_LagrangeElements_npm),
                           "AllocateNodesets", &(____chimes_does_checkpoint_AllocateNodesets_npm),
                           "CalcCourantConstraintForElems", &(____chimes_does_checkpoint_CalcCourantConstraintForElems_npm),
                           "AreaFace", &(____chimes_does_checkpoint_AreaFace_npm),
                           "CalcElemVolume", &(____chimes_does_checkpoint_CalcElemVolume_npm),
                           "CalcElemVelocityGrandient", &(____chimes_does_checkpoint_CalcElemVelocityGrandient_npm),
                           "CollectDomainNodesToElemNodes", &(____chimes_does_checkpoint_CollectDomainNodesToElemNodes_npm),
                           "CalcMonotonicQForElems", &(____chimes_does_checkpoint_CalcMonotonicQForElems_npm),
                           "AllocateElemPersistent", &(____chimes_does_checkpoint_AllocateElemPersistent_npm),
                           "CalcPositionForNodes", &(____chimes_does_checkpoint_CalcPositionForNodes_npm),
                           "CalcForceForNodes", &(____chimes_does_checkpoint_CalcForceForNodes_npm),
                           "SumElemFaceNormal", &(____chimes_does_checkpoint_SumElemFaceNormal_npm),
                           "ApplyMaterialPropertiesForElems", &(____chimes_does_checkpoint_ApplyMaterialPropertiesForElems_npm),
                           "CalcVelocityForNodes", &(____chimes_does_checkpoint_CalcVelocityForNodes_npm),
                           "AllocateNodalPersistent", &(____chimes_does_checkpoint_AllocateNodalPersistent_npm),
                           "InitStressTermsForElems", &(____chimes_does_checkpoint_InitStressTermsForElems_npm),
                           "CalcElemNodeNormals", &(____chimes_does_checkpoint_CalcElemNodeNormals_npm),
                           "SQRT", &(____chimes_does_checkpoint_SQRT_npm),
                           "CalcSoundSpeedForElems", &(____chimes_does_checkpoint_CalcSoundSpeedForElems_npm),
                           "CalcElemCharacteristicLength", &(____chimes_does_checkpoint_CalcElemCharacteristicLength_npm),
                           "CalcEnergyForElems", &(____chimes_does_checkpoint_CalcEnergyForElems_npm),
                           "CalcQForElems", &(____chimes_does_checkpoint_CalcQForElems_npm),
                           "LagrangeNodal", &(____chimes_does_checkpoint_LagrangeNodal_npm),
                           "CalcFBHourglassForceForElems", &(____chimes_does_checkpoint_CalcFBHourglassForceForElems_npm),
                           "CalcElemFBHourglassForce", &(____chimes_does_checkpoint_CalcElemFBHourglassForce_npm),
                             (2224956529753665115UL + 8501UL), (2224956529753665115UL + 8539UL),
                             (2224956529753665115UL + 3498UL), (2224956529753665115UL + 4154UL),
                             (2224956529753665115UL + 3499UL), (2224956529753665115UL + 4155UL),
                             (2224956529753665115UL + 3496UL), (2224956529753665115UL + 4152UL),
                             (2224956529753665115UL + 3497UL), (2224956529753665115UL + 4153UL),
                             (2224956529753665115UL + 3495UL), (2224956529753665115UL + 4151UL),
                             (2224956529753665115UL + 14222UL), (2224956529753665115UL + 14454UL),
                             (2224956529753665115UL + 14223UL), (2224956529753665115UL + 14455UL),
                             (2224956529753665115UL + 9894UL), (2224956529753665115UL + 2514UL),
                             (2224956529753665115UL + 11288UL), (2224956529753665115UL + 13178UL),
                             (2224956529753665115UL + 14228UL), (2224956529753665115UL + 14460UL),
                             (2224956529753665115UL + 347UL), (2224956529753665115UL + 167UL),
                             (2224956529753665115UL + 8497UL), (2224956529753665115UL + 8806UL),
                             (2224956529753665115UL + 8496UL), (2224956529753665115UL + 8805UL),
                             (2224956529753665115UL + 14913UL), (2224956529753665115UL + 768UL),
                             (2224956529753665115UL + 8499UL), (2224956529753665115UL + 8808UL),
                             (2224956529753665115UL + 8498UL), (2224956529753665115UL + 8807UL),
                             (2224956529753665115UL + 349UL), (2224956529753665115UL + 426UL),
                             (2224956529753665115UL + 2012UL), (2224956529753665115UL + 2041UL),
                             (2224956529753665115UL + 8439UL), (2224956529753665115UL + 8492UL),
                             (2224956529753665115UL + 11286UL), (2224956529753665115UL + 13176UL),
                             (2224956529753665115UL + 13442UL), (2224956529753665115UL + 13854UL),
                             (2224956529753665115UL + 11284UL), (2224956529753665115UL + 13174UL),
                             (2224956529753665115UL + 6312UL), (2224956529753665115UL + 6593UL),
                             (2224956529753665115UL + 6313UL), (2224956529753665115UL + 6594UL),
                             (2224956529753665115UL + 2798UL), (2224956529753665115UL + 3027UL),
                             (2224956529753665115UL + 6311UL), (2224956529753665115UL + 6592UL),
                             (2224956529753665115UL + 2792UL), (2224956529753665115UL + 2985UL),
                             (2224956529753665115UL + 2793UL), (2224956529753665115UL + 2992UL),
                             (2224956529753665115UL + 2790UL), (2224956529753665115UL + 2971UL),
                             (2224956529753665115UL + 2791UL), (2224956529753665115UL + 2978UL),
                             (2224956529753665115UL + 2796UL), (2224956529753665115UL + 3013UL),
                             (2224956529753665115UL + 2797UL), (2224956529753665115UL + 3020UL),
                             (2224956529753665115UL + 2794UL), (2224956529753665115UL + 2999UL),
                             (2224956529753665115UL + 2795UL), (2224956529753665115UL + 3006UL),
                             (2224956529753665115UL + 13856UL), (2224956529753665115UL + 14214UL),
                             (2224956529753665115UL + 6596UL), (2224956529753665115UL + 7257UL),
                             (2224956529753665115UL + 6597UL), (2224956529753665115UL + 7258UL),
                             (2224956529753665115UL + 6598UL), (2224956529753665115UL + 7259UL),
                             (2224956529753665115UL + 6599UL), (2224956529753665115UL + 7260UL),
                             (2224956529753665115UL + 9091UL), (2224956529753665115UL + 9344UL),
                             (2224956529753665115UL + 2776UL), (2224956529753665115UL + 3492UL),
                             (2224956529753665115UL + 9093UL), (2224956529753665115UL + 9346UL),
                             (2224956529753665115UL + 8440UL), (2224956529753665115UL + 8493UL),
                             (2224956529753665115UL + 8441UL), (2224956529753665115UL + 8494UL),
                             (2224956529753665115UL + 8321UL), (2224956529753665115UL + 8375UL),
                             (2224956529753665115UL + 8320UL), (2224956529753665115UL + 8368UL),
                             (2224956529753665115UL + 8322UL), (2224956529753665115UL + 8382UL),
                             (2224956529753665115UL + 4283UL), (2224956529753665115UL + 4422UL),
                             (2224956529753665115UL + 2787UL), (2224956529753665115UL + 2856UL),
                             (2224956529753665115UL + 4286UL), (2224956529753665115UL + 4425UL),
                             (2224956529753665115UL + 4287UL), (2224956529753665115UL + 4426UL),
                             (2224956529753665115UL + 4284UL), (2224956529753665115UL + 4423UL),
                             (2224956529753665115UL + 4285UL), (2224956529753665115UL + 4424UL),
                             (2224956529753665115UL + 4288UL), (2224956529753665115UL + 4427UL),
                             (2224956529753665115UL + 2789UL), (2224956529753665115UL + 2964UL),
                             (2224956529753665115UL + 2788UL), (2224956529753665115UL + 2957UL),
                             (2224956529753665115UL + 11289UL), (2224956529753665115UL + 13179UL),
                             (2224956529753665115UL + 428UL), (2224956529753665115UL + 456UL),
                             (2224956529753665115UL + 2799UL), (2224956529753665115UL + 3034UL),
                             (2224956529753665115UL + 14912UL), (2224956529753665115UL + 2514UL),
                             (2224956529753665115UL + 11281UL), (2224956529753665115UL + 13171UL),
                             (2224956529753665115UL + 11280UL), (2224956529753665115UL + 13170UL),
                             (2224956529753665115UL + 11283UL), (2224956529753665115UL + 13173UL),
                             (2224956529753665115UL + 11282UL), (2224956529753665115UL + 13172UL),
                             (2224956529753665115UL + 11285UL), (2224956529753665115UL + 13175UL),
                             (2224956529753665115UL + 8809UL), (2224956529753665115UL + 9089UL),
                             (2224956529753665115UL + 11287UL), (2224956529753665115UL + 13177UL),
                             (2224956529753665115UL + 426UL), (2224956529753665115UL + 357UL),
                             (2224956529753665115UL + 14232UL), (2224956529753665115UL + 14464UL),
                             (2224956529753665115UL + 14231UL), (2224956529753665115UL + 14463UL),
                             (2224956529753665115UL + 14230UL), (2224956529753665115UL + 14462UL),
                             (2224956529753665115UL + 13862UL), (2224956529753665115UL + 14220UL),
                             (2224956529753665115UL + 13861UL), (2224956529753665115UL + 14219UL),
                             (2224956529753665115UL + 13860UL), (2224956529753665115UL + 14218UL),
                             (2224956529753665115UL + 13438UL), (2224956529753665115UL + 13850UL),
                             (2224956529753665115UL + 13439UL), (2224956529753665115UL + 13851UL),
                             (2224956529753665115UL + 13204UL), (2224956529753665115UL + 13435UL),
                             (2224956529753665115UL + 784UL), (2224956529753665115UL + 1762UL),
                             (2224956529753665115UL + 7276UL), (2224956529753665115UL + 7796UL),
                             (2224956529753665115UL + 7277UL), (2224956529753665115UL + 7796UL),
                             (2224956529753665115UL + 7275UL), (2224956529753665115UL + 7796UL),
                             (2224956529753665115UL + 3500UL), (2224956529753665115UL + 4156UL),
                             (2224956529753665115UL + 3501UL), (2224956529753665115UL + 4157UL),
                             (2224956529753665115UL + 3502UL), (2224956529753665115UL + 4158UL),
                             (2224956529753665115UL + 3503UL), (2224956529753665115UL + 4159UL),
                             (2224956529753665115UL + 3504UL), (2224956529753665115UL + 4160UL),
                             (2224956529753665115UL + 3505UL), (2224956529753665115UL + 4161UL),
                             (2224956529753665115UL + 3506UL), (2224956529753665115UL + 4162UL),
                             (2224956529753665115UL + 3507UL), (2224956529753665115UL + 4163UL),
                             (2224956529753665115UL + 8817UL), (2224956529753665115UL + 8910UL),
                             (2224956529753665115UL + 7265UL), (2224956529753665115UL + 7796UL),
                             (2224956529753665115UL + 8815UL), (2224956529753665115UL + 8896UL),
                             (2224956529753665115UL + 8814UL), (2224956529753665115UL + 8889UL),
                             (2224956529753665115UL + 8813UL), (2224956529753665115UL + 8844UL),
                             (2224956529753665115UL + 11292UL), (2224956529753665115UL + 13182UL),
                             (2224956529753665115UL + 11293UL), (2224956529753665115UL + 13183UL),
                             (2224956529753665115UL + 11290UL), (2224956529753665115UL + 13180UL),
                             (2224956529753665115UL + 11294UL), (2224956529753665115UL + 13184UL),
                             (2224956529753665115UL + 8818UL), (2224956529753665115UL + 8917UL),
                             (2224956529753665115UL + 458UL), (2224956529753665115UL + 778UL),
                             (2224956529753665115UL + 14221UL), (2224956529753665115UL + 14453UL),
                             (2224956529753665115UL + 8503UL), (2224956529753665115UL + 8570UL),
                             (2224956529753665115UL + 8502UL), (2224956529753665115UL + 8563UL),
                             (2224956529753665115UL + 14224UL), (2224956529753665115UL + 14456UL),
                             (2224956529753665115UL + 14225UL), (2224956529753665115UL + 14457UL),
                             (2224956529753665115UL + 14226UL), (2224956529753665115UL + 14458UL),
                             (2224956529753665115UL + 14227UL), (2224956529753665115UL + 14459UL),
                             (2224956529753665115UL + 8509UL), (2224956529753665115UL + 2514UL),
                             (2224956529753665115UL + 14229UL), (2224956529753665115UL + 14461UL),
                             (2224956529753665115UL + 456UL), (2224956529753665115UL + 436UL),
                             (2224956529753665115UL + 6600UL), (2224956529753665115UL + 7261UL),
                             (2224956529753665115UL + 13443UL), (2224956529753665115UL + 13855UL),
                             (2224956529753665115UL + 9878UL), (2224956529753665115UL + 9979UL),
                             (2224956529753665115UL + 9876UL), (2224956529753665115UL + 9948UL),
                             (2224956529753665115UL + 9877UL), (2224956529753665115UL + 9972UL),
                             (2224956529753665115UL + 2800UL), (2224956529753665115UL + 3041UL),
                             (2224956529753665115UL + 3514UL), (2224956529753665115UL + 4170UL),
                             (2224956529753665115UL + 9872UL), (2224956529753665115UL + 9972UL),
                             (2224956529753665115UL + 9873UL), (2224956529753665115UL + 9979UL),
                             (2224956529753665115UL + 9871UL), (2224956529753665115UL + 9948UL),
                             (2224956529753665115UL + 13206UL), (2224956529753665115UL + 13437UL),
                             (2224956529753665115UL + 13205UL), (2224956529753665115UL + 13436UL),
                             (2224956529753665115UL + 3518UL), (2224956529753665115UL + 3580UL),
                             (2224956529753665115UL + 3513UL), (2224956529753665115UL + 4169UL),
                             (2224956529753665115UL + 7264UL), (2224956529753665115UL + 7795UL),
                             (2224956529753665115UL + 7267UL), (2224956529753665115UL + 7798UL),
                             (2224956529753665115UL + 13441UL), (2224956529753665115UL + 13853UL),
                             (2224956529753665115UL + 13440UL), (2224956529753665115UL + 13852UL),
                             (2224956529753665115UL + 7263UL), (2224956529753665115UL + 7794UL),
                             (2224956529753665115UL + 7262UL), (2224956529753665115UL + 7793UL),
                             (2224956529753665115UL + 9094UL), (2224956529753665115UL + 9347UL),
                             (2224956529753665115UL + 8826UL), (2224956529753665115UL + 2514UL),
                             (2224956529753665115UL + 9349UL), (2224956529753665115UL + 9856UL),
                             (2224956529753665115UL + 469UL), (2224956529753665115UL + 541UL),
                             (2224956529753665115UL + 464UL), (2224956529753665115UL + 541UL),
                             (2224956529753665115UL + 4441UL), (2224956529753665115UL + 2514UL),
                             (2224956529753665115UL + 9092UL), (2224956529753665115UL + 9345UL),
                             (2224956529753665115UL + 9861UL), (2224956529753665115UL + 11261UL),
                             (2224956529753665115UL + 9863UL), (2224956529753665115UL + 11263UL),
                             (2224956529753665115UL + 9862UL), (2224956529753665115UL + 11262UL),
                             (2224956529753665115UL + 9865UL), (2224956529753665115UL + 11265UL),
                             (2224956529753665115UL + 9864UL), (2224956529753665115UL + 11264UL),
                             (2224956529753665115UL + 9867UL), (2224956529753665115UL + 11267UL),
                             (2224956529753665115UL + 9866UL), (2224956529753665115UL + 11266UL),
                             (2224956529753665115UL + 4174UL), (2224956529753665115UL + 4275UL),
                             (2224956529753665115UL + 4176UL), (2224956529753665115UL + 4277UL),
                             (2224956529753665115UL + 4177UL), (2224956529753665115UL + 4278UL),
                             (2224956529753665115UL + 4178UL), (2224956529753665115UL + 4279UL),
                             (2224956529753665115UL + 4179UL), (2224956529753665115UL + 4280UL),
                             (2224956529753665115UL + 6051UL), (2224956529753665115UL + 2514UL),
                             (2224956529753665115UL + 9348UL), (2224956529753665115UL + 9855UL),
                             (2224956529753665115UL + 158UL), (2224956529753665115UL + 347UL),
                             (2224956529753665115UL + 8816UL), (2224956529753665115UL + 8903UL),
                             (2224956529753665115UL + 2222UL), (2224956529753665115UL + 2245UL),
                             (2224956529753665115UL + 2538UL), (2224956529753665115UL + 2593UL),
                             (2224956529753665115UL + 1UL), (2224956529753665115UL + 148UL),
                             (2224956529753665115UL + 9353UL), (2224956529753665115UL + 9860UL),
                             (2224956529753665115UL + 9352UL), (2224956529753665115UL + 9859UL),
                             (2224956529753665115UL + 9351UL), (2224956529753665115UL + 9858UL),
                             (2224956529753665115UL + 9350UL), (2224956529753665115UL + 9857UL),
                             (2224956529753665115UL + 778UL), (2224956529753665115UL + 541UL),
                             (2224956529753665115UL + 148UL), (2224956529753665115UL + 9UL),
                             (2224956529753665115UL + 8319UL), (2224956529753665115UL + 8390UL),
                             (2224956529753665115UL + 1766UL), (2224956529753665115UL + 1853UL),
                             (2224956529753665115UL + 1768UL), (2224956529753665115UL + 1855UL),
                             (2224956529753665115UL + 1762UL), (2224956529753665115UL + 848UL),
                             (2224956529753665115UL + 801UL), (2224956529753665115UL + 2514UL),
                             (2224956529753665115UL + 807UL), (2224956529753665115UL + 2514UL),
                             (2224956529753665115UL + 1767UL), (2224956529753665115UL + 1854UL),
                     "Domain", 5248UL, 85, "double*", (int)__builtin_offsetof (struct Domain, x), "double*", (int)__builtin_offsetof (struct Domain, y), "double*", (int)__builtin_offsetof (struct Domain, z), "double*", (int)__builtin_offsetof (struct Domain, xd), "double*", (int)__builtin_offsetof (struct Domain, yd), "double*", (int)__builtin_offsetof (struct Domain, zd), "double*", (int)__builtin_offsetof (struct Domain, xdd), "double*", (int)__builtin_offsetof (struct Domain, ydd), "double*", (int)__builtin_offsetof (struct Domain, zdd), "double*", (int)__builtin_offsetof (struct Domain, fx), "double*", (int)__builtin_offsetof (struct Domain, fy), "double*", (int)__builtin_offsetof (struct Domain, fz), "double*", (int)__builtin_offsetof (struct Domain, nodalMass), "int*", (int)__builtin_offsetof (struct Domain, symmX), "int*", (int)__builtin_offsetof (struct Domain, symmY), "int*", (int)__builtin_offsetof (struct Domain, symmZ), "int*", (int)__builtin_offsetof (struct Domain, nodeElemCount), "int*", (int)__builtin_offsetof (struct Domain, nodeElemStart), "int*", (int)__builtin_offsetof (struct Domain, nodeElemCornerList), "int", (int)__builtin_offsetof (struct Domain, cornerListSize), "int*", (int)__builtin_offsetof (struct Domain, matElemlist), "int*", (int)__builtin_offsetof (struct Domain, nodelist), "int*", (int)__builtin_offsetof (struct Domain, lxim), "int*", (int)__builtin_offsetof (struct Domain, lxip), "int*", (int)__builtin_offsetof (struct Domain, letam), "int*", (int)__builtin_offsetof (struct Domain, letap), "int*", (int)__builtin_offsetof (struct Domain, lzetam), "int*", (int)__builtin_offsetof (struct Domain, lzetap), "int*", (int)__builtin_offsetof (struct Domain, elemBC), "double*", (int)__builtin_offsetof (struct Domain, dxx), "double*", (int)__builtin_offsetof (struct Domain, dyy), "double*", (int)__builtin_offsetof (struct Domain, dzz), "double*", (int)__builtin_offsetof (struct Domain, delv_xi), "double*", (int)__builtin_offsetof (struct Domain, delv_eta), "double*", (int)__builtin_offsetof (struct Domain, delv_zeta), "double*", (int)__builtin_offsetof (struct Domain, delx_xi), "double*", (int)__builtin_offsetof (struct Domain, delx_eta), "double*", (int)__builtin_offsetof (struct Domain, delx_zeta), "double*", (int)__builtin_offsetof (struct Domain, e), "double*", (int)__builtin_offsetof (struct Domain, p), "double*", (int)__builtin_offsetof (struct Domain, q), "double*", (int)__builtin_offsetof (struct Domain, ql), "double*", (int)__builtin_offsetof (struct Domain, qq), "double*", (int)__builtin_offsetof (struct Domain, v), "double*", (int)__builtin_offsetof (struct Domain, volo), "double*", (int)__builtin_offsetof (struct Domain, vnew), "double*", (int)__builtin_offsetof (struct Domain, delv), "double*", (int)__builtin_offsetof (struct Domain, vdov), "double*", (int)__builtin_offsetof (struct Domain, arealg), "double*", (int)__builtin_offsetof (struct Domain, ss), "double*", (int)__builtin_offsetof (struct Domain, elemMass), "double", (int)__builtin_offsetof (struct Domain, dtfixed), "double", (int)__builtin_offsetof (struct Domain, time), "double", (int)__builtin_offsetof (struct Domain, deltatime), "double", (int)__builtin_offsetof (struct Domain, deltatimemultlb), "double", (int)__builtin_offsetof (struct Domain, deltatimemultub), "double", (int)__builtin_offsetof (struct Domain, stoptime), "double", (int)__builtin_offsetof (struct Domain, u_cut), "double", (int)__builtin_offsetof (struct Domain, hgcoef), "double", (int)__builtin_offsetof (struct Domain, qstop), "double", (int)__builtin_offsetof (struct Domain, monoq_max_slope), "double", (int)__builtin_offsetof (struct Domain, monoq_limiter_mult), "double", (int)__builtin_offsetof (struct Domain, e_cut), "double", (int)__builtin_offsetof (struct Domain, p_cut), "double", (int)__builtin_offsetof (struct Domain, ss4o3), "double", (int)__builtin_offsetof (struct Domain, q_cut), "double", (int)__builtin_offsetof (struct Domain, v_cut), "double", (int)__builtin_offsetof (struct Domain, qlc_monoq), "double", (int)__builtin_offsetof (struct Domain, qqc_monoq), "double", (int)__builtin_offsetof (struct Domain, qqc), "double", (int)__builtin_offsetof (struct Domain, eosvmax), "double", (int)__builtin_offsetof (struct Domain, eosvmin), "double", (int)__builtin_offsetof (struct Domain, pmin), "double", (int)__builtin_offsetof (struct Domain, emin), "double", (int)__builtin_offsetof (struct Domain, dvovmax), "double", (int)__builtin_offsetof (struct Domain, refdens), "double", (int)__builtin_offsetof (struct Domain, dtcourant), "double", (int)__builtin_offsetof (struct Domain, dthydro), "double", (int)__builtin_offsetof (struct Domain, dtmax), "int", (int)__builtin_offsetof (struct Domain, cycle), "int", (int)__builtin_offsetof (struct Domain, sizeX), "int", (int)__builtin_offsetof (struct Domain, sizeY), "int", (int)__builtin_offsetof (struct Domain, sizeZ), "int", (int)__builtin_offsetof (struct Domain, numElem), "int", (int)__builtin_offsetof (struct Domain, numNode),
                     "timeval", 128UL, 2, "long int", (int)__builtin_offsetof (struct timeval, tv_sec), "long int", (int)__builtin_offsetof (struct timeval, tv_usec),
                             "CalcVolumeForceForElems", "_ZL23CalcVolumeForceForElemsv", 0, 3, "InitStressTermsForElems", "IntegrateStressForElems", "CalcHourglassControlForElems",
                             "AllocateElemTemporary", "_Z21AllocateElemTemporaryP6Domainm", 0, 0,
                             "IntegrateStressForElems", "_ZL23IntegrateStressForElemsiPdS_S_S_", 0, 3, "CalcElemShapeFunctionDerivatives", "CalcElemNodeNormals", "SumElemStressesToNodeForces",
                             "CalcTimeConstraintsForElems", "_ZL27CalcTimeConstraintsForElemsv", 0, 2, "CalcCourantConstraintForElems", "CalcHydroConstraintForElems",
                             "CalcKinematicsForElems", "_ZL22CalcKinematicsForElemsid", 0, 4, "CalcElemVolume", "CalcElemCharacteristicLength", "CalcElemShapeFunctionDerivatives", "CalcElemVelocityGrandient",
                             "CalcHourglassControlForElems", "_ZL28CalcHourglassControlForElemsPdd", 0, 3, "CollectDomainNodesToElemNodes", "CalcElemVolumeDerivative", "CalcFBHourglassForceForElems",
                             "CalcElemVolumeDerivative", "_ZL24CalcElemVolumeDerivativePdS_S_PKdS1_S1_", 0, 8, "VoluDer", "VoluDer", "VoluDer", "VoluDer", "VoluDer", "VoluDer", "VoluDer", "VoluDer",
                             "CalcPressureForElems", "_ZL20CalcPressureForElemsPdS_S_S_S_S_dddi", 0, 1, "FABS",
                             "AllocateNodeElemIndexes", "_Z23AllocateNodeElemIndexesP6Domain", 0, 0,
                             "CalcAccelerationForNodes", "_ZL24CalcAccelerationForNodesv", 0, 0,
                             "CalcElemVolumeScalar", "_ZL20CalcElemVolumeScalardddddddddddddddddddddddd", 0, 0,
                             "EvalEOSForElems", "_ZL15EvalEOSForElemsPdi", 0, 2, "CalcEnergyForElems", "CalcSoundSpeedForElems",
                             "FABS", "_Z4FABSd", 0, 0,
                             "CalcLagrangeElements", "_ZL20CalcLagrangeElementsd", 0, 1, "CalcKinematicsForElems",
                             "VoluDer", "_ZL7VoluDerddddddddddddddddddPdS_S_", 0, 0,
                             "CalcElemFBHourglassForce", "_ZL24CalcElemFBHourglassForcePdS_S_S_S_S_S_S_S_S_S_dS_S_S_", 0, 0,
                             "UpdateVolumesForElems", "_ZL21UpdateVolumesForElemsv", 0, 1, "FABS",
                             "get_num_threads", "_ZL15get_num_threadsv", 0, 0,
                             "CalcElemShapeFunctionDerivatives", "_ZL32CalcElemShapeFunctionDerivativesPKdS0_S0_PA8_dPd", 0, 0,
                             "CBRT", "_Z4CBRTd", 0, 0,
                             "main", "main", 0, 10, "AllocateElemPersistent", "AllocateElemTemporary", "AllocateNodalPersistent", "AllocateNodesets", "AllocateNodeElemIndexes", "CalcElemVolume", "TimeIncrement", "LagrangeLeapFrog", "checkpoint", "FABS",
                             "CalcMonotonicQRegionForElems", "_ZL28CalcMonotonicQRegionForElemsdddddi", 0, 0,
                             "InitStressTermsForElems", "_ZL23InitStressTermsForElemsiPdS_S_", 0, 0,
                             "TimeIncrement", "_ZL13TimeIncrementv", 0, 0,
                             "SumElemStressesToNodeForces", "_ZL27SumElemStressesToNodeForcesPA8_KddddPdS2_S2_", 0, 0,
                             "CalcMonotonicQGradientsForElems", "_ZL31CalcMonotonicQGradientsForElemsv", 0, 3, "SQRT", "SQRT", "SQRT",
                             "LagrangeElements", "_ZL16LagrangeElementsv", 0, 4, "CalcLagrangeElements", "CalcQForElems", "ApplyMaterialPropertiesForElems", "UpdateVolumesForElems",
                             "AllocateNodesets", "_Z16AllocateNodesetsP6Domainm", 0, 0,
                             "CalcCourantConstraintForElems", "_ZL29CalcCourantConstraintForElemsv", 0, 2, "get_num_threads", "SQRT",
                             "AreaFace", "_ZL8AreaFacedddddddddddd", 0, 0,
                             "CalcElemVolume", "_ZL14CalcElemVolumePKdS0_S0_", 0, 1, "CalcElemVolumeScalar",
                             "CalcPositionForNodes", "_ZL20CalcPositionForNodesd", 0, 0,
                             "CalcElemVelocityGrandient", "_ZL25CalcElemVelocityGrandientPKdS0_S0_PA8_S_dPd", 0, 0,
                             "CollectDomainNodesToElemNodes", "_ZL29CollectDomainNodesToElemNodesPKiPdS1_S1_", 0, 0,
                             "CalcMonotonicQForElems", "_ZL22CalcMonotonicQForElemsv", 0, 1, "CalcMonotonicQRegionForElems",
                             "AllocateElemPersistent", "_Z22AllocateElemPersistentP6Domainm", 0, 0,
                             "CalcHydroConstraintForElems", "_ZL27CalcHydroConstraintForElemsv", 0, 2, "get_num_threads", "FABS",
                             "CalcForceForNodes", "_ZL17CalcForceForNodesv", 0, 1, "CalcVolumeForceForElems",
                             "SumElemFaceNormal", "_ZL17SumElemFaceNormalPdS_S_S_S_S_S_S_S_S_S_S_dddddddddddd", 0, 0,
                             "ApplyMaterialPropertiesForElems", "_ZL31ApplyMaterialPropertiesForElemsv", 0, 1, "EvalEOSForElems",
                             "CalcVelocityForNodes", "_ZL20CalcVelocityForNodesdd", 0, 3, "FABS", "FABS", "FABS",
                             "AllocateNodalPersistent", "_Z23AllocateNodalPersistentP6Domainm", 0, 0,
                             "LagrangeLeapFrog", "_ZL16LagrangeLeapFrogv", 0, 3, "LagrangeNodal", "LagrangeElements", "CalcTimeConstraintsForElems",
                             "CalcElemNodeNormals", "_ZL19CalcElemNodeNormalsPdS_S_PKdS1_S1_", 0, 6, "SumElemFaceNormal", "SumElemFaceNormal", "SumElemFaceNormal", "SumElemFaceNormal", "SumElemFaceNormal", "SumElemFaceNormal",
                             "SQRT", "_Z4SQRTd", 0, 0,
                             "CalcSoundSpeedForElems", "_ZL22CalcSoundSpeedForElemsPddS_S_S_S_di", 0, 1, "SQRT",
                             "CalcElemCharacteristicLength", "_ZL28CalcElemCharacteristicLengthPKdS0_S0_d", 0, 7, "AreaFace", "AreaFace", "AreaFace", "AreaFace", "AreaFace", "AreaFace", "SQRT",
                             "CalcEnergyForElems", "_ZL18CalcEnergyForElemsPdS_S_S_S_S_S_S_S_S_S_S_S_dddddS_S_ddi", 0, 9, "CalcPressureForElems", "SQRT", "FABS", "CalcPressureForElems", "SQRT", "FABS", "CalcPressureForElems", "SQRT", "FABS",
                             "CalcQForElems", "_ZL13CalcQForElemsv", 0, 2, "CalcMonotonicQGradientsForElems", "CalcMonotonicQForElems",
                             "LagrangeNodal", "_ZL13LagrangeNodalv", 0, 5, "CalcForceForNodes", "CalcAccelerationForNodes", "ApplyAccelerationBoundaryConditionsForNodes", "CalcVelocityForNodes", "CalcPositionForNodes",
                             "CalcFBHourglassForceForElems", "_ZL28CalcFBHourglassForceForElemsPdS_S_S_S_S_S_d", 0, 2, "CBRT", "CalcElemFBHourglassForce",
                             "ApplyAccelerationBoundaryConditionsForNodes", "_ZL43ApplyAccelerationBoundaryConditionsForNodesv", 0, 0,
                        "main|x_local|0", 1, "main",
                        "CalcKinematicsForElems|B|0", 1, "CalcKinematicsForElems",
                        "CalcKinematicsForElems|x_local|0", 1, "CalcKinematicsForElems",
                        "IntegrateStressForElems|B|0", 1, "IntegrateStressForElems",
                        "CalcHourglassControlForElems|x1|0", 1, "CalcHourglassControlForElems",
                        "CalcFBHourglassForceForElems|hgfx|0", 1, "CalcFBHourglassForceForElems",
        "SumElemFaceNormal", 0UL, (int)24, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "SumElemFaceNormal", 0UL, (int)24, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "SumElemFaceNormal", 0UL, (int)24, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "SumElemFaceNormal", 0UL, (int)24, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "SumElemFaceNormal", 0UL, (int)24, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "SumElemFaceNormal", 0UL, (int)24, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 2224956529753678965UL, 2224956529753678966UL, 2224956529753678967UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "CalcElemShapeFunctionDerivatives", 0UL, (int)5, 2224956529753673621UL, 2224956529753673622UL, 2224956529753673623UL, 2224956529753673620UL, 2224956529753673923UL,
        "CalcElemNodeNormals", 0UL, (int)6, 2224956529753673620UL, 2224956529753673620UL, 2224956529753673620UL, 2224956529753673621UL, 2224956529753673622UL, 2224956529753673623UL,
        "SumElemStressesToNodeForces", 0UL, (int)7, 2224956529753673620UL, 0UL, 0UL, 0UL, 2224956529753673654UL, 2224956529753673678UL, 2224956529753673685UL,
        "VoluDer", 0UL, (int)21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 2224956529753674970UL, 2224956529753674971UL, 2224956529753674972UL,
        "VoluDer", 0UL, (int)21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 2224956529753674970UL, 2224956529753674971UL, 2224956529753674972UL,
        "VoluDer", 0UL, (int)21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 2224956529753674970UL, 2224956529753674971UL, 2224956529753674972UL,
        "VoluDer", 0UL, (int)21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 2224956529753674970UL, 2224956529753674971UL, 2224956529753674972UL,
        "VoluDer", 0UL, (int)21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 2224956529753674970UL, 2224956529753674971UL, 2224956529753674972UL,
        "VoluDer", 0UL, (int)21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 2224956529753674970UL, 2224956529753674971UL, 2224956529753674972UL,
        "VoluDer", 0UL, (int)21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 2224956529753674970UL, 2224956529753674971UL, 2224956529753674972UL,
        "VoluDer", 0UL, (int)21, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 2224956529753674970UL, 2224956529753674971UL, 2224956529753674972UL,
        "CBRT", 0UL, (int)1, 0UL,
        "CalcElemFBHourglassForce", 0UL, (int)15, 2224956529753675006UL, 2224956529753675007UL, 2224956529753675008UL, 2224956529753674998UL, 2224956529753674999UL, 2224956529753675000UL, 2224956529753675001UL, 2224956529753675002UL, 2224956529753675003UL, 2224956529753675004UL, 2224956529753675005UL, 0UL, 2224956529753674994UL, 2224956529753674995UL, 2224956529753674996UL,
        "CollectDomainNodesToElemNodes", 0UL, (int)4, 2224956529753667629UL, 2224956529753673935UL, 2224956529753673936UL, 2224956529753673937UL,
        "CalcElemVolumeDerivative", 0UL, (int)6, 2224956529753673938UL, 2224956529753673939UL, 2224956529753673940UL, 2224956529753673935UL, 2224956529753673936UL, 2224956529753673937UL,
        "CalcFBHourglassForceForElems", 0UL, (int)8, 2224956529753674204UL, 2224956529753674018UL, 2224956529753674025UL, 2224956529753674032UL, 2224956529753673959UL, 2224956529753674004UL, 2224956529753674011UL, 0UL,
        "InitStressTermsForElems", 0UL, (int)4, 0UL, 2224956529753673505UL, 2224956529753673483UL, 2224956529753673490UL,
        "IntegrateStressForElems", 0UL, (int)5, 0UL, 2224956529753673505UL, 2224956529753673483UL, 2224956529753673490UL, 2224956529753673497UL,
        "CalcHourglassControlForElems", 0UL, (int)2, 2224956529753673497UL, 0UL,
        "CalcVolumeForceForElems", 0UL, (int)0,
        "FABS", 0UL, (int)1, 0UL,
        "FABS", 0UL, (int)1, 0UL,
        "FABS", 0UL, (int)1, 0UL,
        "CalcForceForNodes", 0UL, (int)0,
        "CalcAccelerationForNodes", 0UL, (int)0,
        "ApplyAccelerationBoundaryConditionsForNodes", 0UL, (int)0,
        "CalcVelocityForNodes", 0UL, (int)2, 0UL, 0UL,
        "CalcPositionForNodes", 0UL, (int)1, 0UL,
        "CalcElemVolumeScalar", 0UL, (int)24, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "AreaFace", 0UL, (int)12, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "AreaFace", 0UL, (int)12, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "AreaFace", 0UL, (int)12, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "AreaFace", 0UL, (int)12, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "AreaFace", 0UL, (int)12, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "AreaFace", 0UL, (int)12, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "SQRT", 0UL, (int)1, 0UL,
        "CalcElemVolume", 0UL, (int)3, 2224956529753671157UL, 2224956529753671158UL, 2224956529753671159UL,
        "CalcElemCharacteristicLength", 0UL, (int)4, 2224956529753671157UL, 2224956529753671158UL, 2224956529753671159UL, 0UL,
        "CalcElemShapeFunctionDerivatives", 0UL, (int)5, 2224956529753671157UL, 2224956529753671158UL, 2224956529753671159UL, 2224956529753671155UL, 2224956529753671163UL,
        "CalcElemVelocityGrandient", 0UL, (int)6, 2224956529753671160UL, 2224956529753671161UL, 2224956529753671162UL, 2224956529753671155UL, 0UL, 2224956529753671156UL,
        "CalcKinematicsForElems", 0UL, (int)2, 0UL, 0UL,
        "SQRT", 0UL, (int)1, 0UL,
        "SQRT", 0UL, (int)1, 0UL,
        "SQRT", 0UL, (int)1, 0UL,
        "CalcMonotonicQRegionForElems", 0UL, (int)6, 0UL, 0UL, 0UL, 0UL, 0UL, 0UL,
        "CalcMonotonicQGradientsForElems", 0UL, (int)0,
        "CalcMonotonicQForElems", 0UL, (int)0,
        "FABS", 0UL, (int)1, 0UL,
        "CalcPressureForElems", 0UL, (int)10, 2224956529753668695UL, 2224956529753669269UL, 2224956529753669270UL, 2224956529753669267UL, 2224956529753669275UL, 2224956529753669276UL, 0UL, 0UL, 0UL, 0UL,
        "SQRT", 0UL, (int)1, 0UL,
        "FABS", 0UL, (int)1, 0UL,
        "CalcPressureForElems", 0UL, (int)10, 2224956529753669266UL, 2224956529753669269UL, 2224956529753669270UL, 2224956529753669267UL, 2224956529753669274UL, 2224956529753669276UL, 0UL, 0UL, 0UL, 0UL,
        "SQRT", 0UL, (int)1, 0UL,
        "FABS", 0UL, (int)1, 0UL,
        "CalcPressureForElems", 0UL, (int)10, 2224956529753669266UL, 2224956529753669269UL, 2224956529753669270UL, 2224956529753669267UL, 2224956529753669274UL, 2224956529753669276UL, 0UL, 0UL, 0UL, 0UL,
        "SQRT", 0UL, (int)1, 0UL,
        "FABS", 0UL, (int)1, 0UL,
        "SQRT", 0UL, (int)1, 0UL,
        "CalcEnergyForElems", 0UL, (int)23, 2224956529753668128UL, 2224956529753668135UL, 2224956529753668142UL, 2224956529753668149UL, 2224956529753668156UL, 2224956529753668079UL, 2224956529753667971UL, 2224956529753668086UL, 2224956529753668093UL, 2224956529753668100UL, 2224956529753668607UL, 2224956529753668121UL, 2224956529753668072UL, 0UL, 0UL, 0UL, 0UL, 0UL, 2224956529753668107UL, 2224956529753668114UL, 0UL, 0UL, 0UL,
        "CalcSoundSpeedForElems", 0UL, (int)8, 2224956529753668607UL, 0UL, 2224956529753668135UL, 2224956529753668128UL, 2224956529753668156UL, 2224956529753668149UL, 0UL, 0UL,
        "EvalEOSForElems", 0UL, (int)2, 2224956529753667708UL, 0UL,
        "FABS", 0UL, (int)1, 0UL,
        "CalcLagrangeElements", 0UL, (int)1, 0UL,
        "CalcQForElems", 0UL, (int)0,
        "ApplyMaterialPropertiesForElems", 0UL, (int)0,
        "UpdateVolumesForElems", 0UL, (int)0,
        "get_num_threads", 0UL, (int)0,
        "SQRT", 0UL, (int)1, 0UL,
        "get_num_threads", 0UL, (int)0,
        "FABS", 0UL, (int)1, 0UL,
        "CalcCourantConstraintForElems", 0UL, (int)0,
        "CalcHydroConstraintForElems", 0UL, (int)0,
        "LagrangeNodal", 0UL, (int)0,
        "LagrangeElements", 0UL, (int)0,
        "CalcTimeConstraintsForElems", 0UL, (int)0,
        "AllocateElemPersistent", 0UL, (int)2, 2224956529753680027UL, 0UL,
        "AllocateElemTemporary", 0UL, (int)2, 2224956529753680027UL, 0UL,
        "AllocateNodalPersistent", 0UL, (int)2, 2224956529753680027UL, 0UL,
        "AllocateNodesets", 0UL, (int)2, 2224956529753680027UL, 0UL,
        "AllocateNodeElemIndexes", 0UL, (int)1, 2224956529753680027UL,
        "CalcElemVolume", 0UL, (int)3, 2224956529753665919UL, 2224956529753665920UL, 2224956529753665921UL,
        "TimeIncrement", 0UL, (int)0,
        "LagrangeLeapFrog", 0UL, (int)0,
        "FABS", 0UL, (int)1, 0UL);
    register_global_var("global|domain", "%struct.Domain = type { double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, i32*, i32*, i32*, i32*, i32*, i32*, i32, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, i32, i32, i32, i32, i32, i32 }", (void *)(&domain), 656, 0, 1, 0UL, 50, (int)__builtin_offsetof (struct Domain, x), (int)__builtin_offsetof (struct Domain, y), (int)__builtin_offsetof (struct Domain, z), (int)__builtin_offsetof (struct Domain, xd), (int)__builtin_offsetof (struct Domain, yd), (int)__builtin_offsetof (struct Domain, zd), (int)__builtin_offsetof (struct Domain, xdd), (int)__builtin_offsetof (struct Domain, ydd), (int)__builtin_offsetof (struct Domain, zdd), (int)__builtin_offsetof (struct Domain, fx), (int)__builtin_offsetof (struct Domain, fy), (int)__builtin_offsetof (struct Domain, fz), (int)__builtin_offsetof (struct Domain, nodalMass), (int)__builtin_offsetof (struct Domain, symmX), (int)__builtin_offsetof (struct Domain, symmY), (int)__builtin_offsetof (struct Domain, symmZ), (int)__builtin_offsetof (struct Domain, nodeElemCount), (int)__builtin_offsetof (struct Domain, nodeElemStart), (int)__builtin_offsetof (struct Domain, nodeElemCornerList), (int)__builtin_offsetof (struct Domain, matElemlist), (int)__builtin_offsetof (struct Domain, nodelist), (int)__builtin_offsetof (struct Domain, lxim), (int)__builtin_offsetof (struct Domain, lxip), (int)__builtin_offsetof (struct Domain, letam), (int)__builtin_offsetof (struct Domain, letap), (int)__builtin_offsetof (struct Domain, lzetam), (int)__builtin_offsetof (struct Domain, lzetap), (int)__builtin_offsetof (struct Domain, elemBC), (int)__builtin_offsetof (struct Domain, dxx), (int)__builtin_offsetof (struct Domain, dyy), (int)__builtin_offsetof (struct Domain, dzz), (int)__builtin_offsetof (struct Domain, delv_xi), (int)__builtin_offsetof (struct Domain, delv_eta), (int)__builtin_offsetof (struct Domain, delv_zeta), (int)__builtin_offsetof (struct Domain, delx_xi), (int)__builtin_offsetof (struct Domain, delx_eta), (int)__builtin_offsetof (struct Domain, delx_zeta), (int)__builtin_offsetof (struct Domain, e), (int)__builtin_offsetof (struct Domain, p), (int)__builtin_offsetof (struct Domain, q), (int)__builtin_offsetof (struct Domain, ql), (int)__builtin_offsetof (struct Domain, qq), (int)__builtin_offsetof (struct Domain, v), (int)__builtin_offsetof (struct Domain, volo), (int)__builtin_offsetof (struct Domain, vnew), (int)__builtin_offsetof (struct Domain, delv), (int)__builtin_offsetof (struct Domain, vdov), (int)__builtin_offsetof (struct Domain, arealg), (int)__builtin_offsetof (struct Domain, ss), (int)__builtin_offsetof (struct Domain, elemMass));
    return 0;
}

static const int __libchimes_module_init = module_init();
