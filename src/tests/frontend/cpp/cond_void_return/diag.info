InsertText /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 7 20 { 
InsertTextAfterToken /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 9 5  }
InsertText /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 21 5 alias_group_changed(5, (size_t)(1388457574958923572UL), (size_t)(4008084115075384316UL), (size_t)(15018275423251710358UL), (size_t)(17391952349911024751UL), (size_t)(17699046973199516026UL)); 
ReplaceText /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 17 21 len=6 malloc_wrapper
InsertTextAfterToken /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 17 42 , 13342117654489805937UL, 0, 0
ReplaceText /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 18 21 len=6 malloc_wrapper
InsertTextAfterToken /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 18 42 , 4940031483844375921UL, 0, 0
InsertText /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 5 5 new_stack(2, (size_t)(14930464334111296496UL), (size_t)(14930464334111296497UL)); 
InsertText /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 8 9 alias_group_changed(4, (size_t)(4370387167843700367UL), (size_t)(9068519427185823008UL), (size_t)(14930464334111296496UL), (size_t)(14930464334111296497UL)); rm_stack(false, 0UL); 
InsertText /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 13 5 alias_group_changed(4, (size_t)(4370387167843700367UL), (size_t)(9068519427185823008UL), (size_t)(14930464334111296496UL), (size_t)(14930464334111296497UL)); rm_stack(false, 0UL); 
InsertText /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 17 5 new_stack(2, (size_t)(0UL), (size_t)(18293662412874621885UL)); 
InsertText /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 17 5  register_stack_var("main|argc|0", LIBNUMDEBUG_THREAD_NUM(), "i32", (void *)(&argc), 4, 0, 0, 0); 
InsertText /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 17 5  register_stack_var("main|argv|0", LIBNUMDEBUG_THREAD_NUM(), "i8**", (void *)(&argv), 8, 1, 0, 0); 
InsertText /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 23 5 rm_stack(false, 0UL); 
InsertTextAfterToken /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 16 33 init_numdebug(); 
ReplaceTextStart /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 17 265  int *A;  A = ((int *)malloc_wrapper(sizeof(int) * 10, 13342117654489805937UL, 0, 0)); 
ReplaceTextEnd /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 17 343 
ReplaceTextStart /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 18 5  int *B;  B = ((int *)malloc_wrapper(sizeof(int) * 10, 4940031483844375921UL, 0, 0)); 
ReplaceTextEnd /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 18 82 
InsertText /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 20 5  call_lbl_0: calling(0, 0UL, 2, (size_t)(13342117654489805937UL), (size_t)(4940031483844375921UL)); 
InsertText /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 21 197  call_lbl_1: calling(1, 0UL, 0); 
InsertTextBefore /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 17 266  lbl_0: 
InsertTextAfterToken /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 17 272  register_stack_var("main|A|0", LIBNUMDEBUG_THREAD_NUM(), "i32*", (void *)(&A), 8, 1, 0, 0); 
InsertTextAfterToken /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 17 272  if (____numdebug_replaying) { goto lbl_1; } 
InsertTextBefore /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 18 6  lbl_1: 
InsertTextAfterToken /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 18 12  register_stack_var("main|B|0", LIBNUMDEBUG_THREAD_NUM(), "i32*", (void *)(&B), 8, 1, 0, 0); 
InsertTextAfterToken /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 18 12  if (____numdebug_replaying) { goto lbl_2; } 
InsertTextAfterToken /Users/jmg3/num-debug/src/examples/cpp/cond_void_return.cpp 18 12 lbl_2: if (____numdebug_replaying) { int dst = get_next_call(); switch(dst) { case(0): { goto call_lbl_0; } case(1): { goto call_lbl_1; } default: { exit(42); } } } 
